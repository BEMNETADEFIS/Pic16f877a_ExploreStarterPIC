
# 1 "Buzzer.c"

# 68 "../../SampleCode/00-libfiles\stdutils.h"
typedef signed char sint8_t;
typedef unsigned char uint8_t;

typedef signed int sint16_t;
typedef unsigned int uint16_t;

typedef signed long int sint32_t;
typedef unsigned long int uint32_t;

# 177
typedef enum
{
E_FALSE,
E_TRUE
}Boolean_et;


typedef enum
{
E_FAILED,
E_SUCCESS,
E_BUSY,
E_TIMEOUT
}Status_et;


typedef enum
{
E_BINARY=2,
E_DECIMAL = 10,
E_HEX = 16
}NumericSystem_et;


# 299
#pragma config FOSC = HS
#pragma config WDTE = OFF
#pragma config PWRTE = OFF
#pragma config BOREN = OFF
#pragma config LVP = ON
#pragma config CPD = OFF
#pragma config WRT = OFF
#pragma config CP = OFF

# 48 "../../SampleCode/00-libfiles\gpio.h"
typedef enum
{
PA_0,PA_1,PA_2,PA_3,PA_4,PA_5,PA_6,PA_7,
PB_0,PB_1,PB_2,PB_3,PB_4,PB_5,PB_6,PB_7,
PC_0,PC_1,PC_2,PC_3,PC_4,PC_5,PC_6,PC_7,
PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,
PE_0,PE_1,PE_2,PE_3,PE_4,PE_5,PE_6,PE_7,
P_NC = 0xff
}gpioPins_et;

# 66
void GPIO_PinDirection(gpioPins_et enm_pinNumber, uint8_t var_pinDirn_u8);
void GPIO_PinWrite(gpioPins_et enm_pinNumber, uint8_t var_pinValue_u8);
uint8_t GPIO_PinRead(gpioPins_et enm_pinNumber);

# 14 "Buzzer.c"
void main()
{
uint8_t value;

GPIO_PinDirection(PD_2,0x01u);
GPIO_PinDirection(PD_0,0x00u);

while(1)
{

value = GPIO_PinRead(PD_2);
GPIO_PinWrite(PD_0,!value);
}
}

