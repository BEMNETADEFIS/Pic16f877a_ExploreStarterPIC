

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Jul 29 12:10:35 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0005                     _PORTA	set	5
   204  0006                     _PORTB	set	6
   205  0007                     _PORTC	set	7
   206  0008                     _PORTD	set	8
   207  0009                     _PORTE	set	9
   208  001A                     _RCREG	set	26
   209  0018                     _RCSTA	set	24
   210  0001                     _TMR0	set	1
   211  0019                     _TXREG	set	25
   212  005F                     _GIE	set	95
   213  005C                     _INTE	set	92
   214  0059                     _INTF	set	89
   215  005E                     _PEIE	set	94
   216  0065                     _RCIF	set	101
   217  005D                     _TMR0IE	set	93
   218  005A                     _TMR0IF	set	90
   219  0080                     _TMR1ON	set	128
   220  0064                     _TXIF	set	100
   221  0081                     _OPTION_REG	set	129
   222  0099                     _SPBRG	set	153
   223  0085                     _TRISA	set	133
   224  0086                     _TRISB	set	134
   225  0087                     _TRISC	set	135
   226  0088                     _TRISD	set	136
   227  0089                     _TRISE	set	137
   228  0098                     _TXSTA	set	152
   229                           
   230                           	psect	strings
   231  0504                     __pstrings:	
   232  0504                     stringtab:	
   233  0504                     __stringtab:	
   234  0504                     stringcode:	
   235                           ;	String table - string pointers are 1 byte each
   236                           
   237  0504                     stringdir:	
   238  0504  3005               	movlw	high stringdir
   239  0505  008A               	movwf	10
   240  0506  0804               	movf	4,w
   241  0507  0A84               	incf	4,f
   242  0508  0782               	addwf	2,f
   243  0509                     __stringbase:	
   244  0509  3400               	retlw	0
   245  050A                     __end_of__stringtab:	
   246  050A                     STR_1:	
   247  050A  3449               	retlw	73	;'I'
   248  050B  346E               	retlw	110	;'n'
   249  050C  3469               	retlw	105	;'i'
   250  050D  3474               	retlw	116	;'t'
   251  050E  3420               	retlw	32	;' '
   252  050F  3444               	retlw	68	;'D'
   253  0510  346F               	retlw	111	;'o'
   254  0511  346E               	retlw	110	;'n'
   255  0512  3465               	retlw	101	;'e'
   256  0513  3400               	retlw	0
   257  0514                     STR_2:	
   258  0514  340A               	retlw	10
   259  0515  340D               	retlw	13
   260  0516  3476               	retlw	118	;'v'
   261  0517  3461               	retlw	97	;'a'
   262  0518  346C               	retlw	108	;'l'
   263  0519  343A               	retlw	58	;':'
   264  051A  3425               	retlw	37	;'%'
   265  051B  3458               	retlw	88	;'X'
   266  051C  3400               	retlw	0
   267                           
   268                           ; #config settings
   269  0000                     
   270                           	psect	cinit
   271  0015                     start_initialization:	
   272  0015                     __initialization:	
   273                           
   274                           ; Clear objects allocated to COMMON
   275  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   276  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   277  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   278  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   279  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   280                           
   281                           ; Clear objects allocated to BANK0
   282  001A  01EB               	clrf	__pbssBANK0& (0+127)
   283  001B  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   284  001C  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   285  001D  01EE               	clrf	(__pbssBANK0+3)& (0+127)
   286                           
   287                           ; Clear objects allocated to BANK1
   288  001E  1683               	bsf	3,5	;RP0=1, select bank1
   289  001F  1303               	bcf	3,6	;RP1=0, select bank1
   290  0020  01A0               	clrf	__pbssBANK1& (0+127)
   291  0021  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   292  0022  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   293  0023  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   294  0024  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   295  0025  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   296  0026                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  0026                     __end_of__initialization:	
   300  0026  0183               	clrf	3
   301  0027  120A  118A  2C97   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMMON
   304  0078                     __pbssCOMMON:	
   305  0078                     _bitCnt:	
   306  0078                     	ds	2
   307  007A                     _timeValue:	
   308  007A                     	ds	2
   309  007C                     _OverFlowFlag:	
   310  007C                     	ds	1
   311                           
   312                           	psect	bssBANK0
   313  006B                     __pbssBANK0:	
   314  006B                     _newChar:	
   315  006B                     	ds	4
   316                           
   317                           	psect	bssBANK1
   318  00A0                     __pbssBANK1:	
   319  00A0                     _bitPattern:	
   320  00A0                     	ds	4
   321  00A4                     _flag:	
   322  00A4                     	ds	2
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:	
   326  0070                     ?_UART_TxString:	
   327  0070                     ?_interrupt_isr:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ??_interrupt_isr:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_UART_TxChar:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 2 bytes @ 0x0
   341  0070                     	ds	8
   342                           
   343                           	psect	cstackBANK0
   344  0020                     __pcstackBANK0:	
   345  0020                     ??_UART_TxChar:	
   346  0020                     ?___lldiv:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0020                     UART_TxChar@v_uartData_u8:	
   350                           ; 4 bytes @ 0x0
   351                           
   352  0020                     ___lldiv@divisor:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 4 bytes @ 0x0
   357  0020                     	ds	1
   358  0021                     ??_UART_TxString:	
   359                           
   360                           ; 1 bytes @ 0x1
   361  0021                     	ds	1
   362  0022                     UART_TxString@ptr_string:	
   363                           
   364                           ; 1 bytes @ 0x2
   365  0022                     	ds	2
   366  0024                     ___lldiv@dividend:	
   367                           
   368                           ; 4 bytes @ 0x4
   369  0024                     	ds	4
   370  0028                     ??___lldiv:	
   371                           
   372                           ; 1 bytes @ 0x8
   373  0028                     	ds	1
   374  0029                     ___lldiv@quotient:	
   375                           
   376                           ; 4 bytes @ 0x9
   377  0029                     	ds	4
   378  002D                     ___lldiv@counter:	
   379                           
   380                           ; 1 bytes @ 0xD
   381  002D                     	ds	1
   382  002E                     ?_UART_SetBaudRate:	
   383  002E                     ?___bmul:	
   384                           ; 1 bytes @ 0xE
   385                           
   386  002E                     ___bmul@multiplicand:	
   387                           ; 1 bytes @ 0xE
   388                           
   389  002E                     UART_SetBaudRate@v_baudRate_u32:	
   390                           ; 1 bytes @ 0xE
   391                           
   392                           
   393                           ; 4 bytes @ 0xE
   394  002E                     	ds	1
   395  002F                     ??___bmul:	
   396                           
   397                           ; 1 bytes @ 0xF
   398  002F                     	ds	1
   399  0030                     ___bmul@product:	
   400                           
   401                           ; 1 bytes @ 0x10
   402  0030                     	ds	1
   403  0031                     ___bmul@multiplier:	
   404                           
   405                           ; 1 bytes @ 0x11
   406  0031                     	ds	1
   407  0032                     ??_UART_SetBaudRate:	
   408  0032                     ?_UART_TxNumber:	
   409                           ; 1 bytes @ 0x12
   410                           
   411  0032                     UART_TxNumber@v_number_u32:	
   412                           ; 1 bytes @ 0x12
   413                           
   414                           
   415                           ; 4 bytes @ 0x12
   416  0032                     	ds	4
   417  0036                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   418                           
   419                           ; 1 bytes @ 0x16
   420  0036                     	ds	1
   421  0037                     ??_UART_TxNumber:	
   422  0037                     UART_SetBaudRate@RegValue:	
   423                           ; 1 bytes @ 0x17
   424                           
   425                           
   426                           ; 1 bytes @ 0x17
   427  0037                     	ds	1
   428  0038                     ?_UART_Init:	
   429  0038                     UART_Init@v_baudRate_u32:	
   430                           ; 1 bytes @ 0x18
   431                           
   432                           
   433                           ; 4 bytes @ 0x18
   434  0038                     	ds	4
   435  003C                     ??_UART_Init:	
   436                           
   437                           ; 1 bytes @ 0x1C
   438  003C                     	ds	7
   439  0043                     UART_TxNumber@a:	
   440                           
   441                           ; 10 bytes @ 0x23
   442  0043                     	ds	10
   443  004D                     _UART_TxNumber$173:	
   444                           
   445                           ; 2 bytes @ 0x2D
   446  004D                     	ds	2
   447  004F                     UART_TxNumber@v_numericSystem_u8:	
   448                           
   449                           ; 1 bytes @ 0x2F
   450  004F                     	ds	1
   451  0050                     UART_TxNumber@i:	
   452                           
   453                           ; 1 bytes @ 0x30
   454  0050                     	ds	1
   455  0051                     ?_UART_Printf:	
   456                           
   457                           ; 1 bytes @ 0x31
   458  0051                     	ds	4
   459  0055                     ??_UART_Printf:	
   460                           
   461                           ; 1 bytes @ 0x35
   462  0055                     	ds	2
   463  0057                     UART_Printf@str:	
   464                           
   465                           ; 1 bytes @ 0x37
   466  0057                     	ds	1
   467  0058                     UART_Printf@argList:	
   468                           
   469                           ; 1 bytes @ 0x38
   470  0058                     	ds	1
   471  0059                     UART_Printf@v_num_s32:	
   472                           
   473                           ; 4 bytes @ 0x39
   474  0059                     	ds	4
   475  005D                     UART_Printf@v_num_s16:	
   476                           
   477                           ; 2 bytes @ 0x3D
   478  005D                     	ds	2
   479  005F                     UART_Printf@v_num_u32:	
   480                           
   481                           ; 4 bytes @ 0x3F
   482  005F                     	ds	4
   483  0063                     UART_Printf@v_num_u16:	
   484                           
   485                           ; 2 bytes @ 0x43
   486  0063                     	ds	2
   487  0065                     UART_Printf@ptr:	
   488                           
   489                           ; 1 bytes @ 0x45
   490  0065                     	ds	1
   491  0066                     UART_Printf@ch:	
   492                           
   493                           ; 1 bytes @ 0x46
   494  0066                     	ds	1
   495  0067                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   496                           
   497                           ; 1 bytes @ 0x47
   498  0067                     	ds	1
   499  0068                     UART_Printf@argp:	
   500                           
   501                           ; 1 bytes @ 0x48
   502  0068                     	ds	1
   503  0069                     ??_main:	
   504  0069                     main@oldCnt:	
   505                           ; 1 bytes @ 0x49
   506                           
   507                           
   508                           ; 2 bytes @ 0x49
   509  0069                     	ds	2
   510                           
   511                           	psect	maintext
   512  0497                     __pmaintext:	
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 55 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  oldCnt          2   73[BANK0 ] int 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  2   56[None  ] int 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : B00/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       2       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       2       0       0       0
   536 ;;Total ram usage:        2 bytes
   537 ;; Hardware stack levels required when called:    4
   538 ;; This function calls:
   539 ;;		_UART_Init
   540 ;;		_UART_Printf
   541 ;;		_UART_TxString
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _main
   549  0497                     _main:	
   550                           
   551                           ;main.c: 56: int oldCnt=0;
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   555  0497  1283               	bcf	3,5	;RP0=0, select bank0
   556  0498  1303               	bcf	3,6	;RP1=0, select bank0
   557  0499  01E9               	clrf	main@oldCnt
   558  049A  01EA               	clrf	main@oldCnt+1
   559                           
   560                           ;main.c: 57: TRISB = 0x01;
   561  049B  3001               	movlw	1
   562  049C  1683               	bsf	3,5	;RP0=1, select bank1
   563  049D  1303               	bcf	3,6	;RP1=0, select bank1
   564  049E  0086               	movwf	6	;volatile
   565                           
   566                           ;main.c: 58: PORTB = 0x01;
   567  049F  3001               	movlw	1
   568  04A0  1283               	bcf	3,5	;RP0=0, select bank0
   569  04A1  1303               	bcf	3,6	;RP1=0, select bank0
   570  04A2  0086               	movwf	6	;volatile
   571                           
   572                           ;main.c: 60: UART_Init(9600);
   573  04A3  3000               	movlw	0
   574  04A4  00BB               	movwf	UART_Init@v_baudRate_u32+3
   575  04A5  3000               	movlw	0
   576  04A6  00BA               	movwf	UART_Init@v_baudRate_u32+2
   577  04A7  3025               	movlw	37
   578  04A8  00B9               	movwf	UART_Init@v_baudRate_u32+1
   579  04A9  3080               	movlw	128
   580  04AA  00B8               	movwf	UART_Init@v_baudRate_u32
   581  04AB  120A  118A  251D  120A  118A  	fcall	_UART_Init
   582                           
   583                           ;main.c: 62: OPTION_REG = 0x07;
   584  04B0  3007               	movlw	7
   585  04B1  1683               	bsf	3,5	;RP0=1, select bank1
   586  04B2  1303               	bcf	3,6	;RP1=0, select bank1
   587  04B3  0081               	movwf	1	;volatile
   588                           
   589                           ;main.c: 63: TMR0 = 236;;
   590  04B4  30EC               	movlw	236
   591  04B5  1283               	bcf	3,5	;RP0=0, select bank0
   592  04B6  1303               	bcf	3,6	;RP1=0, select bank0
   593  04B7  0081               	movwf	1	;volatile
   594                           
   595                           ;main.c: 64: TMR0IE=1;
   596  04B8  168B               	bsf	11,5	;volatile
   597                           
   598                           ;main.c: 65: INTE=1;
   599  04B9  160B               	bsf	11,4	;volatile
   600                           
   601                           ;main.c: 66: GIE = 1;
   602  04BA  178B               	bsf	11,7	;volatile
   603                           
   604                           ;main.c: 67: PEIE = 1;
   605  04BB  170B               	bsf	11,6	;volatile
   606                           
   607                           ;main.c: 68: TMR1ON = 1;
   608  04BC  1410               	bsf	16,0	;volatile
   609                           
   610                           ;main.c: 70: UART_TxString("Init Done");
   611  04BD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   612  04BE  120A  118A  24E4  120A  118A  	fcall	_UART_TxString
   613  04C3                     l1489:	
   614                           ;main.c: 71: while (1) {
   615                           
   616                           
   617                           ;main.c: 72: if (newChar != 0) {
   618  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   619  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   620  04C5  086E               	movf	_newChar+3,w
   621  04C6  046D               	iorwf	_newChar+2,w
   622  04C7  046C               	iorwf	_newChar+1,w
   623  04C8  046B               	iorwf	_newChar,w
   624  04C9  1903               	skipnz
   625  04CA  2CC3               	goto	l1489
   626                           
   627                           ;main.c: 73: UART_Printf("\n\rval:%X", newChar);
   628  04CB  086E               	movf	_newChar+3,w
   629  04CC  00D4               	movwf	?_UART_Printf+3
   630  04CD  086D               	movf	_newChar+2,w
   631  04CE  00D3               	movwf	?_UART_Printf+2
   632  04CF  086C               	movf	_newChar+1,w
   633  04D0  00D2               	movwf	?_UART_Printf+1
   634  04D1  086B               	movf	_newChar,w
   635  04D2  00D1               	movwf	?_UART_Printf
   636  04D3  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   637  04D4  120A  118A  202A  120A  118A  	fcall	_UART_Printf
   638                           
   639                           ;main.c: 74: newChar = 0;
   640  04D9  3000               	movlw	0
   641  04DA  1283               	bcf	3,5	;RP0=0, select bank0
   642  04DB  1303               	bcf	3,6	;RP1=0, select bank0
   643  04DC  00EE               	movwf	_newChar+3
   644  04DD  3000               	movlw	0
   645  04DE  00ED               	movwf	_newChar+2
   646  04DF  3000               	movlw	0
   647  04E0  00EC               	movwf	_newChar+1
   648  04E1  3000               	movlw	0
   649  04E2  00EB               	movwf	_newChar
   650  04E3  2CC3               	goto	l1489
   651  04E4                     __end_of_main:	
   652                           
   653                           	psect	text1
   654  002A                     __ptext1:	
   655 ;; *************** function _UART_Printf *****************
   656 ;; Defined at:
   657 ;;		line 413 in file "../../SampleCode/00-libfiles/uart.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  argList         1    wreg     PTR const unsigned char 
   660 ;;		 -> STR_2(9), 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  argList         1   56[BANK0 ] PTR const unsigned char 
   663 ;;		 -> STR_2(9), 
   664 ;;  v_num_u32       4   63[BANK0 ] unsigned long 
   665 ;;  v_num_s32       4   57[BANK0 ] long 
   666 ;;  v_num_u16       2   67[BANK0 ] unsigned int 
   667 ;;  v_num_s16       2   61[BANK0 ] int 
   668 ;;  argp            1   72[BANK0 ] PTR void [1]
   669 ;;		 -> ?_UART_Printf(1), 
   670 ;;  v_numOfDigit    1   71[BANK0 ] unsigned char 
   671 ;;  ch              1   70[BANK0 ] unsigned char 
   672 ;;  ptr             1   69[BANK0 ] PTR const unsigned char 
   673 ;;		 -> STR_2(9), 
   674 ;;  str             1   55[BANK0 ] PTR unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       4       0       0       0
   685 ;;      Locals:         0      18       0       0       0
   686 ;;      Temps:          0       2       0       0       0
   687 ;;      Totals:         0      24       0       0       0
   688 ;;Total ram usage:       24 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    3
   691 ;; This function calls:
   692 ;;		_UART_TxChar
   693 ;;		_UART_TxNumber
   694 ;;		_UART_TxString
   695 ;;		___bmul
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _UART_Printf
   703  002A                     _UART_Printf:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   707                           ;UART_Printf@argList stored from wreg
   708  002A  1283               	bcf	3,5	;RP0=0, select bank0
   709  002B  1303               	bcf	3,6	;RP1=0, select bank0
   710  002C  00D8               	movwf	UART_Printf@argList
   711                           
   712                           ;uart.c: 415: const char *ptr;
   713                           ;uart.c: 416: va_list argp;
   714                           ;uart.c: 417: sint16_t v_num_s16;
   715                           ;uart.c: 418: sint32_t v_num_s32;
   716                           ;uart.c: 419: uint16_t v_num_u16;
   717                           ;uart.c: 420: uint32_t v_num_u32;
   718                           ;uart.c: 421: char *str;
   719                           ;uart.c: 422: char ch;
   720                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   721                           ;uart.c: 429: *argp = __va_start();
   722  002D  3051               	movlw	(low (?_UART_Printf| 0))& (0+255)
   723  002E  00D5               	movwf	??_UART_Printf
   724  002F  0855               	movf	??_UART_Printf,w
   725  0030  00E8               	movwf	UART_Printf@argp
   726                           
   727                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   728  0031  0858               	movf	UART_Printf@argList,w
   729  0032  00D5               	movwf	??_UART_Printf
   730  0033  0855               	movf	??_UART_Printf,w
   731  0034  00E5               	movwf	UART_Printf@ptr
   732  0035                     l1425:	
   733  0035  0865               	movf	UART_Printf@ptr,w
   734  0036  0084               	movwf	4
   735  0037  120A  118A  2504  120A  118A  	fcall	stringdir
   736  003C  3A00               	xorlw	0
   737  003D  1903               	btfsc	3,2
   738  003E  0008               	return
   739                           
   740                           ;uart.c: 433: {
   741                           ;uart.c: 435: ch= *ptr;
   742  003F  0865               	movf	UART_Printf@ptr,w
   743  0040  0084               	movwf	4
   744  0041  120A  118A  2504  120A  118A  	fcall	stringdir
   745  0046  00D5               	movwf	??_UART_Printf
   746  0047  0855               	movf	??_UART_Printf,w
   747  0048  00E6               	movwf	UART_Printf@ch
   748                           
   749                           ;uart.c: 436: if(ch == '%')
   750  0049  3025               	movlw	37
   751  004A  0666               	xorwf	UART_Printf@ch,w
   752  004B  1D03               	btfss	3,2
   753  004C  2A32               	goto	l1421
   754                           
   755                           ;uart.c: 437: {
   756                           ;uart.c: 438: ptr++;
   757  004D  3001               	movlw	1
   758  004E  00D5               	movwf	??_UART_Printf
   759  004F  0855               	movf	??_UART_Printf,w
   760  0050  07E5               	addwf	UART_Printf@ptr,f
   761                           
   762                           ;uart.c: 439: ch = *ptr;
   763  0051  0865               	movf	UART_Printf@ptr,w
   764  0052  0084               	movwf	4
   765  0053  120A  118A  2504  120A  118A  	fcall	stringdir
   766  0058  00D5               	movwf	??_UART_Printf
   767  0059  0855               	movf	??_UART_Printf,w
   768  005A  00E6               	movwf	UART_Printf@ch
   769                           
   770                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   771  005B  3030               	movlw	48
   772  005C  0266               	subwf	UART_Printf@ch,w
   773  005D  1C03               	skipc
   774  005E  288C               	goto	l1333
   775  005F  303A               	movlw	58
   776  0060  0266               	subwf	UART_Printf@ch,w
   777  0061  1803               	skipnc
   778  0062  288C               	goto	l1333
   779                           
   780                           ;uart.c: 441: {
   781                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   782  0063  01E7               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
   783  0064                     l1329:	
   784                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   785                           
   786  0064  3030               	movlw	48
   787  0065  0266               	subwf	UART_Printf@ch,w
   788  0066  1C03               	skipc
   789  0067  2A00               	goto	l1419
   790  0068  303A               	movlw	58
   791  0069  0266               	subwf	UART_Printf@ch,w
   792  006A  1803               	btfsc	3,0
   793  006B  2A00               	goto	l1419
   794                           
   795                           ;uart.c: 444: {
   796                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   797  006C  300A               	movlw	10
   798  006D  00D5               	movwf	??_UART_Printf
   799  006E  0855               	movf	??_UART_Printf,w
   800  006F  00AE               	movwf	___bmul@multiplicand
   801  0070  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   802  0071  120A  118A  2533  120A  118A  	fcall	___bmul
   803  0076  1283               	bcf	3,5	;RP0=0, select bank0
   804  0077  1303               	bcf	3,6	;RP1=0, select bank0
   805  0078  0766               	addwf	UART_Printf@ch,w
   806  0079  3ED0               	addlw	208
   807  007A  00D6               	movwf	??_UART_Printf+1
   808  007B  0856               	movf	??_UART_Printf+1,w
   809  007C  00E7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   810                           
   811                           ;uart.c: 446: ptr++;
   812  007D  3001               	movlw	1
   813  007E  00D5               	movwf	??_UART_Printf
   814  007F  0855               	movf	??_UART_Printf,w
   815  0080  07E5               	addwf	UART_Printf@ptr,f
   816                           
   817                           ;uart.c: 447: ch = *ptr;
   818  0081  0865               	movf	UART_Printf@ptr,w
   819  0082  0084               	movwf	4
   820  0083  120A  118A  2504  120A  118A  	fcall	stringdir
   821  0088  00D5               	movwf	??_UART_Printf
   822  0089  0855               	movf	??_UART_Printf,w
   823  008A  00E6               	movwf	UART_Printf@ch
   824  008B  2864               	goto	l1329
   825  008C                     l1333:	
   826                           ;uart.c: 448: }
   827                           ;uart.c: 449: }
   828                           
   829                           
   830                           ;uart.c: 450: else
   831                           ;uart.c: 451: {
   832                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   833  008C  30FF               	movlw	255
   834  008D  00D5               	movwf	??_UART_Printf
   835  008E  0855               	movf	??_UART_Printf,w
   836  008F  00E7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   837                           
   838                           ;uart.c: 453: }
   839                           ;uart.c: 456: switch(ch)
   840  0090  2A00               	goto	l1419
   841  0091                     l1335:	
   842                           ;uart.c: 457: {
   843                           ;uart.c: 458: case 'C':
   844                           
   845                           
   846                           ;uart.c: 459: case 'c':
   847                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   848  0091  0868               	movf	UART_Printf@argp,w
   849  0092  0084               	movwf	4
   850  0093  1383               	bcf	3,7	;select IRP bank0
   851  0094  0800               	movf	0,w
   852  0095  00D5               	movwf	??_UART_Printf
   853  0096  0855               	movf	??_UART_Printf,w
   854  0097  00E6               	movwf	UART_Printf@ch
   855  0098  3002               	movlw	2
   856  0099  00D5               	movwf	??_UART_Printf
   857  009A  0855               	movf	??_UART_Printf,w
   858  009B  07E8               	addwf	UART_Printf@argp,f
   859  009C  2A32               	goto	l1421
   860  009D                     l1341:	
   861                           ;uart.c: 464: case 'd':
   862                           
   863                           ;uart.c: 462: break;
   864                           
   865                           ;uart.c: 461: UART_TxChar(ch);
   866                           
   867                           
   868                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   869  009D  1283               	bcf	3,5	;RP0=0, select bank0
   870  009E  1303               	bcf	3,6	;RP1=0, select bank0
   871  009F  0868               	movf	UART_Printf@argp,w
   872  00A0  0084               	movwf	4
   873  00A1  1383               	bcf	3,7	;select IRP bank0
   874  00A2  0800               	movf	0,w
   875  00A3  00DD               	movwf	UART_Printf@v_num_s16
   876  00A4  0A84               	incf	4,f
   877  00A5  0800               	movf	0,w
   878  00A6  00DE               	movwf	UART_Printf@v_num_s16+1
   879  00A7  3002               	movlw	2
   880  00A8  00D5               	movwf	??_UART_Printf
   881  00A9  0855               	movf	??_UART_Printf,w
   882  00AA  07E8               	addwf	UART_Printf@argp,f
   883                           
   884                           ;uart.c: 466: if(v_num_s16<0)
   885  00AB  1FDE               	btfss	UART_Printf@v_num_s16+1,7
   886  00AC  28B8               	goto	l1351
   887                           
   888                           ;uart.c: 467: {
   889                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   890  00AD  09DD               	comf	UART_Printf@v_num_s16,f
   891  00AE  09DE               	comf	UART_Printf@v_num_s16+1,f
   892  00AF  0ADD               	incf	UART_Printf@v_num_s16,f
   893  00B0  1903               	skipnz
   894  00B1  0ADE               	incf	UART_Printf@v_num_s16+1,f
   895                           
   896                           ;uart.c: 469: UART_TxChar('-');
   897  00B2  302D               	movlw	45
   898  00B3  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
   899  00B8                     l1351:	
   900                           
   901                           ;uart.c: 470: }
   902                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   903  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   904  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   905  00BA  085D               	movf	UART_Printf@v_num_s16,w
   906  00BB  00B2               	movwf	UART_TxNumber@v_number_u32
   907  00BC  085E               	movf	UART_Printf@v_num_s16+1,w
   908  00BD  00B3               	movwf	UART_TxNumber@v_number_u32+1
   909  00BE  3000               	movlw	0
   910  00BF  1BB3               	btfsc	UART_TxNumber@v_number_u32+1,7
   911  00C0  30FF               	movlw	255
   912  00C1  00B4               	movwf	UART_TxNumber@v_number_u32+2
   913  00C2  00B5               	movwf	UART_TxNumber@v_number_u32+3
   914  00C3  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   915  00C4  00D5               	movwf	??_UART_Printf
   916  00C5  0855               	movf	??_UART_Printf,w
   917  00C6  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   918  00C7  300A               	movlw	10
   919  00C8  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
   920                           
   921                           ;uart.c: 472: break;
   922  00CD  2A38               	goto	l1423
   923  00CE                     l1353:	
   924                           ;uart.c: 474: case 'D':
   925                           
   926                           
   927                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   928  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   929  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   930  00D0  0868               	movf	UART_Printf@argp,w
   931  00D1  0084               	movwf	4
   932  00D2  1383               	bcf	3,7	;select IRP bank0
   933  00D3  0800               	movf	0,w
   934  00D4  00D9               	movwf	UART_Printf@v_num_s32
   935  00D5  0A84               	incf	4,f
   936  00D6  0800               	movf	0,w
   937  00D7  00DA               	movwf	UART_Printf@v_num_s32+1
   938  00D8  0A84               	incf	4,f
   939  00D9  0800               	movf	0,w
   940  00DA  00DB               	movwf	UART_Printf@v_num_s32+2
   941  00DB  0A84               	incf	4,f
   942  00DC  0800               	movf	0,w
   943  00DD  00DC               	movwf	UART_Printf@v_num_s32+3
   944  00DE  3004               	movlw	4
   945  00DF  00D5               	movwf	??_UART_Printf
   946  00E0  0855               	movf	??_UART_Printf,w
   947  00E1  07E8               	addwf	UART_Printf@argp,f
   948                           
   949                           ;uart.c: 476: if(v_num_s32<0)
   950  00E2  1FDC               	btfss	UART_Printf@v_num_s32+3,7
   951  00E3  28F5               	goto	l1363
   952                           
   953                           ;uart.c: 477: {
   954                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   955  00E4  09D9               	comf	UART_Printf@v_num_s32,f
   956  00E5  09DA               	comf	UART_Printf@v_num_s32+1,f
   957  00E6  09DB               	comf	UART_Printf@v_num_s32+2,f
   958  00E7  09DC               	comf	UART_Printf@v_num_s32+3,f
   959  00E8  0AD9               	incf	UART_Printf@v_num_s32,f
   960  00E9  1903               	skipnz
   961  00EA  0ADA               	incf	UART_Printf@v_num_s32+1,f
   962  00EB  1903               	skipnz
   963  00EC  0ADB               	incf	UART_Printf@v_num_s32+2,f
   964  00ED  1903               	skipnz
   965  00EE  0ADC               	incf	UART_Printf@v_num_s32+3,f
   966                           
   967                           ;uart.c: 479: UART_TxChar('-');
   968  00EF  302D               	movlw	45
   969  00F0  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
   970  00F5                     l1363:	
   971                           
   972                           ;uart.c: 480: }
   973                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   974  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   975  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   976  00F7  085C               	movf	UART_Printf@v_num_s32+3,w
   977  00F8  00B5               	movwf	UART_TxNumber@v_number_u32+3
   978  00F9  085B               	movf	UART_Printf@v_num_s32+2,w
   979  00FA  00B4               	movwf	UART_TxNumber@v_number_u32+2
   980  00FB  085A               	movf	UART_Printf@v_num_s32+1,w
   981  00FC  00B3               	movwf	UART_TxNumber@v_number_u32+1
   982  00FD  0859               	movf	UART_Printf@v_num_s32,w
   983  00FE  00B2               	movwf	UART_TxNumber@v_number_u32
   984  00FF  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   985  0100  00D5               	movwf	??_UART_Printf
   986  0101  0855               	movf	??_UART_Printf,w
   987  0102  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   988  0103  300A               	movlw	10
   989  0104  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
   990                           
   991                           ;uart.c: 482: break;
   992  0109  2A38               	goto	l1423
   993  010A                     l1365:	
   994                           ;uart.c: 484: case 'u':
   995                           
   996                           
   997                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   998  010A  1283               	bcf	3,5	;RP0=0, select bank0
   999  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1000  010C  0868               	movf	UART_Printf@argp,w
  1001  010D  0084               	movwf	4
  1002  010E  1383               	bcf	3,7	;select IRP bank0
  1003  010F  0800               	movf	0,w
  1004  0110  00E3               	movwf	UART_Printf@v_num_u16
  1005  0111  0A84               	incf	4,f
  1006  0112  0800               	movf	0,w
  1007  0113  00E4               	movwf	UART_Printf@v_num_u16+1
  1008  0114  3002               	movlw	2
  1009  0115  00D5               	movwf	??_UART_Printf
  1010  0116  0855               	movf	??_UART_Printf,w
  1011  0117  07E8               	addwf	UART_Printf@argp,f
  1012                           
  1013                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1014  0118  0863               	movf	UART_Printf@v_num_u16,w
  1015  0119  00B2               	movwf	UART_TxNumber@v_number_u32
  1016  011A  0864               	movf	UART_Printf@v_num_u16+1,w
  1017  011B  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1018  011C  01B4               	clrf	UART_TxNumber@v_number_u32+2
  1019  011D  01B5               	clrf	UART_TxNumber@v_number_u32+3
  1020  011E  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1021  011F  00D5               	movwf	??_UART_Printf
  1022  0120  0855               	movf	??_UART_Printf,w
  1023  0121  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1024  0122  300A               	movlw	10
  1025  0123  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1026                           
  1027                           ;uart.c: 487: break;
  1028  0128  2A38               	goto	l1423
  1029  0129                     l1371:	
  1030                           ;uart.c: 489: case 'U':
  1031                           
  1032                           
  1033                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1034  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1035  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1036  012B  0868               	movf	UART_Printf@argp,w
  1037  012C  0084               	movwf	4
  1038  012D  1383               	bcf	3,7	;select IRP bank0
  1039  012E  0800               	movf	0,w
  1040  012F  00DF               	movwf	UART_Printf@v_num_u32
  1041  0130  0A84               	incf	4,f
  1042  0131  0800               	movf	0,w
  1043  0132  00E0               	movwf	UART_Printf@v_num_u32+1
  1044  0133  0A84               	incf	4,f
  1045  0134  0800               	movf	0,w
  1046  0135  00E1               	movwf	UART_Printf@v_num_u32+2
  1047  0136  0A84               	incf	4,f
  1048  0137  0800               	movf	0,w
  1049  0138  00E2               	movwf	UART_Printf@v_num_u32+3
  1050  0139  3004               	movlw	4
  1051  013A  00D5               	movwf	??_UART_Printf
  1052  013B  0855               	movf	??_UART_Printf,w
  1053  013C  07E8               	addwf	UART_Printf@argp,f
  1054                           
  1055                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1056  013D  0862               	movf	UART_Printf@v_num_u32+3,w
  1057  013E  00B5               	movwf	UART_TxNumber@v_number_u32+3
  1058  013F  0861               	movf	UART_Printf@v_num_u32+2,w
  1059  0140  00B4               	movwf	UART_TxNumber@v_number_u32+2
  1060  0141  0860               	movf	UART_Printf@v_num_u32+1,w
  1061  0142  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1062  0143  085F               	movf	UART_Printf@v_num_u32,w
  1063  0144  00B2               	movwf	UART_TxNumber@v_number_u32
  1064  0145  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1065  0146  00D5               	movwf	??_UART_Printf
  1066  0147  0855               	movf	??_UART_Printf,w
  1067  0148  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1068  0149  300A               	movlw	10
  1069  014A  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1070                           
  1071                           ;uart.c: 492: break;
  1072  014F  2A38               	goto	l1423
  1073  0150                     l1377:	
  1074                           ;uart.c: 494: case 'x':
  1075                           
  1076                           
  1077                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1078  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0152  0868               	movf	UART_Printf@argp,w
  1081  0153  0084               	movwf	4
  1082  0154  1383               	bcf	3,7	;select IRP bank0
  1083  0155  0800               	movf	0,w
  1084  0156  00E3               	movwf	UART_Printf@v_num_u16
  1085  0157  0A84               	incf	4,f
  1086  0158  0800               	movf	0,w
  1087  0159  00E4               	movwf	UART_Printf@v_num_u16+1
  1088  015A  3002               	movlw	2
  1089  015B  00D5               	movwf	??_UART_Printf
  1090  015C  0855               	movf	??_UART_Printf,w
  1091  015D  07E8               	addwf	UART_Printf@argp,f
  1092                           
  1093                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1094  015E  0863               	movf	UART_Printf@v_num_u16,w
  1095  015F  00B2               	movwf	UART_TxNumber@v_number_u32
  1096  0160  0864               	movf	UART_Printf@v_num_u16+1,w
  1097  0161  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1098  0162  01B4               	clrf	UART_TxNumber@v_number_u32+2
  1099  0163  01B5               	clrf	UART_TxNumber@v_number_u32+3
  1100  0164  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1101  0165  00D5               	movwf	??_UART_Printf
  1102  0166  0855               	movf	??_UART_Printf,w
  1103  0167  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1104  0168  3010               	movlw	16
  1105  0169  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1106                           
  1107                           ;uart.c: 497: break;
  1108  016E  2A38               	goto	l1423
  1109  016F                     l1383:	
  1110                           ;uart.c: 499: case 'X':
  1111                           
  1112                           
  1113                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1114  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0171  0868               	movf	UART_Printf@argp,w
  1117  0172  0084               	movwf	4
  1118  0173  1383               	bcf	3,7	;select IRP bank0
  1119  0174  0800               	movf	0,w
  1120  0175  00DF               	movwf	UART_Printf@v_num_u32
  1121  0176  0A84               	incf	4,f
  1122  0177  0800               	movf	0,w
  1123  0178  00E0               	movwf	UART_Printf@v_num_u32+1
  1124  0179  0A84               	incf	4,f
  1125  017A  0800               	movf	0,w
  1126  017B  00E1               	movwf	UART_Printf@v_num_u32+2
  1127  017C  0A84               	incf	4,f
  1128  017D  0800               	movf	0,w
  1129  017E  00E2               	movwf	UART_Printf@v_num_u32+3
  1130  017F  3004               	movlw	4
  1131  0180  00D5               	movwf	??_UART_Printf
  1132  0181  0855               	movf	??_UART_Printf,w
  1133  0182  07E8               	addwf	UART_Printf@argp,f
  1134                           
  1135                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1136  0183  0862               	movf	UART_Printf@v_num_u32+3,w
  1137  0184  00B5               	movwf	UART_TxNumber@v_number_u32+3
  1138  0185  0861               	movf	UART_Printf@v_num_u32+2,w
  1139  0186  00B4               	movwf	UART_TxNumber@v_number_u32+2
  1140  0187  0860               	movf	UART_Printf@v_num_u32+1,w
  1141  0188  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1142  0189  085F               	movf	UART_Printf@v_num_u32,w
  1143  018A  00B2               	movwf	UART_TxNumber@v_number_u32
  1144  018B  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1145  018C  00D5               	movwf	??_UART_Printf
  1146  018D  0855               	movf	??_UART_Printf,w
  1147  018E  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1148  018F  3010               	movlw	16
  1149  0190  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1150                           
  1151                           ;uart.c: 502: break;
  1152  0195  2A38               	goto	l1423
  1153  0196                     l1389:	
  1154                           ;uart.c: 505: case 'b':
  1155                           
  1156                           
  1157                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1158  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0198  0868               	movf	UART_Printf@argp,w
  1161  0199  0084               	movwf	4
  1162  019A  1383               	bcf	3,7	;select IRP bank0
  1163  019B  0800               	movf	0,w
  1164  019C  00E3               	movwf	UART_Printf@v_num_u16
  1165  019D  0A84               	incf	4,f
  1166  019E  0800               	movf	0,w
  1167  019F  00E4               	movwf	UART_Printf@v_num_u16+1
  1168  01A0  3002               	movlw	2
  1169  01A1  00D5               	movwf	??_UART_Printf
  1170  01A2  0855               	movf	??_UART_Printf,w
  1171  01A3  07E8               	addwf	UART_Printf@argp,f
  1172                           
  1173                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1174  01A4  0A67               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1175  01A5  1D03               	btfss	3,2
  1176  01A6  29AB               	goto	l1397
  1177                           
  1178                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  1179  01A7  3010               	movlw	16
  1180  01A8  00D5               	movwf	??_UART_Printf
  1181  01A9  0855               	movf	??_UART_Printf,w
  1182  01AA  00E7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1183  01AB                     l1397:	
  1184                           
  1185                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1186  01AB  0863               	movf	UART_Printf@v_num_u16,w
  1187  01AC  00B2               	movwf	UART_TxNumber@v_number_u32
  1188  01AD  0864               	movf	UART_Printf@v_num_u16+1,w
  1189  01AE  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1190  01AF  01B4               	clrf	UART_TxNumber@v_number_u32+2
  1191  01B0  01B5               	clrf	UART_TxNumber@v_number_u32+3
  1192  01B1  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1193  01B2  00D5               	movwf	??_UART_Printf
  1194  01B3  0855               	movf	??_UART_Printf,w
  1195  01B4  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1196  01B5  3002               	movlw	2
  1197  01B6  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1198                           
  1199                           ;uart.c: 512: break;
  1200  01BB  2A38               	goto	l1423
  1201  01BC                     l1399:	
  1202                           ;uart.c: 514: case 'B':
  1203                           
  1204                           
  1205                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1206  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1207  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1208  01BE  0868               	movf	UART_Printf@argp,w
  1209  01BF  0084               	movwf	4
  1210  01C0  1383               	bcf	3,7	;select IRP bank0
  1211  01C1  0800               	movf	0,w
  1212  01C2  00DF               	movwf	UART_Printf@v_num_u32
  1213  01C3  0A84               	incf	4,f
  1214  01C4  0800               	movf	0,w
  1215  01C5  00E0               	movwf	UART_Printf@v_num_u32+1
  1216  01C6  0A84               	incf	4,f
  1217  01C7  0800               	movf	0,w
  1218  01C8  00E1               	movwf	UART_Printf@v_num_u32+2
  1219  01C9  0A84               	incf	4,f
  1220  01CA  0800               	movf	0,w
  1221  01CB  00E2               	movwf	UART_Printf@v_num_u32+3
  1222  01CC  3004               	movlw	4
  1223  01CD  00D5               	movwf	??_UART_Printf
  1224  01CE  0855               	movf	??_UART_Printf,w
  1225  01CF  07E8               	addwf	UART_Printf@argp,f
  1226                           
  1227                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1228  01D0  0A67               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1229  01D1  1D03               	btfss	3,2
  1230  01D2  29D7               	goto	l1407
  1231                           
  1232                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  1233  01D3  3020               	movlw	32
  1234  01D4  00D5               	movwf	??_UART_Printf
  1235  01D5  0855               	movf	??_UART_Printf,w
  1236  01D6  00E7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1237  01D7                     l1407:	
  1238                           
  1239                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1240  01D7  0862               	movf	UART_Printf@v_num_u32+3,w
  1241  01D8  00B5               	movwf	UART_TxNumber@v_number_u32+3
  1242  01D9  0861               	movf	UART_Printf@v_num_u32+2,w
  1243  01DA  00B4               	movwf	UART_TxNumber@v_number_u32+2
  1244  01DB  0860               	movf	UART_Printf@v_num_u32+1,w
  1245  01DC  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1246  01DD  085F               	movf	UART_Printf@v_num_u32,w
  1247  01DE  00B2               	movwf	UART_TxNumber@v_number_u32
  1248  01DF  0867               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1249  01E0  00D5               	movwf	??_UART_Printf
  1250  01E1  0855               	movf	??_UART_Printf,w
  1251  01E2  00B6               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1252  01E3  3002               	movlw	2
  1253  01E4  120A  118A  223F  120A  118A  	fcall	_UART_TxNumber
  1254                           
  1255                           ;uart.c: 525: case 'f':
  1256                           ;uart.c: 530: break;
  1257                           
  1258                           ;uart.c: 524: case 'F':
  1259                           
  1260                           ;uart.c: 521: break;
  1261  01E9  2A38               	goto	l1423
  1262  01EA                     l1409:	
  1263                           ;uart.c: 533: case 'S':
  1264                           
  1265                           
  1266                           ;uart.c: 534: case 's':
  1267                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1268  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01EC  0868               	movf	UART_Printf@argp,w
  1271  01ED  0084               	movwf	4
  1272  01EE  1383               	bcf	3,7	;select IRP bank0
  1273  01EF  0800               	movf	0,w
  1274  01F0  00D5               	movwf	??_UART_Printf
  1275  01F1  0855               	movf	??_UART_Printf,w
  1276  01F2  00D7               	movwf	UART_Printf@str
  1277  01F3  3001               	movlw	1
  1278  01F4  00D5               	movwf	??_UART_Printf
  1279  01F5  0855               	movf	??_UART_Printf,w
  1280  01F6  07E8               	addwf	UART_Printf@argp,f
  1281                           
  1282                           ;uart.c: 536: UART_TxString(str);
  1283  01F7  0857               	movf	UART_Printf@str,w
  1284  01F8  120A  118A  24E4  120A  118A  	fcall	_UART_TxString
  1285                           
  1286                           ;uart.c: 537: break;
  1287  01FD  2A38               	goto	l1423
  1288  01FE                     l1415:	
  1289                           ;uart.c: 539: case '%':
  1290                           
  1291                           
  1292                           ;uart.c: 540: UART_TxChar('%');
  1293  01FE  3025               	movlw	37
  1294  01FF  2A33               	goto	L1
  1295  0200                     l1419:	
  1296                           ;uart.c: 542: }
  1297                           
  1298                           ;uart.c: 541: break;
  1299                           
  1300  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0202  0866               	movf	UART_Printf@ch,w
  1303                           
  1304                           ; Switch size 1, requested type "space"
  1305                           ; Number of cases is 15, Range of values is 37 to 120
  1306                           ; switch strategies available:
  1307                           ; Name         Instructions Cycles
  1308                           ; simple_byte           46    24 (average)
  1309                           ; direct_byte          263    11 (fixed)
  1310                           ; jumptable            263     9 (fixed)
  1311                           ;	Chosen strategy is simple_byte
  1312  0203  3A25               	xorlw	37	; case 37
  1313  0204  1903               	skipnz
  1314  0205  29FE               	goto	l1415
  1315  0206  3A67               	xorlw	103	; case 66
  1316  0207  1903               	skipnz
  1317  0208  29BC               	goto	l1399
  1318  0209  3A01               	xorlw	1	; case 67
  1319  020A  1903               	skipnz
  1320  020B  2891               	goto	l1335
  1321  020C  3A07               	xorlw	7	; case 68
  1322  020D  1903               	skipnz
  1323  020E  28CE               	goto	l1353
  1324  020F  3A02               	xorlw	2	; case 70
  1325  0210  1903               	skipnz
  1326  0211  2A38               	goto	l1423
  1327  0212  3A15               	xorlw	21	; case 83
  1328  0213  1903               	skipnz
  1329  0214  29EA               	goto	l1409
  1330  0215  3A06               	xorlw	6	; case 85
  1331  0216  1903               	skipnz
  1332  0217  2929               	goto	l1371
  1333  0218  3A0D               	xorlw	13	; case 88
  1334  0219  1903               	skipnz
  1335  021A  296F               	goto	l1383
  1336  021B  3A3A               	xorlw	58	; case 98
  1337  021C  1903               	skipnz
  1338  021D  2996               	goto	l1389
  1339  021E  3A01               	xorlw	1	; case 99
  1340  021F  1903               	skipnz
  1341  0220  2891               	goto	l1335
  1342  0221  3A07               	xorlw	7	; case 100
  1343  0222  1903               	skipnz
  1344  0223  289D               	goto	l1341
  1345  0224  3A02               	xorlw	2	; case 102
  1346  0225  1903               	skipnz
  1347  0226  2A38               	goto	l1423
  1348  0227  3A15               	xorlw	21	; case 115
  1349  0228  1903               	skipnz
  1350  0229  29EA               	goto	l1409
  1351  022A  3A06               	xorlw	6	; case 117
  1352  022B  1903               	skipnz
  1353  022C  290A               	goto	l1365
  1354  022D  3A0D               	xorlw	13	; case 120
  1355  022E  1903               	skipnz
  1356  022F  2950               	goto	l1377
  1357  0230  2A38               	goto	l1423
  1358                           
  1359                           ;uart.c: 543: }
  1360  0231  2A38               	goto	l1423
  1361  0232                     l1421:	
  1362                           
  1363                           ;uart.c: 544: else
  1364                           ;uart.c: 545: {
  1365                           ;uart.c: 547: UART_TxChar(ch);
  1366  0232  0866               	movf	UART_Printf@ch,w
  1367  0233                     L1:	
  1368  0233  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
  1369  0238                     l1423:	
  1370  0238  3001               	movlw	1
  1371  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1372  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1373  023B  00D5               	movwf	??_UART_Printf
  1374  023C  0855               	movf	??_UART_Printf,w
  1375  023D  07E5               	addwf	UART_Printf@ptr,f
  1376  023E  2835               	goto	l1425
  1377  023F                     __end_of_UART_Printf:	
  1378                           
  1379                           	psect	text2
  1380  04E4                     __ptext2:	
  1381 ;; *************** function _UART_TxString *****************
  1382 ;; Defined at:
  1383 ;;		line 169 in file "../../SampleCode/00-libfiles/uart.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  ptr_string      1    wreg     PTR const unsigned char 
  1386 ;;		 -> STR_1(10), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  ptr_string      1    2[BANK0 ] PTR const unsigned char 
  1389 ;;		 -> STR_1(10), 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       1       0       0       0
  1401 ;;      Temps:          0       1       0       0       0
  1402 ;;      Totals:         0       2       0       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		_UART_TxChar
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;;		_UART_Printf
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _UART_TxString
  1416  04E4                     _UART_TxString:	
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1420                           ;UART_TxString@ptr_string stored from wreg
  1421  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1422  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1423  04E6  00A2               	movwf	UART_TxString@ptr_string
  1424  04E7                     l1243:	
  1425                           ;uart.c: 171: while(*ptr_string)
  1426                           
  1427  04E7  0822               	movf	UART_TxString@ptr_string,w
  1428  04E8  0084               	movwf	4
  1429  04E9  120A  118A  2504  120A  118A  	fcall	stringdir
  1430  04EE  3A00               	xorlw	0
  1431  04EF  1903               	btfsc	3,2
  1432  04F0  0008               	return
  1433                           
  1434                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1435  04F1  0822               	movf	UART_TxString@ptr_string,w
  1436  04F2  0084               	movwf	4
  1437  04F3  120A  118A  2504  120A  118A  	fcall	stringdir
  1438  04F8  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
  1439  04FD  3001               	movlw	1
  1440  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1441  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0500  00A1               	movwf	??_UART_TxString
  1443  0501  0821               	movf	??_UART_TxString,w
  1444  0502  07A2               	addwf	UART_TxString@ptr_string,f
  1445  0503  2CE7               	goto	l1243
  1446  0504                     __end_of_UART_TxString:	
  1447                           
  1448                           	psect	text3
  1449  023F                     __ptext3:	
  1450 ;; *************** function _UART_TxNumber *****************
  1451 ;; Defined at:
  1452 ;;		line 260 in file "../../SampleCode/00-libfiles/uart.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  v_numericSys    1    wreg     unsigned char 
  1455 ;;  v_number_u32    4   18[BANK0 ] unsigned long 
  1456 ;;  v_numOfDigit    1   22[BANK0 ] unsigned char 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  v_numericSys    1   47[BANK0 ] unsigned char 
  1459 ;;  a              10   35[BANK0 ] unsigned char [10]
  1460 ;;  i               1   48[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         0       5       0       0       0
  1471 ;;      Locals:         0      14       0       0       0
  1472 ;;      Temps:          0      12       0       0       0
  1473 ;;      Totals:         0      31       0       0       0
  1474 ;;Total ram usage:       31 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		_UART_TxChar
  1479 ;;		___bmul
  1480 ;;		___lldiv
  1481 ;; This function is called by:
  1482 ;;		_UART_Printf
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _UART_TxNumber
  1488  023F                     _UART_TxNumber:	
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1492                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  1493  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0241  00CF               	movwf	UART_TxNumber@v_numericSystem_u8
  1496                           
  1497                           ;uart.c: 262: uint8_t i=0,a[10];
  1498  0242  01D0               	clrf	UART_TxNumber@i
  1499                           
  1500                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  1501  0243  3002               	movlw	2
  1502  0244  064F               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  1503  0245  1903               	btfsc	3,2
  1504  0246  2A86               	goto	l1265
  1505  0247  2A8A               	goto	l1267
  1506  0248                     l1259:	
  1507                           ;uart.c: 265: {
  1508                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  1509                           
  1510                           
  1511                           ;uart.c: 267: {
  1512                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  1513  0248  0832               	movf	UART_TxNumber@v_number_u32,w
  1514  0249  00B7               	movwf	??_UART_TxNumber
  1515  024A  0833               	movf	UART_TxNumber@v_number_u32+1,w
  1516  024B  00B8               	movwf	??_UART_TxNumber+1
  1517  024C  0834               	movf	UART_TxNumber@v_number_u32+2,w
  1518  024D  00B9               	movwf	??_UART_TxNumber+2
  1519  024E  0835               	movf	UART_TxNumber@v_number_u32+3,w
  1520  024F  00BA               	movwf	??_UART_TxNumber+3
  1521  0250  0836               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1522  0251  3EFF               	addlw	-1
  1523  0252  00BB               	movwf	??_UART_TxNumber+4
  1524  0253  0ABB               	incf	??_UART_TxNumber+4,f
  1525  0254  3001               	movlw	1
  1526  0255  00BC               	movwf	??_UART_TxNumber+5
  1527  0256  3000               	movlw	0
  1528  0257  00BD               	movwf	??_UART_TxNumber+6
  1529  0258  2A5C               	goto	u1184
  1530  0259                     u1185:	
  1531  0259  1003               	clrc
  1532  025A  0DBC               	rlf	??_UART_TxNumber+5,f
  1533  025B  0DBD               	rlf	??_UART_TxNumber+6,f
  1534  025C                     u1184:	
  1535  025C  0BBB               	decfsz	??_UART_TxNumber+4,f
  1536  025D  2A59               	goto	u1185
  1537  025E  083C               	movf	??_UART_TxNumber+5,w
  1538  025F  00BE               	movwf	??_UART_TxNumber+7
  1539  0260  083D               	movf	??_UART_TxNumber+6,w
  1540  0261  00BF               	movwf	??_UART_TxNumber+8
  1541  0262  3000               	movlw	0
  1542  0263  1BBF               	btfsc	??_UART_TxNumber+8,7
  1543  0264  30FF               	movlw	255
  1544  0265  00C0               	movwf	??_UART_TxNumber+9
  1545  0266  00C1               	movwf	??_UART_TxNumber+10
  1546  0267  083E               	movf	??_UART_TxNumber+7,w
  1547  0268  05B7               	andwf	??_UART_TxNumber,f
  1548  0269  083F               	movf	??_UART_TxNumber+8,w
  1549  026A  05B8               	andwf	??_UART_TxNumber+1,f
  1550  026B  0840               	movf	??_UART_TxNumber+9,w
  1551  026C  05B9               	andwf	??_UART_TxNumber+2,f
  1552  026D  0841               	movf	??_UART_TxNumber+10,w
  1553  026E  05BA               	andwf	??_UART_TxNumber+3,f
  1554  026F  083A               	movf	??_UART_TxNumber+3,w
  1555  0270  0439               	iorwf	??_UART_TxNumber+2,w
  1556  0271  0438               	iorwf	??_UART_TxNumber+1,w
  1557  0272  0437               	iorwf	??_UART_TxNumber,w
  1558  0273  1903               	btfsc	3,2
  1559  0274  2A77               	goto	u1190
  1560  0275  3001               	movlw	1
  1561  0276  2A78               	goto	u1200
  1562  0277                     u1190:	
  1563  0277  3000               	movlw	0
  1564  0278                     u1200:	
  1565  0278  00C2               	movwf	??_UART_TxNumber+11
  1566  0279  0842               	movf	??_UART_TxNumber+11,w
  1567  027A  00D0               	movwf	UART_TxNumber@i
  1568                           
  1569                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  1570  027B  0850               	movf	UART_TxNumber@i,w
  1571  027C  3E30               	addlw	48
  1572  027D  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
  1573                           
  1574                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  1575  0282  3001               	movlw	1
  1576  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0285  02B6               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  1579  0286                     l1265:	
  1580  0286  0836               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1581  0287  1903               	btfsc	3,2
  1582  0288  0008               	return
  1583  0289  2A48               	goto	l1259
  1584  028A                     l1267:	
  1585                           ;uart.c: 273: }
  1586                           ;uart.c: 274: }
  1587                           
  1588                           
  1589                           ;uart.c: 275: else if(v_number_u32==0)
  1590  028A  0835               	movf	UART_TxNumber@v_number_u32+3,w
  1591  028B  0434               	iorwf	UART_TxNumber@v_number_u32+2,w
  1592  028C  0433               	iorwf	UART_TxNumber@v_number_u32+1,w
  1593  028D  0432               	iorwf	UART_TxNumber@v_number_u32,w
  1594  028E  1D03               	skipz
  1595  028F  2A95               	goto	l1271
  1596                           
  1597                           ;uart.c: 276: {
  1598                           ;uart.c: 280: UART_TxChar('0');
  1599  0290  3030               	movlw	48
  1600  0291  120A  118A  2546   	fcall	_UART_TxChar
  1601                           
  1602                           ;uart.c: 281: }
  1603  0294  0008               	return
  1604  0295                     l1271:	
  1605                           
  1606                           ;uart.c: 282: else
  1607                           ;uart.c: 283: {
  1608                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  1609  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0297  01D0               	clrf	UART_TxNumber@i
  1612  0298                     l1289:	
  1613  0298  0836               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1614  0299  0250               	subwf	UART_TxNumber@i,w
  1615  029A  1803               	btfsc	3,0
  1616  029B  2B2F               	goto	l1301
  1617                           
  1618                           ;uart.c: 285: {
  1619                           ;uart.c: 288: if(v_number_u32!=0)
  1620  029C  0835               	movf	UART_TxNumber@v_number_u32+3,w
  1621  029D  0434               	iorwf	UART_TxNumber@v_number_u32+2,w
  1622  029E  0433               	iorwf	UART_TxNumber@v_number_u32+1,w
  1623  029F  0432               	iorwf	UART_TxNumber@v_number_u32,w
  1624  02A0  1903               	skipnz
  1625  02A1  2AF9               	goto	l1279
  1626                           
  1627                           ;uart.c: 289: {
  1628                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  1629  02A2  084F               	movf	UART_TxNumber@v_numericSystem_u8,w
  1630  02A3  00B7               	movwf	??_UART_TxNumber
  1631  02A4  0837               	movf	??_UART_TxNumber,w
  1632  02A5  00AE               	movwf	___bmul@multiplicand
  1633  02A6  0835               	movf	UART_TxNumber@v_number_u32+3,w
  1634  02A7  00A7               	movwf	___lldiv@dividend+3
  1635  02A8  0834               	movf	UART_TxNumber@v_number_u32+2,w
  1636  02A9  00A6               	movwf	___lldiv@dividend+2
  1637  02AA  0833               	movf	UART_TxNumber@v_number_u32+1,w
  1638  02AB  00A5               	movwf	___lldiv@dividend+1
  1639  02AC  0832               	movf	UART_TxNumber@v_number_u32,w
  1640  02AD  00A4               	movwf	___lldiv@dividend
  1641  02AE  084F               	movf	UART_TxNumber@v_numericSystem_u8,w
  1642  02AF  00B8               	movwf	??_UART_TxNumber+1
  1643  02B0  01B9               	clrf	??_UART_TxNumber+2
  1644  02B1  01BA               	clrf	??_UART_TxNumber+3
  1645  02B2  01BB               	clrf	??_UART_TxNumber+4
  1646  02B3  083B               	movf	??_UART_TxNumber+4,w
  1647  02B4  00A3               	movwf	___lldiv@divisor+3
  1648  02B5  083A               	movf	??_UART_TxNumber+3,w
  1649  02B6  00A2               	movwf	___lldiv@divisor+2
  1650  02B7  0839               	movf	??_UART_TxNumber+2,w
  1651  02B8  00A1               	movwf	___lldiv@divisor+1
  1652  02B9  0838               	movf	??_UART_TxNumber+1,w
  1653  02BA  00A0               	movwf	___lldiv@divisor
  1654  02BB  120A  118A  23DE  120A  118A  	fcall	___lldiv
  1655  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1656  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1657  02C2  0820               	movf	?___lldiv,w
  1658  02C3  120A  118A  2533  120A  118A  	fcall	___bmul
  1659  02C8  3AFF               	xorlw	255
  1660  02C9  3E01               	addlw	1
  1661  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1662  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1663  02CC  0732               	addwf	UART_TxNumber@v_number_u32,w
  1664  02CD  00BC               	movwf	??_UART_TxNumber+5
  1665  02CE  0850               	movf	UART_TxNumber@i,w
  1666  02CF  3E43               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1667  02D0  0084               	movwf	4
  1668  02D1  083C               	movf	??_UART_TxNumber+5,w
  1669  02D2  1383               	bcf	3,7	;select IRP bank0
  1670  02D3  0080               	movwf	0
  1671                           
  1672                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  1673  02D4  084F               	movf	UART_TxNumber@v_numericSystem_u8,w
  1674  02D5  00B7               	movwf	??_UART_TxNumber
  1675  02D6  01B8               	clrf	??_UART_TxNumber+1
  1676  02D7  01B9               	clrf	??_UART_TxNumber+2
  1677  02D8  01BA               	clrf	??_UART_TxNumber+3
  1678  02D9  083A               	movf	??_UART_TxNumber+3,w
  1679  02DA  00A3               	movwf	___lldiv@divisor+3
  1680  02DB  0839               	movf	??_UART_TxNumber+2,w
  1681  02DC  00A2               	movwf	___lldiv@divisor+2
  1682  02DD  0838               	movf	??_UART_TxNumber+1,w
  1683  02DE  00A1               	movwf	___lldiv@divisor+1
  1684  02DF  0837               	movf	??_UART_TxNumber,w
  1685  02E0  00A0               	movwf	___lldiv@divisor
  1686  02E1  0835               	movf	UART_TxNumber@v_number_u32+3,w
  1687  02E2  00A7               	movwf	___lldiv@dividend+3
  1688  02E3  0834               	movf	UART_TxNumber@v_number_u32+2,w
  1689  02E4  00A6               	movwf	___lldiv@dividend+2
  1690  02E5  0833               	movf	UART_TxNumber@v_number_u32+1,w
  1691  02E6  00A5               	movwf	___lldiv@dividend+1
  1692  02E7  0832               	movf	UART_TxNumber@v_number_u32,w
  1693  02E8  00A4               	movwf	___lldiv@dividend
  1694  02E9  120A  118A  23DE  120A  118A  	fcall	___lldiv
  1695  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1696  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1697  02F0  0823               	movf	?___lldiv+3,w
  1698  02F1  00B5               	movwf	UART_TxNumber@v_number_u32+3
  1699  02F2  0822               	movf	?___lldiv+2,w
  1700  02F3  00B4               	movwf	UART_TxNumber@v_number_u32+2
  1701  02F4  0821               	movf	?___lldiv+1,w
  1702  02F5  00B3               	movwf	UART_TxNumber@v_number_u32+1
  1703  02F6  0820               	movf	?___lldiv,w
  1704  02F7  00B2               	movwf	UART_TxNumber@v_number_u32
  1705                           
  1706                           ;uart.c: 298: }
  1707  02F8  2B05               	goto	l1287
  1708  02F9                     l1279:	
  1709                           
  1710                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  1711                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  1712  02F9  0A36               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1713  02FA  1903               	btfsc	3,2
  1714  02FB  2B2F               	goto	l1301
  1715  02FC  300B               	movlw	11
  1716  02FD  0236               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1717  02FE  1803               	btfsc	3,0
  1718  02FF  2B2F               	goto	l1301
  1719                           
  1720                           ;uart.c: 306: else
  1721                           ;uart.c: 307: {
  1722                           ;uart.c: 311: a[i]=0;
  1723                           
  1724                           ;uart.c: 305: }
  1725                           
  1726                           ;uart.c: 301: {
  1727                           ;uart.c: 304: break;
  1728  0300  0850               	movf	UART_TxNumber@i,w
  1729  0301  3E43               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1730  0302  0084               	movwf	4
  1731  0303  1383               	bcf	3,7	;select IRP bank0
  1732  0304  0180               	clrf	0
  1733  0305                     l1287:	
  1734  0305  3001               	movlw	1
  1735  0306  00B7               	movwf	??_UART_TxNumber
  1736  0307  0837               	movf	??_UART_TxNumber,w
  1737  0308  07D0               	addwf	UART_TxNumber@i,f
  1738  0309  2A98               	goto	l1289
  1739  030A                     l1291:	
  1740                           ;uart.c: 312: }
  1741                           ;uart.c: 313: }
  1742                           ;uart.c: 315: while(i)
  1743                           
  1744                           
  1745                           ;uart.c: 316: {
  1746                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  1747  030A  0850               	movf	UART_TxNumber@i,w
  1748  030B  3EFF               	addlw	255
  1749  030C  3E43               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1750  030D  0084               	movwf	4
  1751  030E  300A               	movlw	10
  1752  030F  1383               	bcf	3,7	;select IRP bank0
  1753  0310  0200               	subwf	0,w
  1754  0311  1803               	skipnc
  1755  0312  2B1A               	goto	l1295
  1756  0313  0850               	movf	UART_TxNumber@i,w
  1757  0314  3EFF               	addlw	255
  1758  0315  3E43               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1759  0316  0084               	movwf	4
  1760  0317  0800               	movf	0,w
  1761  0318  3E30               	addlw	48
  1762  0319  2B20               	goto	L2
  1763  031A                     l1295:	
  1764  031A  0850               	movf	UART_TxNumber@i,w
  1765  031B  3EFF               	addlw	255
  1766  031C  3E43               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1767  031D  0084               	movwf	4
  1768  031E  0800               	movf	0,w
  1769  031F  3E37               	addlw	55
  1770  0320                     L2:	
  1771  0320  00CD               	movwf	_UART_TxNumber$173
  1772  0321  3000               	movlw	0
  1773  0322  1803               	skipnc
  1774  0323  3001               	movlw	1
  1775  0324  00CE               	movwf	_UART_TxNumber$173+1
  1776  0325  084D               	movf	_UART_TxNumber$173,w
  1777  0326  120A  118A  2546  120A  118A  	fcall	_UART_TxChar
  1778                           
  1779                           ;uart.c: 319: i--;
  1780  032B  3001               	movlw	1
  1781  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1782  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1783  032E  02D0               	subwf	UART_TxNumber@i,f
  1784  032F                     l1301:	
  1785  032F  0850               	movf	UART_TxNumber@i,w
  1786  0330  1903               	btfsc	3,2
  1787  0331  0008               	return
  1788  0332  2B0A               	goto	l1291
  1789  0333                     __end_of_UART_TxNumber:	
  1790                           
  1791                           	psect	text4
  1792  0533                     __ptext4:	
  1793 ;; *************** function ___bmul *****************
  1794 ;; Defined at:
  1795 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  multiplier      1    wreg     unsigned char 
  1798 ;;  multiplicand    1   14[BANK0 ] unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  multiplier      1   17[BANK0 ] unsigned char 
  1801 ;;  product         1   16[BANK0 ] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      unsigned char 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       1       0       0       0
  1812 ;;      Locals:         0       2       0       0       0
  1813 ;;      Temps:          0       1       0       0       0
  1814 ;;      Totals:         0       4       0       0       0
  1815 ;;Total ram usage:        4 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_UART_TxNumber
  1822 ;;		_UART_Printf
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___bmul
  1828  0533                     ___bmul:	
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1832                           ;___bmul@multiplier stored from wreg
  1833  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0535  00B1               	movwf	___bmul@multiplier
  1836  0536  01B0               	clrf	___bmul@product
  1837  0537                     l1201:	
  1838  0537  1C31               	btfss	___bmul@multiplier,0
  1839  0538  2D3D               	goto	l1205
  1840  0539  082E               	movf	___bmul@multiplicand,w
  1841  053A  00AF               	movwf	??___bmul
  1842  053B  082F               	movf	??___bmul,w
  1843  053C  07B0               	addwf	___bmul@product,f
  1844  053D                     l1205:	
  1845  053D  1003               	clrc
  1846  053E  0DAE               	rlf	___bmul@multiplicand,f
  1847  053F  1003               	clrc
  1848  0540  0CB1               	rrf	___bmul@multiplier,f
  1849  0541  0831               	movf	___bmul@multiplier,w
  1850  0542  1D03               	btfss	3,2
  1851  0543  2D37               	goto	l1201
  1852  0544  0830               	movf	___bmul@product,w
  1853  0545  0008               	return
  1854  0546                     __end_of___bmul:	
  1855                           
  1856                           	psect	text5
  1857  0546                     __ptext5:	
  1858 ;; *************** function _UART_TxChar *****************
  1859 ;; Defined at:
  1860 ;;		line 145 in file "../../SampleCode/00-libfiles/uart.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  v_uartData_u    1    wreg     unsigned char 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  v_uartData_u    1    0[BANK0 ] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       0       0       0       0
  1875 ;;      Locals:         0       1       0       0       0
  1876 ;;      Temps:          0       0       0       0       0
  1877 ;;      Totals:         0       1       0       0       0
  1878 ;;Total ram usage:        1 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_UART_TxString
  1885 ;;		_UART_TxNumber
  1886 ;;		_UART_Printf
  1887 ;;		_UART_RxString
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _UART_TxChar
  1893  0546                     _UART_TxChar:	
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in _UART_TxChar: [wreg]
  1897                           ;UART_TxChar@v_uartData_u8 stored from wreg
  1898  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0548  00A0               	movwf	UART_TxChar@v_uartData_u8
  1901  0549                     l208:	
  1902                           ;uart.c: 147: while(TXIF==0);
  1903                           
  1904  0549  1E0C               	btfss	12,4	;volatile
  1905  054A  2D49               	goto	l208
  1906                           
  1907                           ;uart.c: 148: TXIF=0;
  1908  054B  120C               	bcf	12,4	;volatile
  1909                           
  1910                           ;uart.c: 149: TXREG=v_uartData_u8;
  1911  054C  0820               	movf	UART_TxChar@v_uartData_u8,w
  1912  054D  0099               	movwf	25	;volatile
  1913  054E  0008               	return
  1914  054F                     __end_of_UART_TxChar:	
  1915                           
  1916                           	psect	text6
  1917  051D                     __ptext6:	
  1918 ;; *************** function _UART_Init *****************
  1919 ;; Defined at:
  1920 ;;		line 66 in file "../../SampleCode/00-libfiles/uart.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  v_baudRate_u    4   24[BANK0 ] unsigned long 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       4       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         0       4       0       0       0
  1938 ;;Total ram usage:        4 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    3
  1941 ;; This function calls:
  1942 ;;		_UART_SetBaudRate
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _UART_Init
  1950  051D                     _UART_Init:	
  1951                           
  1952                           ;uart.c: 68: TRISC=0x80;
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1956  051D  3080               	movlw	128
  1957  051E  1683               	bsf	3,5	;RP0=1, select bank1
  1958  051F  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0520  0087               	movwf	7	;volatile
  1960                           
  1961                           ;uart.c: 69: TXSTA=0x20;
  1962  0521  3020               	movlw	32
  1963  0522  0098               	movwf	24	;volatile
  1964                           
  1965                           ;uart.c: 70: RCSTA=0x90;
  1966  0523  3090               	movlw	144
  1967  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0526  0098               	movwf	24	;volatile
  1970                           
  1971                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  1972  0527  083B               	movf	UART_Init@v_baudRate_u32+3,w
  1973  0528  00B1               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  1974  0529  083A               	movf	UART_Init@v_baudRate_u32+2,w
  1975  052A  00B0               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  1976  052B  0839               	movf	UART_Init@v_baudRate_u32+1,w
  1977  052C  00AF               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  1978  052D  0838               	movf	UART_Init@v_baudRate_u32,w
  1979  052E  00AE               	movwf	UART_SetBaudRate@v_baudRate_u32
  1980  052F  120A  118A  243E   	fcall	_UART_SetBaudRate
  1981  0532  0008               	return
  1982  0533                     __end_of_UART_Init:	
  1983                           
  1984                           	psect	text7
  1985  043E                     __ptext7:	
  1986 ;; *************** function _UART_SetBaudRate *****************
  1987 ;; Defined at:
  1988 ;;		line 91 in file "../../SampleCode/00-libfiles/uart.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  v_baudRate_u    4   14[BANK0 ] unsigned long 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  RegValue        1   23[BANK0 ] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       4       0       0       0
  2003 ;;      Locals:         0       1       0       0       0
  2004 ;;      Temps:          0       5       0       0       0
  2005 ;;      Totals:         0      10       0       0       0
  2006 ;;Total ram usage:       10 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    2
  2009 ;; This function calls:
  2010 ;;		___lldiv
  2011 ;; This function is called by:
  2012 ;;		_UART_Init
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _UART_SetBaudRate
  2018  043E                     _UART_SetBaudRate:	
  2019                           
  2020                           ;uart.c: 93: uint8_t RegValue;
  2021                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  2022                           
  2023                           ;incstack = 0
  2024                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  2025  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2026  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0440  0831               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2028  0441  1D03               	btfss	3,2
  2029  0442  2C50               	goto	l1247
  2030  0443  0830               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  2031  0444  1D03               	btfss	3,2
  2032  0445  2C50               	goto	l1247
  2033  0446  3009               	movlw	9
  2034  0447  022F               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  2035  0448  1D03               	skipz
  2036  0449  2C4E               	goto	u1143
  2037  044A  3060               	movlw	96
  2038  044B  022E               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  2039  044C  1D03               	skipz
  2040  044D  2C4E               	goto	u1143
  2041  044E                     u1143:	
  2042  044E  1C03               	btfss	3,0
  2043  044F  2C8E               	goto	l1251
  2044  0450                     l1247:	
  2045  0450  0831               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2046  0451  1D03               	btfss	3,2
  2047  0452  2C8E               	goto	l1251
  2048  0453  3001               	movlw	1
  2049  0454  0230               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  2050  0455  1D03               	skipz
  2051  0456  2C5F               	goto	u1153
  2052  0457  30C2               	movlw	194
  2053  0458  022F               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  2054  0459  1D03               	skipz
  2055  045A  2C5F               	goto	u1153
  2056  045B  3001               	movlw	1
  2057  045C  022E               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  2058  045D  1D03               	skipz
  2059  045E  2C5F               	goto	u1153
  2060  045F                     u1153:	
  2061  045F  1803               	btfsc	3,0
  2062  0460  2C8E               	goto	l1251
  2063                           
  2064                           ;uart.c: 96: {
  2065                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  2066  0461  082E               	movf	UART_SetBaudRate@v_baudRate_u32,w
  2067  0462  00B2               	movwf	??_UART_SetBaudRate
  2068  0463  082F               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  2069  0464  00B3               	movwf	??_UART_SetBaudRate+1
  2070  0465  0830               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  2071  0466  00B4               	movwf	??_UART_SetBaudRate+2
  2072  0467  0831               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  2073  0468  00B5               	movwf	??_UART_SetBaudRate+3
  2074  0469  3006               	movlw	6
  2075  046A                     u1165:	
  2076  046A  1003               	clrc
  2077  046B  0DB2               	rlf	??_UART_SetBaudRate,f
  2078  046C  0DB3               	rlf	??_UART_SetBaudRate+1,f
  2079  046D  0DB4               	rlf	??_UART_SetBaudRate+2,f
  2080  046E  0DB5               	rlf	??_UART_SetBaudRate+3,f
  2081  046F  3EFF               	addlw	-1
  2082  0470  1D03               	skipz
  2083  0471  2C6A               	goto	u1165
  2084  0472  0835               	movf	??_UART_SetBaudRate+3,w
  2085  0473  00A3               	movwf	___lldiv@divisor+3
  2086  0474  0834               	movf	??_UART_SetBaudRate+2,w
  2087  0475  00A2               	movwf	___lldiv@divisor+2
  2088  0476  0833               	movf	??_UART_SetBaudRate+1,w
  2089  0477  00A1               	movwf	___lldiv@divisor+1
  2090  0478  0832               	movf	??_UART_SetBaudRate,w
  2091  0479  00A0               	movwf	___lldiv@divisor
  2092  047A  3001               	movlw	1
  2093  047B  00A7               	movwf	___lldiv@dividend+3
  2094  047C  3031               	movlw	49
  2095  047D  00A6               	movwf	___lldiv@dividend+2
  2096  047E  302D               	movlw	45
  2097  047F  00A5               	movwf	___lldiv@dividend+1
  2098  0480  3000               	movlw	0
  2099  0481  00A4               	movwf	___lldiv@dividend
  2100  0482  120A  118A  23DE  120A  118A  	fcall	___lldiv
  2101  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0489  0820               	movf	?___lldiv,w
  2104  048A  3EFF               	addlw	255
  2105  048B  00B6               	movwf	??_UART_SetBaudRate+4
  2106  048C  0836               	movf	??_UART_SetBaudRate+4,w
  2107  048D  2C91               	goto	L3
  2108  048E                     l1251:	
  2109                           ;uart.c: 100: }
  2110                           
  2111                           
  2112                           ;uart.c: 101: else
  2113                           ;uart.c: 102: {
  2114                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2115  048E  301F               	movlw	31
  2116  048F  00B2               	movwf	??_UART_SetBaudRate
  2117  0490  0832               	movf	??_UART_SetBaudRate,w
  2118  0491                     L3:	
  2119  0491  00B7               	movwf	UART_SetBaudRate@RegValue
  2120                           
  2121                           ;uart.c: 105: }
  2122                           ;uart.c: 107: SPBRG = RegValue;
  2123  0492  0837               	movf	UART_SetBaudRate@RegValue,w
  2124  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0495  0099               	movwf	25	;volatile
  2127  0496  0008               	return
  2128  0497                     __end_of_UART_SetBaudRate:	
  2129                           
  2130                           	psect	text8
  2131  03DE                     __ptext8:	
  2132 ;; *************** function ___lldiv *****************
  2133 ;; Defined at:
  2134 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  divisor         4    0[BANK0 ] unsigned long 
  2137 ;;  dividend        4    4[BANK0 ] unsigned long 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  quotient        4    9[BANK0 ] unsigned long 
  2140 ;;  counter         1   13[BANK0 ] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  4    0[BANK0 ] unsigned long 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       8       0       0       0
  2151 ;;      Locals:         0       5       0       0       0
  2152 ;;      Temps:          0       1       0       0       0
  2153 ;;      Totals:         0      14       0       0       0
  2154 ;;Total ram usage:       14 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_UART_SetBaudRate
  2161 ;;		_UART_TxNumber
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           
  2166                           ;psect for function ___lldiv
  2167  03DE                     ___lldiv:	
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2171  03DE  3000               	movlw	0
  2172  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2173  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2174  03E1  00AC               	movwf	___lldiv@quotient+3
  2175  03E2  3000               	movlw	0
  2176  03E3  00AB               	movwf	___lldiv@quotient+2
  2177  03E4  3000               	movlw	0
  2178  03E5  00AA               	movwf	___lldiv@quotient+1
  2179  03E6  3000               	movlw	0
  2180  03E7  00A9               	movwf	___lldiv@quotient
  2181  03E8  0823               	movf	___lldiv@divisor+3,w
  2182  03E9  0422               	iorwf	___lldiv@divisor+2,w
  2183  03EA  0421               	iorwf	___lldiv@divisor+1,w
  2184  03EB  0420               	iorwf	___lldiv@divisor,w
  2185  03EC  1903               	skipnz
  2186  03ED  2C35               	goto	l1233
  2187  03EE  01AD               	clrf	___lldiv@counter
  2188  03EF  0AAD               	incf	___lldiv@counter,f
  2189  03F0                     l1219:	
  2190  03F0  1BA3               	btfsc	___lldiv@divisor+3,7
  2191  03F1  2C00               	goto	l1221
  2192  03F2  3001               	movlw	1
  2193  03F3  00A8               	movwf	??___lldiv
  2194  03F4                     u1075:	
  2195  03F4  1003               	clrc
  2196  03F5  0DA0               	rlf	___lldiv@divisor,f
  2197  03F6  0DA1               	rlf	___lldiv@divisor+1,f
  2198  03F7  0DA2               	rlf	___lldiv@divisor+2,f
  2199  03F8  0DA3               	rlf	___lldiv@divisor+3,f
  2200  03F9  0BA8               	decfsz	??___lldiv,f
  2201  03FA  2BF4               	goto	u1075
  2202  03FB  3001               	movlw	1
  2203  03FC  00A8               	movwf	??___lldiv
  2204  03FD  0828               	movf	??___lldiv,w
  2205  03FE  07AD               	addwf	___lldiv@counter,f
  2206  03FF  2BF0               	goto	l1219
  2207  0400                     l1221:	
  2208  0400  3001               	movlw	1
  2209  0401  00A8               	movwf	??___lldiv
  2210  0402                     u1095:	
  2211  0402  1003               	clrc
  2212  0403  0DA9               	rlf	___lldiv@quotient,f
  2213  0404  0DAA               	rlf	___lldiv@quotient+1,f
  2214  0405  0DAB               	rlf	___lldiv@quotient+2,f
  2215  0406  0DAC               	rlf	___lldiv@quotient+3,f
  2216  0407  0BA8               	decfsz	??___lldiv,f
  2217  0408  2C02               	goto	u1095
  2218  0409  0823               	movf	___lldiv@divisor+3,w
  2219  040A  0227               	subwf	___lldiv@dividend+3,w
  2220  040B  1D03               	skipz
  2221  040C  2C17               	goto	u1105
  2222  040D  0822               	movf	___lldiv@divisor+2,w
  2223  040E  0226               	subwf	___lldiv@dividend+2,w
  2224  040F  1D03               	skipz
  2225  0410  2C17               	goto	u1105
  2226  0411  0821               	movf	___lldiv@divisor+1,w
  2227  0412  0225               	subwf	___lldiv@dividend+1,w
  2228  0413  1D03               	skipz
  2229  0414  2C17               	goto	u1105
  2230  0415  0820               	movf	___lldiv@divisor,w
  2231  0416  0224               	subwf	___lldiv@dividend,w
  2232  0417                     u1105:	
  2233  0417  1C03               	skipc
  2234  0418  2C28               	goto	l1229
  2235  0419  0820               	movf	___lldiv@divisor,w
  2236  041A  02A4               	subwf	___lldiv@dividend,f
  2237  041B  0821               	movf	___lldiv@divisor+1,w
  2238  041C  1C03               	skipc
  2239  041D  0F21               	incfsz	___lldiv@divisor+1,w
  2240  041E  02A5               	subwf	___lldiv@dividend+1,f
  2241  041F  0822               	movf	___lldiv@divisor+2,w
  2242  0420  1C03               	skipc
  2243  0421  0F22               	incfsz	___lldiv@divisor+2,w
  2244  0422  02A6               	subwf	___lldiv@dividend+2,f
  2245  0423  0823               	movf	___lldiv@divisor+3,w
  2246  0424  1C03               	skipc
  2247  0425  0F23               	incfsz	___lldiv@divisor+3,w
  2248  0426  02A7               	subwf	___lldiv@dividend+3,f
  2249  0427  1429               	bsf	___lldiv@quotient,0
  2250  0428                     l1229:	
  2251  0428  3001               	movlw	1
  2252  0429                     u1115:	
  2253  0429  1003               	clrc
  2254  042A  0CA3               	rrf	___lldiv@divisor+3,f
  2255  042B  0CA2               	rrf	___lldiv@divisor+2,f
  2256  042C  0CA1               	rrf	___lldiv@divisor+1,f
  2257  042D  0CA0               	rrf	___lldiv@divisor,f
  2258  042E  3EFF               	addlw	-1
  2259  042F  1D03               	skipz
  2260  0430  2C29               	goto	u1115
  2261  0431  3001               	movlw	1
  2262  0432  02AD               	subwf	___lldiv@counter,f
  2263  0433  1D03               	btfss	3,2
  2264  0434  2C00               	goto	l1221
  2265  0435                     l1233:	
  2266  0435  082C               	movf	___lldiv@quotient+3,w
  2267  0436  00A3               	movwf	?___lldiv+3
  2268  0437  082B               	movf	___lldiv@quotient+2,w
  2269  0438  00A2               	movwf	?___lldiv+2
  2270  0439  082A               	movf	___lldiv@quotient+1,w
  2271  043A  00A1               	movwf	?___lldiv+1
  2272  043B  0829               	movf	___lldiv@quotient,w
  2273  043C  00A0               	movwf	?___lldiv
  2274  043D  0008               	return
  2275  043E                     __end_of___lldiv:	
  2276                           
  2277                           	psect	text9
  2278  0333                     __ptext9:	
  2279 ;; *************** function _interrupt_isr *****************
  2280 ;; Defined at:
  2281 ;;		line 11 in file "main.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, btemp+1
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          8       0       0       0       0
  2298 ;;      Totals:         8       0       0       0       0
  2299 ;;Total ram usage:        8 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		Interrupt level 1
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _interrupt_isr
  2310  0333                     _interrupt_isr:	
  2311                           
  2312                           ;main.c: 12: if (TMR0IF == 1) {
  2313  0333  1D0B               	btfss	11,2	;volatile
  2314  0334  2B41               	goto	i1l43
  2315                           
  2316                           ;main.c: 13: if(OverFlowFlag<50)
  2317  0335  3032               	movlw	50
  2318  0336  027C               	subwf	_OverFlowFlag,w
  2319  0337  1803               	skipnc
  2320  0338  2B3D               	goto	i1l1433
  2321                           
  2322                           ;main.c: 14: OverFlowFlag++;
  2323  0339  3001               	movlw	1
  2324  033A  00F0               	movwf	??_interrupt_isr
  2325  033B  0870               	movf	??_interrupt_isr,w
  2326  033C  07FC               	addwf	_OverFlowFlag,f
  2327  033D                     i1l1433:	
  2328                           
  2329                           ;main.c: 15: TMR0IF = 0;
  2330  033D  110B               	bcf	11,2	;volatile
  2331                           
  2332                           ;main.c: 16: TMR0 = 236;
  2333  033E  30EC               	movlw	236
  2334  033F  0081               	movwf	1	;volatile
  2335                           
  2336                           ;main.c: 17: }
  2337  0340  2BD1               	goto	i1l54
  2338  0341                     i1l43:	
  2339                           
  2340                           ;main.c: 18: else if (INTF == 1) {
  2341  0341  1C8B               	btfss	11,1	;volatile
  2342  0342  2BD1               	goto	i1l54
  2343                           
  2344                           ;main.c: 19: INTF = 0;
  2345  0343  108B               	bcf	11,1	;volatile
  2346                           
  2347                           ;main.c: 20: timeValue = OverFlowFlag;
  2348  0344  087C               	movf	_OverFlowFlag,w
  2349  0345  00F0               	movwf	??_interrupt_isr
  2350  0346  01F1               	clrf	??_interrupt_isr+1
  2351  0347  0870               	movf	??_interrupt_isr,w
  2352  0348  00FA               	movwf	_timeValue
  2353  0349  0871               	movf	??_interrupt_isr+1,w
  2354  034A  00FB               	movwf	_timeValue+1
  2355                           
  2356                           ;main.c: 21: OverFlowFlag = 0;
  2357  034B  01FC               	clrf	_OverFlowFlag
  2358                           
  2359                           ;main.c: 22: TMR0 = 236;
  2360  034C  30EC               	movlw	236
  2361  034D  0081               	movwf	1	;volatile
  2362                           
  2363                           ;main.c: 24: bitCnt++;
  2364  034E  3001               	movlw	1
  2365  034F  07F8               	addwf	_bitCnt,f
  2366  0350  1803               	skipnc
  2367  0351  0AF9               	incf	_bitCnt+1,f
  2368  0352  3000               	movlw	0
  2369  0353  07F9               	addwf	_bitCnt+1,f
  2370                           
  2371                           ;main.c: 26: if ((timeValue >= 50))
  2372  0354  3000               	movlw	0
  2373  0355  027B               	subwf	_timeValue+1,w
  2374  0356  3032               	movlw	50
  2375  0357  1903               	skipnz
  2376  0358  027A               	subwf	_timeValue,w
  2377  0359  1C03               	skipc
  2378  035A  2B6A               	goto	i1l47
  2379                           
  2380                           ;main.c: 27: {
  2381                           ;main.c: 28: bitCnt = -2;
  2382  035B  30FE               	movlw	254
  2383  035C  00F8               	movwf	_bitCnt
  2384  035D  30FF               	movlw	255
  2385  035E  00F9               	movwf	_bitCnt+1
  2386                           
  2387                           ;main.c: 29: bitPattern = 0;
  2388  035F  3000               	movlw	0
  2389  0360  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0361  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0362  00A3               	movwf	(_bitPattern+3)^(0+128)
  2392  0363  3000               	movlw	0
  2393  0364  00A2               	movwf	(_bitPattern+2)^(0+128)
  2394  0365  3000               	movlw	0
  2395  0366  00A1               	movwf	(_bitPattern+1)^(0+128)
  2396  0367  3000               	movlw	0
  2397  0368  00A0               	movwf	_bitPattern^(0+128)
  2398                           
  2399                           ;main.c: 30: }
  2400  0369  2BD1               	goto	i1l54
  2401  036A                     i1l47:	
  2402                           
  2403                           ;main.c: 31: else if ((bitCnt >= 0) && (bitCnt < 32))
  2404  036A  1BF9               	btfsc	_bitCnt+1,7
  2405  036B  2B9E               	goto	i1l1457
  2406  036C  0879               	movf	_bitCnt+1,w
  2407  036D  3A80               	xorlw	128
  2408  036E  00FF               	movwf	127
  2409  036F  3080               	movlw	128
  2410  0370  027F               	subwf	127,w
  2411  0371  1D03               	skipz
  2412  0372  2B75               	goto	u144_25
  2413  0373  3020               	movlw	32
  2414  0374  0278               	subwf	_bitCnt,w
  2415  0375                     u144_25:	
  2416  0375  1803               	skipnc
  2417  0376  2B9E               	goto	i1l1457
  2418                           
  2419                           ;main.c: 32: {
  2420                           ;main.c: 34: if (timeValue >= 2)
  2421  0377  3000               	movlw	0
  2422  0378  027B               	subwf	_timeValue+1,w
  2423  0379  3002               	movlw	2
  2424  037A  1903               	skipnz
  2425  037B  027A               	subwf	_timeValue,w
  2426  037C  1C03               	skipc
  2427  037D  2BD1               	goto	i1l54
  2428                           
  2429                           ;main.c: 35: {
  2430                           ;main.c: 36: bitPattern |= (uint32_t) 1 << (31 - bitCnt);
  2431  037E  3001               	movlw	1
  2432  037F  00F0               	movwf	??_interrupt_isr
  2433  0380  3000               	movlw	0
  2434  0381  00F1               	movwf	??_interrupt_isr+1
  2435  0382  3000               	movlw	0
  2436  0383  00F2               	movwf	??_interrupt_isr+2
  2437  0384  3000               	movlw	0
  2438  0385  00F3               	movwf	??_interrupt_isr+3
  2439  0386  0378               	decf	_bitCnt,w
  2440  0387  3AFF               	xorlw	255
  2441  0388  3E1F               	addlw	31
  2442  0389  3E01               	addlw	1
  2443  038A  2B90               	goto	u146_20
  2444  038B                     u146_25:	
  2445  038B  1003               	clrc
  2446  038C  0DF0               	rlf	??_interrupt_isr,f
  2447  038D  0DF1               	rlf	??_interrupt_isr+1,f
  2448  038E  0DF2               	rlf	??_interrupt_isr+2,f
  2449  038F  0DF3               	rlf	??_interrupt_isr+3,f
  2450  0390                     u146_20:	
  2451  0390  3EFF               	addlw	-1
  2452  0391  1D03               	skipz
  2453  0392  2B8B               	goto	u146_25
  2454  0393  0870               	movf	??_interrupt_isr,w
  2455  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0396  04A0               	iorwf	_bitPattern^(0+128),f
  2458  0397  0871               	movf	??_interrupt_isr+1,w
  2459  0398  04A1               	iorwf	(_bitPattern+1)^(0+128),f
  2460  0399  0872               	movf	??_interrupt_isr+2,w
  2461  039A  04A2               	iorwf	(_bitPattern+2)^(0+128),f
  2462  039B  0873               	movf	??_interrupt_isr+3,w
  2463  039C  04A3               	iorwf	(_bitPattern+3)^(0+128),f
  2464                           
  2465                           ;main.c: 41: }
  2466                           ;main.c: 42: }
  2467                           
  2468                           ;main.c: 38: else
  2469                           ;main.c: 39: {
  2470                           
  2471                           ;main.c: 37: }
  2472  039D  2BD1               	goto	i1l54
  2473  039E                     i1l1457:	
  2474                           
  2475                           ;main.c: 43: else if (bitCnt >= 32)
  2476  039E  0879               	movf	_bitCnt+1,w
  2477  039F  3A80               	xorlw	128
  2478  03A0  00FF               	movwf	127
  2479  03A1  3080               	movlw	128
  2480  03A2  027F               	subwf	127,w
  2481  03A3  1D03               	skipz
  2482  03A4  2BA7               	goto	u147_25
  2483  03A5  3020               	movlw	32
  2484  03A6  0278               	subwf	_bitCnt,w
  2485  03A7                     u147_25:	
  2486  03A7  1C03               	skipc
  2487  03A8  2BD1               	goto	i1l54
  2488                           
  2489                           ;main.c: 44: {
  2490                           ;main.c: 45: newChar = bitPattern;
  2491  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2492  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2493  03AB  0823               	movf	(_bitPattern+3)^(0+128),w
  2494  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2495  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2496  03AE  00EE               	movwf	_newChar+3
  2497  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2498  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2499  03B1  0822               	movf	(_bitPattern+2)^(0+128),w
  2500  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2502  03B4  00ED               	movwf	_newChar+2
  2503  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2504  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2505  03B7  0821               	movf	(_bitPattern+1)^(0+128),w
  2506  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2507  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2508  03BA  00EC               	movwf	_newChar+1
  2509  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2510  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2511  03BD  0820               	movf	_bitPattern^(0+128),w
  2512  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2513  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2514  03C0  00EB               	movwf	_newChar
  2515                           
  2516                           ;main.c: 46: bitPattern=0;
  2517  03C1  3000               	movlw	0
  2518  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2519  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2520  03C4  00A3               	movwf	(_bitPattern+3)^(0+128)
  2521  03C5  3000               	movlw	0
  2522  03C6  00A2               	movwf	(_bitPattern+2)^(0+128)
  2523  03C7  3000               	movlw	0
  2524  03C8  00A1               	movwf	(_bitPattern+1)^(0+128)
  2525  03C9  3000               	movlw	0
  2526  03CA  00A0               	movwf	_bitPattern^(0+128)
  2527                           
  2528                           ;main.c: 47: bitCnt = 0;
  2529  03CB  01F8               	clrf	_bitCnt
  2530  03CC  01F9               	clrf	_bitCnt+1
  2531                           
  2532                           ;main.c: 48: flag = 1;
  2533  03CD  3001               	movlw	1
  2534  03CE  00A4               	movwf	_flag^(0+128)
  2535  03CF  3000               	movlw	0
  2536  03D0  00A5               	movwf	(_flag^(0+128)+1)
  2537  03D1                     i1l54:	
  2538  03D1  0877               	movf	??_interrupt_isr+7,w
  2539  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2540  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2541  03D4  00FF               	movwf	127
  2542  03D5  0876               	movf	??_interrupt_isr+6,w
  2543  03D6  008A               	movwf	10
  2544  03D7  0875               	movf	??_interrupt_isr+5,w
  2545  03D8  0084               	movwf	4
  2546  03D9  0E74               	swapf	(??_interrupt_isr+4)^(0+-128),w
  2547  03DA  0083               	movwf	3
  2548  03DB  0EFE               	swapf	126,f
  2549  03DC  0E7E               	swapf	126,w
  2550  03DD  0009               	retfie
  2551  03DE                     __end_of_interrupt_isr:	
  2552  007E                     btemp	set	126	;btemp
  2553  007E                     wtemp	set	126
  2554  007E                     wtemp0	set	126
  2555  0080                     wtemp1	set	128
  2556  0082                     wtemp2	set	130
  2557  0084                     wtemp3	set	132
  2558  0086                     wtemp4	set	134
  2559  0088                     wtemp5	set	136
  2560  007F                     wtemp6	set	127
  2561  007E                     ttemp	set	126
  2562  007E                     ttemp0	set	126
  2563  0081                     ttemp1	set	129
  2564  0084                     ttemp2	set	132
  2565  0087                     ttemp3	set	135
  2566  007F                     ttemp4	set	127
  2567  007E                     ltemp	set	126
  2568  007E                     ltemp0	set	126
  2569  0082                     ltemp1	set	130
  2570  0086                     ltemp2	set	134
  2571  0080                     ltemp3	set	128
  2572                           
  2573                           	psect	intentry
  2574  0004                     __pintentry:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _interrupt_isr: [wreg+status,2+status,0+btemp+1]
  2577                           
  2578  0004                     interrupt_function:	
  2579  007E                     saved_w	set	btemp
  2580  0004  00FE               	movwf	btemp
  2581  0005  0E03               	swapf	3,w
  2582  0006  00F4               	movwf	??_interrupt_isr+4
  2583  0007  0804               	movf	4,w
  2584  0008  00F5               	movwf	??_interrupt_isr+5
  2585  0009  080A               	movf	10,w
  2586  000A  00F6               	movwf	??_interrupt_isr+6
  2587  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2588  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2589  000D  087F               	movf	btemp+1,w
  2590  000E  00F7               	movwf	??_interrupt_isr+7
  2591  000F  120A  118A  2B33   	ljmp	_interrupt_isr


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     75      79
    BANK1            80      0       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___bmul
    ___bmul->___lldiv
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv

Critical Paths under _interrupt_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4481
                                             73 BANK0      2     2      0
                          _UART_Init
                        _UART_Printf
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         24    20      4    3661
                                             49 BANK0     24    20      4
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        2     2      0     121
                                              1 BANK0      2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2202
                                             18 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                             14 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             24 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     623
                                             14 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_isr                                        8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)
   _UART_TxString
     _UART_TxChar

 _interrupt_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      62       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       6       7        7.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      62      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Jul 29 12:10:35 2016

                                      pc 0002                           ___bmul@product 0030  
                            __CFG_CP$OFF 0000                    __end_of_interrupt_isr 03DE  
                                     fsr 0004                              __CFG_LVP$ON 0000  
                                    l208 0549                                      _GIE 005F  
                           __CFG_CPD$OFF 0000                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                                   l1201 0537                                     l1221 0400  
                                   l1205 053D                                     l1301 032F  
                                   l1233 0435                                     l1219 03F0  
                                   l1251 048E                                     l1243 04E7  
                                   l1229 0428                                     l1341 009D  
                                   l1333 008C                                     l1421 0232  
                                   l1247 0450                                     l1271 0295  
                                   l1415 01FE                                     l1407 01D7  
                                   l1351 00B8                                     l1423 0238  
                                   l1335 0091                                     l1265 0286  
                                   l1409 01EA                                     l1353 00CE  
                                   l1329 0064                                     l1425 0035  
                                   l1291 030A                                     l1259 0248  
                                   l1267 028A                                     l1371 0129  
                                   l1363 00F5                                     l1419 0200  
                                   l1365 010A                                     l1295 031A  
                                   l1287 0305                                     l1279 02F9  
                                   l1383 016F                                     l1289 0298  
                                   l1377 0150                                     l1397 01AB  
                                   l1389 0196                                     l1399 01BC  
                                   l1489 04C3                                     STR_1 050A  
                                   STR_2 0514                                     u1200 0278  
                                   u1105 0417                                     u1115 0429  
                                   u1143 044E                                     u1153 045F  
                                   u1075 03F4                                     u1165 046A  
                                   u1190 0277                                     u1095 0402  
                                   u1184 025C                                     u1185 0259  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     i1l43 0341  
                                   _RCIF 0065                                     i1l54 03D1  
                                   i1l47 036A                                     _TMR0 0001  
                                   _TXIF 0064                             __CFG_WRT$OFF 0000  
                                   _flag 00A4                                     _main 0497  
                                   btemp 007E                                     ltemp 007E  
                                   start 0012                                     ttemp 007E  
                                   wtemp 007E                        ___bmul@multiplier 0031  
                                  ?_main 0070                            __CFG_WDTE$OFF 0000  
                        __end_of___lldiv 043E                                    _RCREG 001A  
                                  _RCSTA 0018                                    _SPBRG 0099  
                                  _PORTA 0005                                    _PORTB 0006  
                                  _PORTC 0007                                    _PORTD 0008  
                                  _PORTE 0009                                    _TRISA 0085  
                                  _TRISB 0086                                    _TRISC 0087  
                                  _TRISD 0088                                    _TRISE 0089  
                                  _TXREG 0019                                    _TXSTA 0098  
                     __size_of_UART_Init 0016                           __CFG_BOREN$OFF 0000  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                        __initialization 0015                             __end_of_main 04E4  
                                 ??_main 0069                                   i1l1433 033D  
                                 i1l1457 039E                                   u144_25 0375  
                                 u146_20 0390                                   u146_25 038B  
                                 u147_25 03A7                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _TMR1ON 0080  
                      ?_UART_SetBaudRate 002E                       ??_UART_SetBaudRate 0032  
                         __CFG_PWRTE$OFF 0000                             ?_UART_TxChar 0070  
                           ?_UART_Printf 0051                        __end_of_UART_Init 0533  
                                 ___bmul 0533                                   _bitCnt 0078  
                              ??___lldiv 0028  UART_TxNumber@v_numOfDigitsToTransmit_u8 0036  
                                 saved_w 007E                  __end_of__initialization 0026  
                  __end_of_UART_TxNumber 0333                    __end_of_UART_TxString 0504  
                    ___bmul@multiplicand 002E                           __pcstackCOMMON 0070  
                             __pbssBANK0 006B                               __pbssBANK1 00A0  
                             _bitPattern 00A0                               __pmaintext 0497  
                                ?___bmul 002E                               __pintentry 0004  
                             __stringtab 0504                   __size_of_interrupt_isr 00AB  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0215                                  ___lldiv 03DE  
                                __ptext1 002A                                  __ptext2 04E4  
                                __ptext3 023F                                  __ptext4 0533  
                                __ptext5 0546                                  __ptext6 051D  
                                __ptext7 043E                                  __ptext8 03DE  
                                __ptext9 0333                                  _newChar 006B  
                         UART_Printf@ptr 0065                           UART_Printf@str 0057  
                   end_of_initialization 0026                           UART_TxNumber@a 0043  
                         UART_TxNumber@i 0050                          ___lldiv@divisor 0020  
                        ___lldiv@counter 002D           UART_SetBaudRate@v_baudRate_u32 002E  
                          _interrupt_isr 0333                                _UART_Init 051D  
              __size_of_UART_SetBaudRate 0059                               main@oldCnt 0069  
        UART_TxNumber@v_numericSystem_u8 004F                           __end_of___bmul 0546  
                         ?_interrupt_isr 0070                               ?_UART_Init 0038  
                    start_initialization 0015                                 ??___bmul 002F  
                      _UART_TxNumber$173 004D                   __size_of_UART_TxNumber 00F4  
                            __pbssCOMMON 0078                                ___latbits 0002  
                 __size_of_UART_TxString 0020                            __pcstackBANK0 0020  
                        ??_interrupt_isr 0070                                 ?___lldiv 0020  
                            ??_UART_Init 003C                         _UART_SetBaudRate 043E  
                              __pstrings 0504                        interrupt_function 0004  
                          UART_Printf@ch 0066                            ??_UART_TxChar 0020  
                          _UART_TxNumber 023F                            ??_UART_Printf 0055  
                          _UART_TxString 04E4                                _timeValue 007A  
                UART_Init@v_baudRate_u32 0038                  UART_TxString@ptr_string 0022  
                            __stringbase 0509                UART_TxNumber@v_number_u32 0032  
                         ?_UART_TxNumber 0032                           ?_UART_TxString 0070  
               UART_TxChar@v_uartData_u8 0020                      __end_of_UART_TxChar 054F  
                       __size_of___lldiv 0060                      __end_of_UART_Printf 023F  
                           _OverFlowFlag 007C                       __end_of__stringtab 050A  
                          __size_of_main 004D                          UART_Printf@argp 0068  
               UART_SetBaudRate@RegValue 0037                                 intlevel1 0000  
                        ??_UART_TxNumber 0037                 __end_of_UART_SetBaudRate 0497  
                        ??_UART_TxString 0021                         ___lldiv@dividend 0024  
                              stringcode 0504                              _UART_TxChar 0546  
                            _UART_Printf 002A                               _OPTION_REG 0081  
                       ___lldiv@quotient 0029                                 stringdir 0504  
                               stringtab 0504    UART_Printf@v_numOfDigitsToTransmit_u8 0067  
                     UART_Printf@argList 0058                     UART_Printf@v_num_s16 005D  
                   UART_Printf@v_num_s32 0059                     UART_Printf@v_num_u16 0063  
                   UART_Printf@v_num_u32 005F  
