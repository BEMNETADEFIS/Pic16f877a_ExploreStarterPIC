

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Apr 28 13:09:06 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73                           
    74                           	psect	idataBANK0
    75  0764                     __pidataBANK0:	
    76                           
    77                           ;initializer for main@F1073
    78  0764  34C0               	retlw	192
    79  0765  34F9               	retlw	249
    80  0766  34A4               	retlw	164
    81  0767  34B0               	retlw	176
    82  0768  3499               	retlw	153
    83  0769  3492               	retlw	146
    84  076A  3482               	retlw	130
    85  076B  34F8               	retlw	248
    86  076C  3480               	retlw	128
    87  076D  3490               	retlw	144
    88  076E  3488               	retlw	136
    89  076F  3483               	retlw	131
    90  0770  34C6               	retlw	198
    91  0771  34A1               	retlw	161
    92  0772  3486               	retlw	134
    93  0773  348E               	retlw	142
    94  0006                     _PORTB	set	6
    95  0008                     _PORTD	set	8
    96  0086                     _TRISB	set	134
    97  0088                     _TRISD	set	136
    98                           
    99                           	psect	cinit
   100  07F0                     start_initialization:	
   101                           ; #config settings
   102                           
   103  07F0                     __initialization:	
   104                           
   105                           ; Initialize objects allocated to BANK0
   106  07F0  1383               	bcf	3,7	;select IRP bank0
   107  07F1  3042               	movlw	low (__pdataBANK0+16)
   108  07F2  00FD               	movwf	btemp+-1
   109  07F3  3007               	movlw	high __pidataBANK0
   110  07F4  00FE               	movwf	btemp
   111  07F5  3064               	movlw	low __pidataBANK0
   112  07F6  00FF               	movwf	btemp+1
   113  07F7  3032               	movlw	low __pdataBANK0
   114  07F8  0084               	movwf	4
   115  07F9  120A  118A  2778   	fcall	init_ram0
   116  07FC                     end_of_initialization:	
   117                           ;End of C runtime variable initialization code
   118                           
   119  07FC                     __end_of__initialization:	
   120  07FC  0183               	clrf	3
   121  07FD  120A  118A  2FAC   	ljmp	_main	;jump to C main() function
   122                           
   123                           	psect	dataBANK0
   124  0032                     __pdataBANK0:	
   125  0032                     main@F1073:	
   126  0032                     	ds	16
   127                           
   128                           	psect	inittext
   129  0774                     init_fetch0:	
   130                           ;	Called with low address in FSR and high address in W
   131                           
   132  0774  087E               	movf	126,w
   133  0775  008A               	movwf	10
   134  0776  087F               	movf	127,w
   135  0777  0082               	movwf	2
   136  0778                     init_ram0:	
   137                           ;Called with:
   138                           ;	high address of idata address in btemp 
   139                           ;	low address of idata address in btemp+1 
   140                           ;	low address of data in FSR
   141                           ;	high address + 1 of data in btemp-1
   142                           
   143  0778  2774  120A  118A   	fcall	init_fetch0
   144  077B  0080               	movwf	0
   145  077C  0A84               	incf	4,f
   146  077D  0804               	movf	4,w
   147  077E  067D               	xorwf	125,w
   148  077F  1903               	btfsc	3,2
   149  0780  3400               	retlw	0
   150  0781  0AFF               	incf	127,f
   151  0782  1903               	btfsc	3,2
   152  0783  0AFE               	incf	126,f
   153  0784  2F78               	goto	init_ram0
   154                           
   155                           	psect	cstackCOMMON
   156  0070                     __pcstackCOMMON:	
   157  0070                     ?_DELAY_ms:	
   158  0070                     ?_main:	
   159                           ; 0 bytes @ 0x0
   160                           
   161  0070                     DELAY_ms@ms_Count:	
   162                           ; 2 bytes @ 0x0
   163                           
   164                           
   165                           ; 2 bytes @ 0x0
   166  0070                     	ds	2
   167  0072                     ??_DELAY_ms:	
   168  0072                     DELAY_ms@i:	
   169                           ; 0 bytes @ 0x2
   170                           
   171                           
   172                           ; 2 bytes @ 0x2
   173  0072                     	ds	2
   174  0074                     DELAY_ms@j:	
   175                           
   176                           ; 2 bytes @ 0x4
   177  0074                     	ds	2
   178  0076                     ??_main:	
   179                           
   180                           ; 0 bytes @ 0x6
   181  0076                     	ds	4
   182                           
   183                           	psect	cstackBANK0
   184  0020                     __pcstackBANK0:	
   185  0020                     main@seg_code:	
   186                           
   187                           ; 16 bytes @ 0x0
   188  0020                     	ds	16
   189  0030                     main@cnt:	
   190                           
   191                           ; 2 bytes @ 0x10
   192  0030                     	ds	2
   193                           
   194                           	psect	maintext
   195  07AC                     __pmaintext:	
   196 ;;
   197 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   198 ;;
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 24 in file "main.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  seg_code       16    0[BANK0 ] unsigned char [16]
   206 ;;  cnt             2   16[BANK0 ] int 
   207 ;; Return value:  Size  Location     Type
   208 ;;                  2   18[COMMON] int 
   209 ;; Registers used:
   210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 17F/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   216 ;;      Params:         0       0       0       0       0
   217 ;;      Locals:         0      18       0       0       0
   218 ;;      Temps:          4       0       0       0       0
   219 ;;      Totals:         4      18       0       0       0
   220 ;;Total ram usage:       22 bytes
   221 ;; Hardware stack levels required when called:    1
   222 ;; This function calls:
   223 ;;		_DELAY_ms
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           
   230                           ;psect for function _main
   231  07AC                     _main:	
   232                           
   233                           ;main.c: 25: char seg_code[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x8
      +                          3,0xc6,0xa1,0x86,0x8e};
   234                           
   235                           ;incstack = 0
   236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   237  07AC  3020               	movlw	main@seg_code& (0+255)
   238  07AD  0084               	movwf	4
   239  07AE  3032               	movlw	low main@F1073
   240  07AF  00F6               	movwf	??_main
   241  07B0  0804               	movf	4,w
   242  07B1  00F7               	movwf	??_main+1
   243  07B2  3010               	movlw	16
   244  07B3  00F8               	movwf	??_main+2
   245  07B4                     u100:	
   246  07B4  0876               	movf	??_main,w
   247  07B5  0084               	movwf	4
   248  07B6  1383               	bcf	3,7	;select IRP bank0
   249  07B7  0800               	movf	0,w
   250  07B8  00F9               	movwf	??_main+3
   251  07B9  0AF6               	incf	??_main,f
   252  07BA  0877               	movf	??_main+1,w
   253  07BB  0084               	movwf	4
   254  07BC  0879               	movf	??_main+3,w
   255  07BD  0080               	movwf	0
   256  07BE  0AF7               	incf	??_main+1,f
   257  07BF  0BF8               	decfsz	??_main+2,f
   258  07C0  2FB4               	goto	u100
   259                           
   260                           ;main.c: 26: int cnt;
   261                           ;main.c: 29: TRISB = 0x00;
   262  07C1  1683               	bsf	3,5	;RP0=1, select bank1
   263  07C2  1303               	bcf	3,6	;RP1=0, select bank1
   264  07C3  0186               	clrf	6	;volatile
   265                           
   266                           ;main.c: 30: TRISD = 0x00;
   267  07C4  0188               	clrf	8	;volatile
   268  07C5                     l535:	
   269                           ;main.c: 32: while (1)
   270                           
   271                           
   272                           ;main.c: 33: {
   273                           ;main.c: 35: for (cnt = 0x00; cnt < 0x10; cnt++)
   274  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   275  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   276  07C7  01B0               	clrf	main@cnt
   277  07C8  01B1               	clrf	main@cnt+1
   278  07C9                     L1:	
   279  07C9  0831               	movf	main@cnt+1,w
   280  07CA  3A80               	xorlw	128
   281  07CB  00FF               	movwf	127
   282  07CC  3080               	movlw	128
   283  07CD  027F               	subwf	127,w
   284  07CE  1D03               	skipz
   285  07CF  2FD2               	goto	u115
   286  07D0  3010               	movlw	16
   287  07D1  0230               	subwf	main@cnt,w
   288  07D2                     u115:	
   289  07D2  1803               	btfsc	3,0
   290  07D3  2FC5               	goto	l535
   291                           
   292                           ;main.c: 36: {
   293                           ;main.c: 38: PORTD = 0x01;
   294  07D4  3001               	movlw	1
   295  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   296  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   297  07D7  0088               	movwf	8	;volatile
   298                           
   299                           ;main.c: 39: PORTB = seg_code[cnt];
   300  07D8  0830               	movf	main@cnt,w
   301  07D9  3E20               	addlw	main@seg_code& (0+255)
   302  07DA  0084               	movwf	4
   303  07DB  1383               	bcf	3,7	;select IRP bank0
   304  07DC  0800               	movf	0,w
   305  07DD  0086               	movwf	6	;volatile
   306                           
   307                           ;main.c: 40: DELAY_ms(2000);
   308  07DE  30D0               	movlw	208
   309  07DF  00F0               	movwf	DELAY_ms@ms_Count
   310  07E0  3007               	movlw	7
   311  07E1  00F1               	movwf	DELAY_ms@ms_Count+1
   312  07E2  120A  118A  2785  120A  118A  	fcall	_DELAY_ms
   313  07E7  3001               	movlw	1
   314  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   315  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   316  07EA  07B0               	addwf	main@cnt,f
   317  07EB  1803               	skipnc
   318  07EC  0AB1               	incf	main@cnt+1,f
   319  07ED  3000               	movlw	0
   320  07EE  07B1               	addwf	main@cnt+1,f
   321  07EF  2FC9               	goto	L1
   322  07F0                     __end_of_main:	
   323                           
   324                           	psect	text1
   325  0785                     __ptext1:	
   326 ;; *************** function _DELAY_ms *****************
   327 ;; Defined at:
   328 ;;		line 12 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  ms_Count        2    0[COMMON] unsigned int 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  j               2    4[COMMON] unsigned int 
   333 ;;  i               2    2[COMMON] unsigned int 
   334 ;; Return value:  Size  Location     Type
   335 ;;		None               void
   336 ;; Registers used:
   337 ;;		wreg, status,2
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         2       0       0       0       0
   344 ;;      Locals:         4       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         6       0       0       0       0
   347 ;;Total ram usage:        6 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _DELAY_ms
   358  0785                     _DELAY_ms:	
   359                           
   360                           ;main.c: 14: unsigned int i,j;
   361                           ;main.c: 15: for(i=0;i<ms_Count;i++)
   362                           
   363                           ;incstack = 0
   364                           ; Regs used in _DELAY_ms: [wreg+status,2]
   365  0785  01F2               	clrf	DELAY_ms@i
   366  0786  01F3               	clrf	DELAY_ms@i+1
   367  0787                     l11:	
   368  0787  0871               	movf	DELAY_ms@ms_Count+1,w
   369  0788  0273               	subwf	DELAY_ms@i+1,w
   370  0789  1D03               	skipz
   371  078A  2F8D               	goto	u95
   372  078B  0870               	movf	DELAY_ms@ms_Count,w
   373  078C  0272               	subwf	DELAY_ms@i,w
   374  078D                     u95:	
   375  078D  1803               	btfsc	3,0
   376  078E  0008               	return
   377                           
   378                           ;main.c: 16: {
   379                           ;main.c: 17: for(j=0;j<1000;j++);
   380  078F  01F4               	clrf	DELAY_ms@j
   381  0790  01F5               	clrf	DELAY_ms@j+1
   382  0791  3003               	movlw	3
   383  0792  0275               	subwf	DELAY_ms@j+1,w
   384  0793  30E8               	movlw	232
   385  0794  1903               	skipnz
   386  0795  0274               	subwf	DELAY_ms@j,w
   387  0796  1803               	btfsc	3,0
   388  0797  2FA5               	goto	l527
   389  0798                     l525:	
   390  0798  3001               	movlw	1
   391  0799  07F4               	addwf	DELAY_ms@j,f
   392  079A  1803               	skipnc
   393  079B  0AF5               	incf	DELAY_ms@j+1,f
   394  079C  3000               	movlw	0
   395  079D  07F5               	addwf	DELAY_ms@j+1,f
   396  079E  3003               	movlw	3
   397  079F  0275               	subwf	DELAY_ms@j+1,w
   398  07A0  30E8               	movlw	232
   399  07A1  1903               	skipnz
   400  07A2  0274               	subwf	DELAY_ms@j,w
   401  07A3  1C03               	skipc
   402  07A4  2F98               	goto	l525
   403  07A5                     l527:	
   404  07A5  3001               	movlw	1
   405  07A6  07F2               	addwf	DELAY_ms@i,f
   406  07A7  1803               	skipnc
   407  07A8  0AF3               	incf	DELAY_ms@i+1,f
   408  07A9  3000               	movlw	0
   409  07AA  07F3               	addwf	DELAY_ms@i+1,f
   410  07AB  2F87               	goto	l11
   411  07AC                     __end_of_DELAY_ms:	
   412  007E                     btemp	set	126	;btemp
   413  007E                     wtemp	set	126
   414  007E                     wtemp0	set	126
   415  0080                     wtemp1	set	128
   416  0082                     wtemp2	set	130
   417  0084                     wtemp3	set	132
   418  0086                     wtemp4	set	134
   419  0088                     wtemp5	set	136
   420  007F                     wtemp6	set	127
   421  007E                     ttemp	set	126
   422  007E                     ttemp0	set	126
   423  0081                     ttemp1	set	129
   424  0084                     ttemp2	set	132
   425  0087                     ttemp3	set	135
   426  007F                     ttemp4	set	127
   427  007E                     ltemp	set	126
   428  007E                     ltemp0	set	126
   429  0082                     ltemp1	set	130
   430  0086                     ltemp2	set	134
   431  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     18      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DELAY_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     237
                                              6 COMMON     4     4      0
                                              0 BANK0     18    18      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             6     4      2     145
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Apr 28 13:09:06 2016

                      pc 0002                       l11 0787                       u95 078D  
                     fsr 0004                      l525 0798                      l527 07A5  
                    l535 07C5                      u100 07B4                      u115 07D2  
                    fsr0 0004                      indf 0000                     _main 07AC  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E         __end_of_DELAY_ms 07AC  
                  ?_main 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088             main@seg_code 0020  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F0             __end_of_main 07F0                   ??_main 0076  
              DELAY_ms@i 0072                DELAY_ms@j 0074         DELAY_ms@ms_Count 0070  
              ?_DELAY_ms 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0764               ??_DELAY_ms 0072               __pmaintext 07AC  
                __ptext1 0785                  main@cnt 0030     end_of_initialization 07FC  
      __size_of_DELAY_ms 0027      start_initialization 07F0               init_fetch0 0774  
            __pdataBANK0 0032                ___latbits 0002            __pcstackBANK0 0020  
               _DELAY_ms 0785                main@F1073 0032            __size_of_main 0044  
               init_ram0 0778  
