Version 3.2 HI-TECH Software Intermediate Code
"89 ../../SampleCode/00-libfiles/lcd.c
[c E33 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 255 .. ]
[n E33 . PA_0 PA_1 PA_2 PA_3 PA_4 PA_5 PA_6 PA_7 PB_0 PB_1 PB_2 PB_3 PB_4 PB_5 PB_6 PB_7 PC_0 PC_1 PC_2 PC_3 PC_4 PC_5 PC_6 PC_7 PD_0 PD_1 PD_2 PD_3 PD_4 PD_5 PD_6 PD_7 PE_0 PE_1 PE_2 PE_3 PE_4 PE_5 PE_6 PE_7 P_NC  ]
"124 ../../SampleCode/00-libfiles/lcd.h
[s S1 `uc 1 `uc 1 `uc 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 `E33 1 ]
[n S1 . v_MaxSupportedLines_U8 v_MaxSupportedChars_U8 v_LcdMode_U8 RS RW EN D0 D1 D2 D3 D4 D5 D6 D7 ]
"66 ../../SampleCode/00-libfiles/gpio.h
[v _GPIO_PinDirection `(v ~T0 @X0 0 ef2`E33`uc ]
"68 ../../SampleCode/00-libfiles/delay.h
[v _DELAY_ms `(v ~T0 @X0 0 ef1`ui ]
"151 ../../SampleCode/00-libfiles/lcd.h
[v _LCD_CmdWrite `(v ~T0 @X0 0 ef1`uc ]
"101 ../../SampleCode/00-libfiles/lcd.c
[v _lcd_Reset `(v ~T0 @X0 0 sf ]
"153 ../../SampleCode/00-libfiles/lcd.h
[v _LCD_Clear `(v ~T0 @X0 0 ef ]
"154
[v _LCD_GoToLine `(v ~T0 @X0 0 ef1`uc ]
"100 ../../SampleCode/00-libfiles/lcd.c
[v _lcd_BusyCheck `(v ~T0 @X0 0 sf ]
"105
[v _lcd_SendLowerNibble `(v ~T0 @X0 0 sf1`uc ]
"104
[v _lcd_SendHigherNibble `(v ~T0 @X0 0 sf1`uc ]
"102
[v _lcd_SendCmdSignals `(v ~T0 @X0 0 sf ]
"99
[v _lcd_DataWrite `(v ~T0 @X0 0 sf1`uc ]
"10 C:\Program Files\Microchip\xc8\v1.32\include\stdarg.h
[v ___va_start `(*v ~T0 @X0 0 ef ]
[p i ___va_start ]
"13
[v ___va_arg `(*v ~T0 @X0 0 ev`*v ]
[p i ___va_arg ]
"103 ../../SampleCode/00-libfiles/lcd.c
[v _lcd_SendDataSignals `(v ~T0 @X0 0 sf ]
"67 ../../SampleCode/00-libfiles/gpio.h
[v _GPIO_PinWrite `(v ~T0 @X0 0 ef2`E33`uc ]
"67 ../../SampleCode/00-libfiles/delay.h
[v _DELAY_us `(v ~T0 @X0 0 ef1`ui ]
"68 ../../SampleCode/00-libfiles/gpio.h
[v _GPIO_PinRead `(uc ~T0 @X0 0 ef1`E33 ]
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdutils.h: 68: typedef signed char sint8_t;
[; ;stdutils.h: 69: typedef unsigned char uint8_t;
[; ;stdutils.h: 71: typedef signed int sint16_t;
[; ;stdutils.h: 72: typedef unsigned int uint16_t;
[; ;stdutils.h: 74: typedef signed long int sint32_t;
[; ;stdutils.h: 75: typedef unsigned long int uint32_t;
[; ;stdutils.h: 177: typedef enum
[; ;stdutils.h: 178: {
[; ;stdutils.h: 179: E_FALSE,
[; ;stdutils.h: 180: E_TRUE
[; ;stdutils.h: 181: }Boolean_et;
[; ;stdutils.h: 184: typedef enum
[; ;stdutils.h: 185: {
[; ;stdutils.h: 186: E_FAILED,
[; ;stdutils.h: 187: E_SUCCESS,
[; ;stdutils.h: 188: E_BUSY,
[; ;stdutils.h: 189: E_TIMEOUT
[; ;stdutils.h: 190: }Status_et;
[; ;stdutils.h: 193: typedef enum
[; ;stdutils.h: 194: {
[; ;stdutils.h: 195: E_BINARY=2,
[; ;stdutils.h: 196: E_DECIMAL = 10,
[; ;stdutils.h: 197: E_HEX = 16
[; ;stdutils.h: 198: }NumericSystem_et;
"299 ../../SampleCode/00-libfiles/stdutils.h
[p x FOSC=HS ]
"300
[p x WDTE=OFF ]
"301
[p x PWRTE=OFF ]
"302
[p x BOREN=OFF ]
"303
[p x LVP=ON ]
"304
[p x CPD=OFF ]
"305
[p x WRT=OFF ]
"306
[p x CP=OFF ]
[; ;delay.h: 67: void DELAY_us(uint16_t us_count);
[; ;delay.h: 68: void DELAY_ms(uint16_t ms_count);
[; ;delay.h: 69: void DELAY_sec(uint16_t var_delaySecCount_u16);
[; ;gpio.h: 48: typedef enum
[; ;gpio.h: 49: {
[; ;gpio.h: 50: PA_0,PA_1,PA_2,PA_3,PA_4,PA_5,PA_6,PA_7,
[; ;gpio.h: 51: PB_0,PB_1,PB_2,PB_3,PB_4,PB_5,PB_6,PB_7,
[; ;gpio.h: 52: PC_0,PC_1,PC_2,PC_3,PC_4,PC_5,PC_6,PC_7,
[; ;gpio.h: 53: PD_0,PD_1,PD_2,PD_3,PD_4,PD_5,PD_6,PD_7,
[; ;gpio.h: 54: PE_0,PE_1,PE_2,PE_3,PE_4,PE_5,PE_6,PE_7,
[; ;gpio.h: 55: P_NC = 0xff
[; ;gpio.h: 56: }gpioPins_et;
[; ;gpio.h: 66: void GPIO_PinDirection(gpioPins_et enm_pinNumber, uint8_t var_pinDirn_u8);
[; ;gpio.h: 67: void GPIO_PinWrite(gpioPins_et enm_pinNumber, uint8_t var_pinValue_u8);
[; ;gpio.h: 68: uint8_t GPIO_PinRead(gpioPins_et enm_pinNumber);
[; ;lcd.h: 123: typedef struct
[; ;lcd.h: 124: {
[; ;lcd.h: 125: uint8_t v_MaxSupportedLines_U8;
[; ;lcd.h: 126: uint8_t v_MaxSupportedChars_U8;
[; ;lcd.h: 127: uint8_t v_LcdMode_U8;
[; ;lcd.h: 128: gpioPins_et RS;
[; ;lcd.h: 129: gpioPins_et RW;
[; ;lcd.h: 130: gpioPins_et EN;
[; ;lcd.h: 131: gpioPins_et D0;
[; ;lcd.h: 132: gpioPins_et D1;
[; ;lcd.h: 133: gpioPins_et D2;
[; ;lcd.h: 134: gpioPins_et D3;
[; ;lcd.h: 135: gpioPins_et D4;
[; ;lcd.h: 136: gpioPins_et D5;
[; ;lcd.h: 137: gpioPins_et D6;
[; ;lcd.h: 138: gpioPins_et D7;
[; ;lcd.h: 139: }LcdConfig_st;
[; ;lcd.h: 150: void LCD_Init(uint8_t v_lcdNoOfLines_u8, uint8_t v_MaxCharsPerLine_u8);
[; ;lcd.h: 151: void LCD_CmdWrite( uint8_t v_lcdCmd_u8);
[; ;lcd.h: 152: void LCD_DisplayChar( char v_lcdData_u8);
[; ;lcd.h: 153: void LCD_Clear();
[; ;lcd.h: 154: void LCD_GoToLine(uint8_t v_lineNumber_u8);
[; ;lcd.h: 155: void LCD_GoToNextLine();
[; ;lcd.h: 156: void LCD_SetCursor(uint8_t v_lineNumber_u8, uint8_t v_charNumber_u8);
[; ;lcd.h: 157: void LCD_DisplayString(const char *ptr_stringPointer_u8);
[; ;lcd.h: 158: void LCD_ScrollMessage(uint8_t v_lineNumber_u8, char *ptr_msgPointer_u8);
[; ;lcd.h: 159: void LCD_DisplayNumber(uint8_t v_numericSystem_u8, uint32_t v_number_u32, uint8_t v_numOfDigitsToDisplay_u8);
[; ;lcd.h: 160: void LCD_DisplayFloatNumber(double v_floatNum_f32);
[; ;lcd.h: 161: void LCD_Printf(const char *argList, ...);
[; ;lcd.h: 162: void LCD_SetUp(gpioPins_et RS,
[; ;lcd.h: 163: gpioPins_et RW,
[; ;lcd.h: 164: gpioPins_et EN,
[; ;lcd.h: 165: gpioPins_et D0,
[; ;lcd.h: 166: gpioPins_et D1,
[; ;lcd.h: 167: gpioPins_et D2,
[; ;lcd.h: 168: gpioPins_et D3,
[; ;lcd.h: 169: gpioPins_et D4,
[; ;lcd.h: 170: gpioPins_et D5,
[; ;lcd.h: 171: gpioPins_et D6,
[; ;lcd.h: 172: gpioPins_et D7 );
"76 ../../SampleCode/00-libfiles/lcd.c
[p k ]
"77
[p n 752 ]
"79
[p n 520 ]
"81
[p n 356 ]
"87
[v _v_LcdTrackLineNum_U8 `uc ~T0 @X0 1 e ]
[; ;lcd.c: 87: uint8_t v_LcdTrackLineNum_U8;
"88
[v _v_LcdTrackCursorPos_U8 `uc ~T0 @X0 1 e ]
[; ;lcd.c: 88: uint8_t v_LcdTrackCursorPos_U8;
"89
[v _LCDConfig `S1 ~T0 @X0 1 e ]
[; ;lcd.c: 89: LcdConfig_st LCDConfig;
"90
[v _ARR_LcdLineNumAddress_U8 `uc ~T0 @X0 -> 0 `x e ]
[i _ARR_LcdLineNumAddress_U8
:U ..
-> -> 128 `i `uc
-> -> 192 `i `uc
-> -> 144 `i `uc
-> -> 208 `i `uc
..
]
[; ;lcd.c: 90: uint8_t ARR_LcdLineNumAddress_U8[]={0x80,0xc0,0x90,0xd0};
[; ;lcd.c: 99: static void lcd_DataWrite( uint8_t dat);
[; ;lcd.c: 100: static void lcd_BusyCheck(void);
[; ;lcd.c: 101: static void lcd_Reset(void);
[; ;lcd.c: 102: static void lcd_SendCmdSignals(void);
[; ;lcd.c: 103: static void lcd_SendDataSignals(void);
[; ;lcd.c: 104: static void lcd_SendHigherNibble(uint8_t dataByte);
[; ;lcd.c: 105: static void lcd_SendLowerNibble(uint8_t dataByte);
"135
[v _LCD_SetUp `(v ~T0 @X0 1 ef11`E33`E33`E33`E33`E33`E33`E33`E33`E33`E33`E33 ]
"146
{
[; ;lcd.c: 135: void LCD_SetUp(gpioPins_et RS,
[; ;lcd.c: 136: gpioPins_et RW,
[; ;lcd.c: 137: gpioPins_et EN,
[; ;lcd.c: 138: gpioPins_et D0,
[; ;lcd.c: 139: gpioPins_et D1,
[; ;lcd.c: 140: gpioPins_et D2,
[; ;lcd.c: 141: gpioPins_et D3,
[; ;lcd.c: 142: gpioPins_et D4,
[; ;lcd.c: 143: gpioPins_et D5,
[; ;lcd.c: 144: gpioPins_et D6,
[; ;lcd.c: 145: gpioPins_et D7 )
[; ;lcd.c: 146: {
[e :U _LCD_SetUp ]
"135
[v _RS `E33 ~T0 @X0 1 r1 ]
"136
[v _RW `E33 ~T0 @X0 1 r2 ]
"137
[v _EN `E33 ~T0 @X0 1 r3 ]
"138
[v _D0 `E33 ~T0 @X0 1 r4 ]
"139
[v _D1 `E33 ~T0 @X0 1 r5 ]
"140
[v _D2 `E33 ~T0 @X0 1 r6 ]
"141
[v _D3 `E33 ~T0 @X0 1 r7 ]
"142
[v _D4 `E33 ~T0 @X0 1 r8 ]
"143
[v _D5 `E33 ~T0 @X0 1 r9 ]
"144
[v _D6 `E33 ~T0 @X0 1 r10 ]
"145
[v _D7 `E33 ~T0 @X0 1 r11 ]
"146
[f ]
[; ;lcd.c: 148: LCDConfig.RS = RS;
"148
[e = . _LCDConfig 3 _RS ]
[; ;lcd.c: 149: LCDConfig.RW = RW;
"149
[e = . _LCDConfig 4 _RW ]
[; ;lcd.c: 150: LCDConfig.EN = EN;
"150
[e = . _LCDConfig 5 _EN ]
[; ;lcd.c: 152: LCDConfig.D0 = D0;
"152
[e = . _LCDConfig 6 _D0 ]
[; ;lcd.c: 153: LCDConfig.D1 = D1;
"153
[e = . _LCDConfig 7 _D1 ]
[; ;lcd.c: 154: LCDConfig.D2 = D2;
"154
[e = . _LCDConfig 8 _D2 ]
[; ;lcd.c: 155: LCDConfig.D3 = D3;
"155
[e = . _LCDConfig 9 _D3 ]
[; ;lcd.c: 156: LCDConfig.D4 = D4;
"156
[e = . _LCDConfig 10 _D4 ]
[; ;lcd.c: 157: LCDConfig.D5 = D5;
"157
[e = . _LCDConfig 11 _D5 ]
[; ;lcd.c: 158: LCDConfig.D6 = D6;
"158
[e = . _LCDConfig 12 _D6 ]
[; ;lcd.c: 159: LCDConfig.D7 = D7;
"159
[e = . _LCDConfig 13 _D7 ]
[; ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
"162
[e $ ! || || || == -> _D0 `i -> . `E33 40 `i == -> _D1 `i -> . `E33 40 `i == -> _D2 `i -> . `E33 40 `i == -> _D3 `i -> . `E33 40 `i 3  ]
[; ;lcd.c: 163: {
"163
{
[; ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
"164
[e = . _LCDConfig 2 -> -> 4 `i `uc ]
"165
}
[; ;lcd.c: 165: }
[e $U 4  ]
"166
[e :U 3 ]
[; ;lcd.c: 166: else
[; ;lcd.c: 167: {
"167
{
[; ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
"168
[e = . _LCDConfig 2 -> -> 8 `i `uc ]
[; ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
"169
[e ( _GPIO_PinDirection (2 , _D0 -> -> 0 `ui `uc ]
[; ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
"170
[e ( _GPIO_PinDirection (2 , _D1 -> -> 0 `ui `uc ]
[; ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
"171
[e ( _GPIO_PinDirection (2 , _D2 -> -> 0 `ui `uc ]
[; ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
"172
[e ( _GPIO_PinDirection (2 , _D3 -> -> 0 `ui `uc ]
"173
}
[e :U 4 ]
[; ;lcd.c: 173: }
[; ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
"176
[e ( _GPIO_PinDirection (2 , _RS -> -> 0 `ui `uc ]
[; ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
"177
[e ( _GPIO_PinDirection (2 , _RW -> -> 0 `ui `uc ]
[; ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
"178
[e ( _GPIO_PinDirection (2 , _EN -> -> 0 `ui `uc ]
[; ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
"180
[e ( _GPIO_PinDirection (2 , _D4 -> -> 0 `ui `uc ]
[; ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
"181
[e ( _GPIO_PinDirection (2 , _D5 -> -> 0 `ui `uc ]
[; ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
"182
[e ( _GPIO_PinDirection (2 , _D6 -> -> 0 `ui `uc ]
[; ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
"183
[e ( _GPIO_PinDirection (2 , _D7 -> -> 0 `ui `uc ]
[; ;lcd.c: 184: }
"184
[e :UE 2 ]
}
"198
[v _LCD_Init `(v ~T0 @X0 1 ef2`uc`uc ]
"199
{
[; ;lcd.c: 198: void LCD_Init(uint8_t v_lcdNoOfLines_u8, uint8_t v_MaxCharsPerLine_u8)
[; ;lcd.c: 199: {
[e :U _LCD_Init ]
"198
[v _v_lcdNoOfLines_u8 `uc ~T0 @X0 1 r1 ]
[v _v_MaxCharsPerLine_u8 `uc ~T0 @X0 1 r2 ]
"199
[f ]
[; ;lcd.c: 202: if(v_lcdNoOfLines_u8 == 1)
"202
[e $ ! == -> _v_lcdNoOfLines_u8 `i -> 1 `i 6  ]
[; ;lcd.c: 203: {
"203
{
[; ;lcd.c: 204: v_MaxCharsPerLine_u8 = v_MaxCharsPerLine_u8>>1;
"204
[e = _v_MaxCharsPerLine_u8 -> >> -> _v_MaxCharsPerLine_u8 `i -> 1 `i `uc ]
[; ;lcd.c: 205: v_lcdNoOfLines_u8 = 2;
"205
[e = _v_lcdNoOfLines_u8 -> -> 2 `i `uc ]
"206
}
[e :U 6 ]
[; ;lcd.c: 206: }
[; ;lcd.c: 208: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
"208
[e = . _LCDConfig 1 _v_MaxCharsPerLine_u8 ]
[; ;lcd.c: 209: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
"209
[e = . _LCDConfig 0 _v_lcdNoOfLines_u8 ]
[; ;lcd.c: 210: if(v_lcdNoOfLines_u8 > 0x02)
"210
[e $ ! > -> _v_lcdNoOfLines_u8 `i -> 2 `i 7  ]
[; ;lcd.c: 211: {
"211
{
[; ;lcd.c: 212: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
"212
[e = *U + &U _ARR_LcdLineNumAddress_U8 * -> -> -> 2 `i `ui `ux -> -> # *U &U _ARR_LcdLineNumAddress_U8 `ui `ux -> + -> -> 144 `i `ui & -> _v_MaxCharsPerLine_u8 `ui -> 15 `ui `uc ]
[; ;lcd.c: 213: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
"213
[e = *U + &U _ARR_LcdLineNumAddress_U8 * -> -> -> 3 `i `ui `ux -> -> # *U &U _ARR_LcdLineNumAddress_U8 `ui `ux -> + -> -> 208 `i `ui & -> _v_MaxCharsPerLine_u8 `ui -> 15 `ui `uc ]
"214
}
[e :U 7 ]
[; ;lcd.c: 214: }
[; ;lcd.c: 216: DELAY_ms(100);
"216
[e ( _DELAY_ms (1 -> -> 100 `i `ui ]
[; ;lcd.c: 218: if(LCDConfig.v_LcdMode_U8 == 8u)
"218
[e $ ! == -> . _LCDConfig 2 `ui -> 8 `ui 8  ]
[; ;lcd.c: 219: {
"219
{
[; ;lcd.c: 220: LCD_CmdWrite(0x38u);
"220
[e ( _LCD_CmdWrite (1 -> -> 56 `ui `uc ]
"221
}
[; ;lcd.c: 221: }
[e $U 9  ]
"222
[e :U 8 ]
[; ;lcd.c: 222: else if(LCDConfig.v_LcdMode_U8 == 4u)
[e $ ! == -> . _LCDConfig 2 `ui -> 4 `ui 10  ]
[; ;lcd.c: 223: {
"223
{
[; ;lcd.c: 224: lcd_Reset();
"224
[e ( _lcd_Reset ..  ]
[; ;lcd.c: 225: LCD_CmdWrite(0x28u);
"225
[e ( _LCD_CmdWrite (1 -> -> 40 `ui `uc ]
"226
}
[e :U 10 ]
"228
[e :U 9 ]
[; ;lcd.c: 226: }
[; ;lcd.c: 228: LCD_CmdWrite(0x0Eu);
[e ( _LCD_CmdWrite (1 -> -> 14 `ui `uc ]
[; ;lcd.c: 229: LCD_Clear();
"229
[e ( _LCD_Clear ..  ]
[; ;lcd.c: 230: }
"230
[e :UE 5 ]
}
"243
[v _LCD_Clear `(v ~T0 @X0 1 ef ]
"244
{
[; ;lcd.c: 243: void LCD_Clear()
[; ;lcd.c: 244: {
[e :U _LCD_Clear ]
[f ]
[; ;lcd.c: 245: LCD_CmdWrite(0x01u);
"245
[e ( _LCD_CmdWrite (1 -> -> 1 `ui `uc ]
[; ;lcd.c: 246: LCD_GoToLine(0x00);
"246
[e ( _LCD_GoToLine (1 -> -> 0 `i `uc ]
[; ;lcd.c: 247: }
"247
[e :UE 11 ]
}
"271
[v _LCD_GoToLine `(v ~T0 @X0 1 ef1`uc ]
"272
{
[; ;lcd.c: 271: void LCD_GoToLine(uint8_t v_lineNumber_u8)
[; ;lcd.c: 272: {
[e :U _LCD_GoToLine ]
"271
[v _v_lineNumber_u8 `uc ~T0 @X0 1 r1 ]
"272
[f ]
[; ;lcd.c: 273: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
"273
[e $ ! < -> _v_lineNumber_u8 `i -> . _LCDConfig 0 `i 13  ]
[; ;lcd.c: 274: {
"274
{
[; ;lcd.c: 277: v_LcdTrackCursorPos_U8 = 0x00;
"277
[e = _v_LcdTrackCursorPos_U8 -> -> 0 `i `uc ]
[; ;lcd.c: 278: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
"278
[e = _v_LcdTrackLineNum_U8 _v_lineNumber_u8 ]
[; ;lcd.c: 279: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
"279
[e ( _LCD_CmdWrite (1 *U + &U _ARR_LcdLineNumAddress_U8 * -> _v_lineNumber_u8 `ux -> -> # *U &U _ARR_LcdLineNumAddress_U8 `ui `ux ]
"280
}
[e :U 13 ]
[; ;lcd.c: 280: }
[; ;lcd.c: 281: }
"281
[e :UE 12 ]
}
"298
[v _LCD_GoToNextLine `(v ~T0 @X0 1 ef ]
"299
{
[; ;lcd.c: 298: void LCD_GoToNextLine(void)
[; ;lcd.c: 299: {
[e :U _LCD_GoToNextLine ]
[f ]
[; ;lcd.c: 302: v_LcdTrackLineNum_U8++;
"302
[e ++ _v_LcdTrackLineNum_U8 -> -> 1 `i `uc ]
[; ;lcd.c: 303: v_LcdTrackCursorPos_U8 = 0x00;
"303
[e = _v_LcdTrackCursorPos_U8 -> -> 0 `i `uc ]
[; ;lcd.c: 304: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
"304
[e $ ! >= -> _v_LcdTrackLineNum_U8 `i -> . _LCDConfig 0 `i 15  ]
[; ;lcd.c: 305: v_LcdTrackLineNum_U8 = 0x00;
"305
[e = _v_LcdTrackLineNum_U8 -> -> 0 `i `uc ]
[e :U 15 ]
[; ;lcd.c: 306: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
"306
[e ( _LCD_CmdWrite (1 *U + &U _ARR_LcdLineNumAddress_U8 * -> _v_LcdTrackLineNum_U8 `ux -> -> # *U &U _ARR_LcdLineNumAddress_U8 `ui `ux ]
[; ;lcd.c: 307: }
"307
[e :UE 14 ]
}
"364
[v _LCD_CmdWrite `(v ~T0 @X0 1 ef1`uc ]
"365
{
[; ;lcd.c: 364: void LCD_CmdWrite( uint8_t v_lcdCmd_u8)
[; ;lcd.c: 365: {
[e :U _LCD_CmdWrite ]
"364
[v _v_lcdCmd_u8 `uc ~T0 @X0 1 r1 ]
"365
[f ]
[; ;lcd.c: 366: lcd_BusyCheck();
"366
[e ( _lcd_BusyCheck ..  ]
[; ;lcd.c: 367: if(LCDConfig.v_LcdMode_U8 == 8u)
"367
[e $ ! == -> . _LCDConfig 2 `ui -> 8 `ui 17  ]
[; ;lcd.c: 368: {
"368
{
[; ;lcd.c: 369: lcd_SendLowerNibble(v_lcdCmd_u8);
"369
[e ( _lcd_SendLowerNibble (1 _v_lcdCmd_u8 ]
"370
}
[; ;lcd.c: 370: }
[e $U 18  ]
"371
[e :U 17 ]
[; ;lcd.c: 371: else
[; ;lcd.c: 372: {
"372
{
[; ;lcd.c: 373: lcd_SendHigherNibble(v_lcdCmd_u8);
"373
[e ( _lcd_SendHigherNibble (1 _v_lcdCmd_u8 ]
[; ;lcd.c: 374: lcd_SendCmdSignals();
"374
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 375: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
"375
[e = _v_lcdCmd_u8 -> << -> _v_lcdCmd_u8 `i -> 4 `i `uc ]
"376
}
[e :U 18 ]
[; ;lcd.c: 376: }
[; ;lcd.c: 378: lcd_SendHigherNibble(v_lcdCmd_u8);
"378
[e ( _lcd_SendHigherNibble (1 _v_lcdCmd_u8 ]
[; ;lcd.c: 379: lcd_SendCmdSignals();
"379
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 380: }
"380
[e :UE 16 ]
}
"398
[v _LCD_DisplayChar `(v ~T0 @X0 1 ef1`uc ]
"399
{
[; ;lcd.c: 398: void LCD_DisplayChar(char v_lcdData_u8)
[; ;lcd.c: 399: {
[e :U _LCD_DisplayChar ]
"398
[v _v_lcdData_u8 `uc ~T0 @X0 1 r1 ]
"399
[f ]
[; ;lcd.c: 400: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData_u8=='\n'))
"400
[e $ ! || >= -> _v_LcdTrackCursorPos_U8 `i -> . _LCDConfig 1 `i == -> _v_lcdData_u8 `ui -> 10 `ui 20  ]
[; ;lcd.c: 401: {
"401
{
[; ;lcd.c: 404: LCD_GoToNextLine();
"404
[e ( _LCD_GoToNextLine ..  ]
"405
}
[e :U 20 ]
[; ;lcd.c: 405: }
[; ;lcd.c: 406: if(v_lcdData_u8!='\n')
"406
[e $ ! != -> _v_lcdData_u8 `ui -> 10 `ui 21  ]
[; ;lcd.c: 407: {
"407
{
[; ;lcd.c: 409: lcd_DataWrite(v_lcdData_u8);
"409
[e ( _lcd_DataWrite (1 _v_lcdData_u8 ]
[; ;lcd.c: 410: v_LcdTrackCursorPos_U8++;
"410
[e ++ _v_LcdTrackCursorPos_U8 -> -> 1 `i `uc ]
"411
}
[e :U 21 ]
[; ;lcd.c: 411: }
[; ;lcd.c: 412: }
"412
[e :UE 19 ]
}
"433
[v _LCD_DisplayString `(v ~T0 @X0 1 ef1`*Cuc ]
"434
{
[; ;lcd.c: 433: void LCD_DisplayString(const char *ptr_stringPointer_u8)
[; ;lcd.c: 434: {
[e :U _LCD_DisplayString ]
"433
[v _ptr_stringPointer_u8 `*Cuc ~T0 @X0 1 r1 ]
"434
[f ]
[; ;lcd.c: 435: while((*ptr_stringPointer_u8)!=0)
"435
[e $U 23  ]
[e :U 24 ]
[; ;lcd.c: 436: LCD_DisplayChar(*ptr_stringPointer_u8++);
"436
[e ( _LCD_DisplayChar (1 *U ++ _ptr_stringPointer_u8 * -> -> 1 `i `x -> -> # *U _ptr_stringPointer_u8 `i `x ]
[e :U 23 ]
"435
[e $ != -> *U _ptr_stringPointer_u8 `i -> 0 `i 24  ]
[e :U 25 ]
[; ;lcd.c: 437: }
"437
[e :UE 22 ]
}
"535
[v _LCD_DisplayNumber `(v ~T0 @X0 1 ef3`uc`ul`uc ]
"536
{
[; ;lcd.c: 535: void LCD_DisplayNumber(uint8_t v_numericSystem_u8, uint32_t v_number_u32, uint8_t v_numOfDigitsToDisplay_u8)
[; ;lcd.c: 536: {
[e :U _LCD_DisplayNumber ]
"535
[v _v_numericSystem_u8 `uc ~T0 @X0 1 r1 ]
[v _v_number_u32 `ul ~T0 @X0 1 r2 ]
[v _v_numOfDigitsToDisplay_u8 `uc ~T0 @X0 1 r3 ]
"536
[f ]
"537
[v _i `uc ~T0 @X0 1 a ]
[; ;lcd.c: 537: uint8_t i=0,a[10];
[e = _i -> -> 0 `i `uc ]
[v _a `uc ~T0 @X0 -> 10 `i a ]
[; ;lcd.c: 539: if(2u == v_numericSystem_u8)
"539
[e $ ! == -> 2 `ui -> _v_numericSystem_u8 `ui 27  ]
[; ;lcd.c: 540: {
"540
{
[; ;lcd.c: 541: while(v_numOfDigitsToDisplay_u8!=0)
"541
[e $U 28  ]
[e :U 29 ]
[; ;lcd.c: 542: {
"542
{
[; ;lcd.c: 545: i = (((v_number_u32)&((1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
"545
[e = _i -> -> != & _v_number_u32 -> -> << -> 1 `i - -> _v_numOfDigitsToDisplay_u8 `i -> 1 `i `l `ul -> -> 0 `ui `ul `i `uc ]
[; ;lcd.c: 546: LCD_DisplayChar(((i)+0x30));
"546
[e ( _LCD_DisplayChar (1 -> + -> _i `i -> 48 `i `uc ]
[; ;lcd.c: 547: v_numOfDigitsToDisplay_u8--;
"547
[e -- _v_numOfDigitsToDisplay_u8 -> -> 1 `i `uc ]
"548
}
[e :U 28 ]
"541
[e $ != -> _v_numOfDigitsToDisplay_u8 `i -> 0 `i 29  ]
[e :U 30 ]
"549
}
[; ;lcd.c: 548: }
[; ;lcd.c: 549: }
[e $U 31  ]
"550
[e :U 27 ]
[; ;lcd.c: 550: else if(v_number_u32==0)
[e $ ! == _v_number_u32 -> -> -> 0 `i `l `ul 32  ]
[; ;lcd.c: 551: {
"551
{
[; ;lcd.c: 555: LCD_DisplayChar('0');
"555
[e ( _LCD_DisplayChar (1 -> -> 48 `ui `uc ]
"556
}
[; ;lcd.c: 556: }
[e $U 33  ]
"557
[e :U 32 ]
[; ;lcd.c: 557: else
[; ;lcd.c: 558: {
"558
{
[; ;lcd.c: 559: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
"559
{
[e = _i -> -> 0 `i `uc ]
[e $U 37  ]
"560
[e :U 34 ]
[; ;lcd.c: 560: {
{
[; ;lcd.c: 563: if(v_number_u32!=0)
"563
[e $ ! != _v_number_u32 -> -> -> 0 `i `l `ul 38  ]
[; ;lcd.c: 564: {
"564
{
[; ;lcd.c: 571: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u32/v_numericSystem_u8)));
"571
[e = *U + &U _a * -> _i `ux -> -> # *U &U _a `ui `ux -> - _v_number_u32 * -> _v_numericSystem_u8 `ul / _v_number_u32 -> _v_numericSystem_u8 `ul `uc ]
[; ;lcd.c: 572: v_number_u32=v_number_u32/v_numericSystem_u8;
"572
[e = _v_number_u32 / _v_number_u32 -> _v_numericSystem_u8 `ul ]
"573
}
[; ;lcd.c: 573: }
[e $U 39  ]
"574
[e :U 38 ]
[; ;lcd.c: 574: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
[; ;lcd.c: 575: (v_numOfDigitsToDisplay_u8 > 10u))
"575
[e $ ! || == -> _v_numOfDigitsToDisplay_u8 `ui -> 255 `ui > -> _v_numOfDigitsToDisplay_u8 `ui -> 10 `ui 40  ]
[; ;lcd.c: 576: {
"576
{
[; ;lcd.c: 579: break;
"579
[e $U 35  ]
"580
}
[; ;lcd.c: 580: }
[e $U 41  ]
"581
[e :U 40 ]
[; ;lcd.c: 581: else
[; ;lcd.c: 582: {
"582
{
[; ;lcd.c: 586: a[i]=0;
"586
[e = *U + &U _a * -> _i `ux -> -> # *U &U _a `ui `ux -> -> 0 `i `uc ]
"587
}
[e :U 41 ]
[e :U 39 ]
"588
}
"559
[e ++ _i -> -> 1 `i `uc ]
[e :U 37 ]
[e $ < -> _i `i -> _v_numOfDigitsToDisplay_u8 `i 34  ]
[e :U 35 ]
"588
}
[; ;lcd.c: 587: }
[; ;lcd.c: 588: }
[; ;lcd.c: 590: while(i!=0)
"590
[e $U 42  ]
[e :U 43 ]
[; ;lcd.c: 591: {
"591
{
[; ;lcd.c: 593: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
"593
[e ( _LCD_DisplayChar (1 -> ? > -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 9 `i : + -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 55 `i + -> *U + &U _a * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _a `ui `ux `i -> 48 `i `uc ]
[; ;lcd.c: 594: i--;
"594
[e -- _i -> -> 1 `i `uc ]
"595
}
[e :U 42 ]
"590
[e $ != -> _i `i -> 0 `i 43  ]
[e :U 44 ]
"596
}
[e :U 33 ]
[e :U 31 ]
[; ;lcd.c: 595: }
[; ;lcd.c: 596: }
[; ;lcd.c: 597: }
"597
[e :UE 26 ]
}
"682
[v _LCD_Printf `(v ~T0 @X0 1 ev`*Cuc ]
"683
{
[; ;lcd.c: 682: void LCD_Printf(const char *argList, ...)
[; ;lcd.c: 683: {
[e :U _LCD_Printf ]
"682
[v _argList `*Cuc ~T0 @X0 1 r0 ]
"683
[f ]
"684
[v _ptr `*Cuc ~T0 @X0 1 a ]
"685
[v _argp `*v ~T0 @X0 -> -> 1 `i `ux a ]
"686
[v _v_num_s16 `i ~T0 @X0 1 a ]
"687
[v _v_num_s32 `l ~T0 @X0 1 a ]
"688
[v _v_num_u16 `ui ~T0 @X0 1 a ]
"689
[v _v_num_u32 `ul ~T0 @X0 1 a ]
"690
[v _str `*uc ~T0 @X0 1 a ]
"691
[v _ch `uc ~T0 @X0 1 a ]
"692
[v _v_numOfDigitsToDisp_u8 `uc ~T0 @X0 1 a ]
[; ;lcd.c: 684: const char *ptr;
[; ;lcd.c: 685: va_list argp;
[; ;lcd.c: 686: sint16_t v_num_s16;
[; ;lcd.c: 687: sint32_t v_num_s32;
[; ;lcd.c: 688: uint16_t v_num_u16;
[; ;lcd.c: 689: uint32_t v_num_u32;
[; ;lcd.c: 690: char *str;
[; ;lcd.c: 691: char ch;
[; ;lcd.c: 692: uint8_t v_numOfDigitsToDisp_u8;
[; ;lcd.c: 697: *argp = __va_start();
"697
[e = *U &U _argp ( ___va_start ..  ]
[; ;lcd.c: 700: for(ptr = argList; *ptr != '\0'; ptr++)
"700
{
[e = _ptr _argList ]
[e $U 49  ]
"701
[e :U 46 ]
[; ;lcd.c: 701: {
{
[; ;lcd.c: 703: ch= *ptr;
"703
[e = _ch *U _ptr ]
[; ;lcd.c: 704: if(ch == '%')
"704
[e $ ! == -> _ch `ui -> 37 `ui 50  ]
[; ;lcd.c: 705: {
"705
{
[; ;lcd.c: 706: ptr++;
"706
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[; ;lcd.c: 707: ch = *ptr;
"707
[e = _ch *U _ptr ]
[; ;lcd.c: 708: if((ch>=0x30) && (ch<=0x39))
"708
[e $ ! && >= -> _ch `i -> 48 `i <= -> _ch `i -> 57 `i 51  ]
[; ;lcd.c: 709: {
"709
{
[; ;lcd.c: 710: v_numOfDigitsToDisp_u8 = 0;
"710
[e = _v_numOfDigitsToDisp_u8 -> -> 0 `i `uc ]
[; ;lcd.c: 711: while((ch>=0x30) && (ch<=0x39))
"711
[e $U 52  ]
[e :U 53 ]
[; ;lcd.c: 712: {
"712
{
[; ;lcd.c: 713: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
"713
[e = _v_numOfDigitsToDisp_u8 -> + * -> _v_numOfDigitsToDisp_u8 `i -> 10 `i - -> _ch `i -> 48 `i `uc ]
[; ;lcd.c: 714: ptr++;
"714
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[; ;lcd.c: 715: ch = *ptr;
"715
[e = _ch *U _ptr ]
"716
}
[e :U 52 ]
"711
[e $ && >= -> _ch `i -> 48 `i <= -> _ch `i -> 57 `i 53  ]
[e :U 54 ]
"717
}
[; ;lcd.c: 716: }
[; ;lcd.c: 717: }
[e $U 55  ]
"718
[e :U 51 ]
[; ;lcd.c: 718: else
[; ;lcd.c: 719: {
"719
{
[; ;lcd.c: 720: v_numOfDigitsToDisp_u8 = 0xffu;
"720
[e = _v_numOfDigitsToDisp_u8 -> -> 255 `ui `uc ]
"721
}
[e :U 55 ]
[; ;lcd.c: 721: }
[; ;lcd.c: 724: switch(ch)
"724
[e $U 57  ]
[; ;lcd.c: 725: {
"725
{
[; ;lcd.c: 726: case 'C':
"726
[e :U 58 ]
"727
[e :U 59 ]
[; ;lcd.c: 727: case 'c':
[; ;lcd.c: 728: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
"728
[e = _ch -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `uc ]
[; ;lcd.c: 729: LCD_DisplayChar(ch);
"729
[e ( _LCD_DisplayChar (1 _ch ]
[; ;lcd.c: 730: break;
"730
[e $U 56  ]
[; ;lcd.c: 732: case 'd':
"732
[e :U 60 ]
[; ;lcd.c: 733: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"733
[e = _v_num_s16 *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i ]
[; ;lcd.c: 734: if(v_num_s16<0)
"734
[e $ ! < _v_num_s16 -> 0 `i 61  ]
[; ;lcd.c: 735: {
"735
{
[; ;lcd.c: 736: v_num_s16 = -v_num_s16;
"736
[e = _v_num_s16 -U _v_num_s16 ]
[; ;lcd.c: 737: LCD_DisplayChar('-');
"737
[e ( _LCD_DisplayChar (1 -> -> 45 `ui `uc ]
"738
}
[e :U 61 ]
[; ;lcd.c: 738: }
[; ;lcd.c: 739: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
"739
[e ( _LCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> -> _v_num_s16 `l `ul _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 740: break;
"740
[e $U 56  ]
[; ;lcd.c: 742: case 'D':
"742
[e :U 62 ]
[; ;lcd.c: 743: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
"743
[e = _v_num_s32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**l `*v -> -> 0 `i `l `*l ]
[; ;lcd.c: 744: if(v_num_s32<0)
"744
[e $ ! < _v_num_s32 -> -> 0 `i `l 63  ]
[; ;lcd.c: 745: {
"745
{
[; ;lcd.c: 746: v_num_s32 = -v_num_s32;
"746
[e = _v_num_s32 -U _v_num_s32 ]
[; ;lcd.c: 747: LCD_DisplayChar('-');
"747
[e ( _LCD_DisplayChar (1 -> -> 45 `ui `uc ]
"748
}
[e :U 63 ]
[; ;lcd.c: 748: }
[; ;lcd.c: 749: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
"749
[e ( _LCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> _v_num_s32 `ul _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 750: break;
"750
[e $U 56  ]
[; ;lcd.c: 752: case 'u':
"752
[e :U 64 ]
[; ;lcd.c: 753: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"753
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;lcd.c: 754: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
"754
[e ( _LCD_DisplayNumber (3 , , -> -> 10 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 755: break;
"755
[e $U 56  ]
[; ;lcd.c: 757: case 'U':
"757
[e :U 65 ]
[; ;lcd.c: 758: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"758
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;lcd.c: 759: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
"759
[e ( _LCD_DisplayNumber (3 , , -> -> 10 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 760: break;
"760
[e $U 56  ]
[; ;lcd.c: 762: case 'x':
"762
[e :U 66 ]
[; ;lcd.c: 763: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"763
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;lcd.c: 764: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
"764
[e ( _LCD_DisplayNumber (3 , , -> -> 16 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 765: break;
"765
[e $U 56  ]
[; ;lcd.c: 767: case 'X':
"767
[e :U 67 ]
[; ;lcd.c: 768: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"768
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;lcd.c: 769: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
"769
[e ( _LCD_DisplayNumber (3 , , -> -> 16 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 770: break;
"770
[e $U 56  ]
[; ;lcd.c: 773: case 'b':
"773
[e :U 68 ]
[; ;lcd.c: 774: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
"774
[e = _v_num_u16 -> *U -> ( ___va_arg , (. -> *U -> &U _argp `**i `*v -> 0 `i `*i `ui ]
[; ;lcd.c: 775: if(v_numOfDigitsToDisp_u8 == 0xffu)
"775
[e $ ! == -> _v_numOfDigitsToDisp_u8 `ui -> 255 `ui 69  ]
[; ;lcd.c: 776: v_numOfDigitsToDisp_u8 = 16;
"776
[e = _v_numOfDigitsToDisp_u8 -> -> 16 `i `uc ]
[e :U 69 ]
[; ;lcd.c: 777: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
"777
[e ( _LCD_DisplayNumber (3 , , -> -> 2 `ui `uc -> _v_num_u16 `ul _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 778: break;
"778
[e $U 56  ]
[; ;lcd.c: 780: case 'B':
"780
[e :U 70 ]
[; ;lcd.c: 781: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
"781
[e = _v_num_u32 *U -> ( ___va_arg , (. -> *U -> &U _argp `**ul `*v -> -> 0 `i `ul `*ul ]
[; ;lcd.c: 782: if(v_numOfDigitsToDisp_u8 == 0xffu)
"782
[e $ ! == -> _v_numOfDigitsToDisp_u8 `ui -> 255 `ui 71  ]
[; ;lcd.c: 783: v_numOfDigitsToDisp_u8 = 16;
"783
[e = _v_numOfDigitsToDisp_u8 -> -> 16 `i `uc ]
[e :U 71 ]
[; ;lcd.c: 784: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
"784
[e ( _LCD_DisplayNumber (3 , , -> -> 2 `ui `uc _v_num_u32 _v_numOfDigitsToDisp_u8 ]
[; ;lcd.c: 785: break;
"785
[e $U 56  ]
[; ;lcd.c: 788: case 'F':
"788
[e :U 72 ]
"789
[e :U 73 ]
[; ;lcd.c: 789: case 'f':
[; ;lcd.c: 794: break;
"794
[e $U 56  ]
[; ;lcd.c: 797: case 'S':
"797
[e :U 74 ]
"798
[e :U 75 ]
[; ;lcd.c: 798: case 's':
[; ;lcd.c: 799: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
"799
[e = _str *U -> ( ___va_arg , (. -> *U -> &U _argp `***uc `*v -> -> 0 `i `*uc `**uc ]
[; ;lcd.c: 800: LCD_DisplayString(str);
"800
[e ( _LCD_DisplayString (1 -> _str `*Cuc ]
[; ;lcd.c: 801: break;
"801
[e $U 56  ]
[; ;lcd.c: 803: case '%':
"803
[e :U 76 ]
[; ;lcd.c: 804: LCD_DisplayChar('%');
"804
[e ( _LCD_DisplayChar (1 -> -> 37 `ui `uc ]
[; ;lcd.c: 805: break;
"805
[e $U 56  ]
"806
}
[; ;lcd.c: 806: }
[e $U 56  ]
"724
[e :U 57 ]
[e [\ _ch , $ -> -> 67 `ui `uc 58
 , $ -> -> 99 `ui `uc 59
 , $ -> -> 100 `ui `uc 60
 , $ -> -> 68 `ui `uc 62
 , $ -> -> 117 `ui `uc 64
 , $ -> -> 85 `ui `uc 65
 , $ -> -> 120 `ui `uc 66
 , $ -> -> 88 `ui `uc 67
 , $ -> -> 98 `ui `uc 68
 , $ -> -> 66 `ui `uc 70
 , $ -> -> 70 `ui `uc 72
 , $ -> -> 102 `ui `uc 73
 , $ -> -> 83 `ui `uc 74
 , $ -> -> 115 `ui `uc 75
 , $ -> -> 37 `ui `uc 76
 56 ]
"806
[e :U 56 ]
"807
}
[; ;lcd.c: 807: }
[e $U 77  ]
"808
[e :U 50 ]
[; ;lcd.c: 808: else
[; ;lcd.c: 809: {
"809
{
[; ;lcd.c: 811: LCD_DisplayChar(ch);
"811
[e ( _LCD_DisplayChar (1 _ch ]
"812
}
[e :U 77 ]
"813
}
"700
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 49 ]
[e $ != -> *U _ptr `ui -> 0 `ui 46  ]
[e :U 47 ]
"813
}
[; ;lcd.c: 812: }
[; ;lcd.c: 813: }
[; ;lcd.c: 815: ;
[; ;lcd.c: 816: }
"816
[e :UE 45 ]
}
"832
[v _lcd_DataWrite `(v ~T0 @X0 1 sf1`uc ]
"833
{
[; ;lcd.c: 832: static void lcd_DataWrite( uint8_t dataByte)
[; ;lcd.c: 833: {
[e :U _lcd_DataWrite ]
"832
[v _dataByte `uc ~T0 @X0 1 r1 ]
"833
[f ]
[; ;lcd.c: 834: lcd_BusyCheck();
"834
[e ( _lcd_BusyCheck ..  ]
[; ;lcd.c: 835: if(LCDConfig.v_LcdMode_U8 == 8u)
"835
[e $ ! == -> . _LCDConfig 2 `ui -> 8 `ui 79  ]
[; ;lcd.c: 836: {
"836
{
[; ;lcd.c: 837: lcd_SendLowerNibble(dataByte);
"837
[e ( _lcd_SendLowerNibble (1 _dataByte ]
"838
}
[; ;lcd.c: 838: }
[e $U 80  ]
"839
[e :U 79 ]
[; ;lcd.c: 839: else
[; ;lcd.c: 840: {
"840
{
[; ;lcd.c: 841: lcd_SendHigherNibble(dataByte);
"841
[e ( _lcd_SendHigherNibble (1 _dataByte ]
[; ;lcd.c: 842: lcd_SendDataSignals();
"842
[e ( _lcd_SendDataSignals ..  ]
[; ;lcd.c: 843: dataByte = dataByte << 4;
"843
[e = _dataByte -> << -> _dataByte `i -> 4 `i `uc ]
"844
}
[e :U 80 ]
[; ;lcd.c: 844: }
[; ;lcd.c: 846: lcd_SendHigherNibble(dataByte);
"846
[e ( _lcd_SendHigherNibble (1 _dataByte ]
[; ;lcd.c: 847: lcd_SendDataSignals();
"847
[e ( _lcd_SendDataSignals ..  ]
[; ;lcd.c: 848: }
"848
[e :UE 78 ]
}
"866
[v _lcd_BusyCheck `(v ~T0 @X0 1 sf ]
"867
{
[; ;lcd.c: 866: static void lcd_BusyCheck(void)
[; ;lcd.c: 867: {
[e :U _lcd_BusyCheck ]
[f ]
"868
[v _busyflag `uc ~T0 @X0 1 a ]
[; ;lcd.c: 868: uint8_t busyflag;
[; ;lcd.c: 870: if(LCDConfig.RW != P_NC)
"870
[e $ ! != -> . _LCDConfig 4 `i -> . `E33 40 `i 82  ]
[; ;lcd.c: 871: {
"871
{
[; ;lcd.c: 872: GPIO_PinDirection(LCDConfig.D7,0x01u);
"872
[e ( _GPIO_PinDirection (2 , . _LCDConfig 13 -> -> 1 `ui `uc ]
[; ;lcd.c: 873: GPIO_PinWrite(LCDConfig.RS,0);
"873
[e ( _GPIO_PinWrite (2 , . _LCDConfig 3 -> -> 0 `i `uc ]
[; ;lcd.c: 874: GPIO_PinWrite(LCDConfig.RW,1);
"874
[e ( _GPIO_PinWrite (2 , . _LCDConfig 4 -> -> 1 `i `uc ]
[; ;lcd.c: 875: do
"875
[e :U 85 ]
[; ;lcd.c: 876: {
"876
{
[; ;lcd.c: 878: GPIO_PinWrite(LCDConfig.EN,0);
"878
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 0 `i `uc ]
[; ;lcd.c: 879: DELAY_us(10);
"879
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;lcd.c: 880: GPIO_PinWrite(LCDConfig.EN,1);
"880
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 1 `i `uc ]
[; ;lcd.c: 881: DELAY_us(10);
"881
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;lcd.c: 882: busyflag = GPIO_PinRead(LCDConfig.D7);
"882
[e = _busyflag ( _GPIO_PinRead (1 . _LCDConfig 13 ]
[; ;lcd.c: 885: if(LCDConfig.v_LcdMode_U8 == 4)
"885
[e $ ! == -> . _LCDConfig 2 `i -> 4 `i 86  ]
[; ;lcd.c: 886: {
"886
{
[; ;lcd.c: 888: GPIO_PinWrite(LCDConfig.EN,0);
"888
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 0 `i `uc ]
[; ;lcd.c: 889: DELAY_us(10);
"889
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;lcd.c: 890: GPIO_PinWrite(LCDConfig.EN,1);
"890
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 1 `i `uc ]
[; ;lcd.c: 891: DELAY_us(10);
"891
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
"892
}
[e :U 86 ]
"893
}
[; ;lcd.c: 892: }
[; ;lcd.c: 893: }while(busyflag!=0);
[e $ != -> _busyflag `i -> 0 `i 85  ]
[e :U 84 ]
[; ;lcd.c: 895: GPIO_PinDirection(LCDConfig.D7,0x00u);
"895
[e ( _GPIO_PinDirection (2 , . _LCDConfig 13 -> -> 0 `ui `uc ]
"896
}
[; ;lcd.c: 896: }
[e $U 87  ]
"897
[e :U 82 ]
[; ;lcd.c: 897: else
[; ;lcd.c: 898: {
"898
{
[; ;lcd.c: 901: DELAY_ms(1);
"901
[e ( _DELAY_ms (1 -> -> 1 `i `ui ]
"902
}
[e :U 87 ]
[; ;lcd.c: 902: }
[; ;lcd.c: 903: }
"903
[e :UE 81 ]
}
"919
[v _lcd_Reset `(v ~T0 @X0 1 sf ]
"920
{
[; ;lcd.c: 919: static void lcd_Reset(void)
[; ;lcd.c: 920: {
[e :U _lcd_Reset ]
[f ]
[; ;lcd.c: 922: lcd_SendHigherNibble(0x30);
"922
[e ( _lcd_SendHigherNibble (1 -> -> 48 `i `uc ]
[; ;lcd.c: 923: lcd_SendCmdSignals();
"923
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 924: DELAY_ms(100);
"924
[e ( _DELAY_ms (1 -> -> 100 `i `ui ]
[; ;lcd.c: 925: lcd_SendHigherNibble(0x30);
"925
[e ( _lcd_SendHigherNibble (1 -> -> 48 `i `uc ]
[; ;lcd.c: 926: lcd_SendCmdSignals();
"926
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 927: DELAY_us(200);
"927
[e ( _DELAY_us (1 -> -> 200 `i `ui ]
[; ;lcd.c: 928: lcd_SendHigherNibble(0x30);
"928
[e ( _lcd_SendHigherNibble (1 -> -> 48 `i `uc ]
[; ;lcd.c: 929: lcd_SendCmdSignals();
"929
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 930: DELAY_us(200);
"930
[e ( _DELAY_us (1 -> -> 200 `i `ui ]
[; ;lcd.c: 931: lcd_SendHigherNibble(0x20);
"931
[e ( _lcd_SendHigherNibble (1 -> -> 32 `i `uc ]
[; ;lcd.c: 932: lcd_SendCmdSignals();
"932
[e ( _lcd_SendCmdSignals ..  ]
[; ;lcd.c: 933: DELAY_us(200);
"933
[e ( _DELAY_us (1 -> -> 200 `i `ui ]
[; ;lcd.c: 934: }
"934
[e :UE 88 ]
}
"949
[v _lcd_SendHigherNibble `(v ~T0 @X0 1 sf1`uc ]
"950
{
[; ;lcd.c: 949: static void lcd_SendHigherNibble(uint8_t dataByte)
[; ;lcd.c: 950: {
[e :U _lcd_SendHigherNibble ]
"949
[v _dataByte `uc ~T0 @X0 1 r1 ]
"950
[f ]
[; ;lcd.c: 951: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&((1<<(4))))!=0u));
"951
[e ( _GPIO_PinWrite (2 , . _LCDConfig 10 -> -> != -> & -> _dataByte `i << -> 1 `i -> 4 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 952: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&((1<<(5))))!=0u));
"952
[e ( _GPIO_PinWrite (2 , . _LCDConfig 11 -> -> != -> & -> _dataByte `i << -> 1 `i -> 5 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 953: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&((1<<(6))))!=0u));
"953
[e ( _GPIO_PinWrite (2 , . _LCDConfig 12 -> -> != -> & -> _dataByte `i << -> 1 `i -> 6 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 954: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&((1<<(7))))!=0u));
"954
[e ( _GPIO_PinWrite (2 , . _LCDConfig 13 -> -> != -> & -> _dataByte `i << -> 1 `i -> 7 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 955: }
"955
[e :UE 89 ]
}
"968
[v _lcd_SendLowerNibble `(v ~T0 @X0 1 sf1`uc ]
"969
{
[; ;lcd.c: 968: static void lcd_SendLowerNibble(uint8_t dataByte)
[; ;lcd.c: 969: {
[e :U _lcd_SendLowerNibble ]
"968
[v _dataByte `uc ~T0 @X0 1 r1 ]
"969
[f ]
[; ;lcd.c: 970: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&((1<<(0))))!=0u));
"970
[e ( _GPIO_PinWrite (2 , . _LCDConfig 6 -> -> != -> & -> _dataByte `i << -> 1 `i -> 0 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 971: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&((1<<(1))))!=0u));
"971
[e ( _GPIO_PinWrite (2 , . _LCDConfig 7 -> -> != -> & -> _dataByte `i << -> 1 `i -> 1 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 972: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&((1<<(2))))!=0u));
"972
[e ( _GPIO_PinWrite (2 , . _LCDConfig 8 -> -> != -> & -> _dataByte `i << -> 1 `i -> 2 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 973: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&((1<<(3))))!=0u));
"973
[e ( _GPIO_PinWrite (2 , . _LCDConfig 9 -> -> != -> & -> _dataByte `i << -> 1 `i -> 3 `i `ui -> 0 `ui `i `uc ]
[; ;lcd.c: 974: }
"974
[e :UE 90 ]
}
"987
[v _lcd_SendCmdSignals `(v ~T0 @X0 1 sf ]
"988
{
[; ;lcd.c: 987: static void lcd_SendCmdSignals(void)
[; ;lcd.c: 988: {
[e :U _lcd_SendCmdSignals ]
[f ]
[; ;lcd.c: 989: GPIO_PinWrite(LCDConfig.RS,0);
"989
[e ( _GPIO_PinWrite (2 , . _LCDConfig 3 -> -> 0 `i `uc ]
[; ;lcd.c: 990: GPIO_PinWrite(LCDConfig.RW,0);
"990
[e ( _GPIO_PinWrite (2 , . _LCDConfig 4 -> -> 0 `i `uc ]
[; ;lcd.c: 991: GPIO_PinWrite(LCDConfig.EN,1);
"991
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 1 `i `uc ]
[; ;lcd.c: 992: DELAY_us(10);
"992
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;lcd.c: 993: GPIO_PinWrite(LCDConfig.EN,0);
"993
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 0 `i `uc ]
[; ;lcd.c: 995: }
"995
[e :UE 91 ]
}
"1008
[v _lcd_SendDataSignals `(v ~T0 @X0 1 sf ]
"1009
{
[; ;lcd.c: 1008: static void lcd_SendDataSignals(void)
[; ;lcd.c: 1009: {
[e :U _lcd_SendDataSignals ]
[f ]
[; ;lcd.c: 1010: GPIO_PinWrite(LCDConfig.RS,1);
"1010
[e ( _GPIO_PinWrite (2 , . _LCDConfig 3 -> -> 1 `i `uc ]
[; ;lcd.c: 1011: GPIO_PinWrite(LCDConfig.RW,0);
"1011
[e ( _GPIO_PinWrite (2 , . _LCDConfig 4 -> -> 0 `i `uc ]
[; ;lcd.c: 1012: GPIO_PinWrite(LCDConfig.EN,1);
"1012
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 1 `i `uc ]
[; ;lcd.c: 1013: DELAY_us(10);
"1013
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;lcd.c: 1014: GPIO_PinWrite(LCDConfig.EN,0);
"1014
[e ( _GPIO_PinWrite (2 , . _LCDConfig 5 -> -> 0 `i `uc ]
[; ;lcd.c: 1015: }
"1015
[e :UE 92 ]
}
"1018
[p o ]
