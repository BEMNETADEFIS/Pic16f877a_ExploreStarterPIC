

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue May 03 10:32:00 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  0088                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  001F                     _ADCON0	set	31
   202  001E                     _ADRESH	set	30
   203  001A                     _RCREG	set	26
   204  0018                     _RCSTA	set	24
   205  0019                     _TXREG	set	25
   206  00F8                     _ADON	set	248
   207  00FA                     _GO	set	250
   208  00FA                     _GO_DONE	set	250
   209  0065                     _RCIF	set	101
   210  0064                     _TXIF	set	100
   211  009F                     _ADCON1	set	159
   212  009E                     _ADRESL	set	158
   213  0099                     _SPBRG	set	153
   214  0087                     _TRISC	set	135
   215  0098                     _TXSTA	set	152
   216                           
   217                           	psect	strings
   218  0003                     __pstrings:	
   219  0003                     stringtab:	
   220  0003                     __stringtab:	
   221  0003                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0003                     stringdir:	
   225  0003  3000               	movlw	high stringdir
   226  0004  008A               	movwf	10
   227  0005  0804               	movf	4,w
   228  0006  0A84               	incf	4,f
   229  0007  0782               	addwf	2,f
   230  0008                     __stringbase:	
   231  0008  3400               	retlw	0
   232  0009                     __end_of__stringtab:	
   233  0009                     STR_1:	
   234  0009  3441               	retlw	65	;'A'
   235  000A  3444               	retlw	68	;'D'
   236  000B  3443               	retlw	67	;'C'
   237  000C  3430               	retlw	48	;'0'
   238  000D  3420               	retlw	32	;' '
   239  000E  3456               	retlw	86	;'V'
   240  000F  3461               	retlw	97	;'a'
   241  0010  346C               	retlw	108	;'l'
   242  0011  3475               	retlw	117	;'u'
   243  0012  3465               	retlw	101	;'e'
   244  0013  343A               	retlw	58	;':'
   245  0014  3425               	retlw	37	;'%'
   246  0015  3434               	retlw	52	;'4'
   247  0016  3464               	retlw	100	;'d'
   248  0017  3420               	retlw	32	;' '
   249  0018  340A               	retlw	10
   250  0019  340D               	retlw	13
   251  001A  3400               	retlw	0
   252                           
   253                           ; #config settings
   254  0000                     
   255                           	psect	cinit
   256  07FC                     start_initialization:	
   257  07FC                     __initialization:	
   258  07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  07FC                     __end_of__initialization:	
   262  07FC  0183               	clrf	3
   263  07FD  120A  118A  2C13   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	cstackCOMMON
   266  0070                     __pcstackCOMMON:	
   267  0070                     ?_DELAY_us:	
   268  0070                     ?_ADC_Init:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ??_ADC_Init:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_UART_TxChar:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_UART_TxChar:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_UART_TxString:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?___lldiv:	
   287                           ; 2 bytes @ 0x0
   288                           
   289  0070                     UART_TxChar@v_uartData_u8:	
   290                           ; 4 bytes @ 0x0
   291                           
   292  0070                     DELAY_us@us_count:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ___lldiv@divisor:	
   296                           ; 2 bytes @ 0x0
   297                           
   298                           
   299                           ; 4 bytes @ 0x0
   300  0070                     	ds	1
   301  0071                     ??_UART_TxString:	
   302                           
   303                           ; 1 bytes @ 0x1
   304  0071                     	ds	1
   305  0072                     ??_DELAY_us:	
   306  0072                     ?_ADC_GetAdcValue:	
   307                           ; 1 bytes @ 0x2
   308                           
   309  0072                     UART_TxString@ptr_string:	
   310                           ; 2 bytes @ 0x2
   311                           
   312                           
   313                           ; 1 bytes @ 0x2
   314  0072                     	ds	2
   315  0074                     ??_ADC_GetAdcValue:	
   316  0074                     ___lldiv@dividend:	
   317                           ; 1 bytes @ 0x4
   318                           
   319                           
   320                           ; 4 bytes @ 0x4
   321  0074                     	ds	1
   322  0075                     ADC_GetAdcValue@var_adcChannel_u8:	
   323                           
   324                           ; 1 bytes @ 0x5
   325  0075                     	ds	3
   326  0078                     ??___lldiv:	
   327                           
   328                           ; 1 bytes @ 0x8
   329  0078                     	ds	1
   330  0079                     ___lldiv@quotient:	
   331                           
   332                           ; 4 bytes @ 0x9
   333  0079                     	ds	4
   334  007D                     ___lldiv@counter:	
   335                           
   336                           ; 1 bytes @ 0xD
   337  007D                     	ds	1
   338  007E                     ??_UART_Init:	
   339  007E                     ??_main:	
   340                           ; 1 bytes @ 0xE
   341                           
   342                           
   343                           	psect	cstackBANK0
   344  0020                     __pcstackBANK0:	
   345                           ; 1 bytes @ 0xE
   346                           
   347  0020                     ?_UART_SetBaudRate:	
   348  0020                     ?___bmul:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0020                     ___bmul@multiplicand:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0020                     UART_SetBaudRate@v_baudRate_u32:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 4 bytes @ 0x0
   359  0020                     	ds	1
   360  0021                     ??___bmul:	
   361                           
   362                           ; 1 bytes @ 0x1
   363  0021                     	ds	1
   364  0022                     ___bmul@product:	
   365                           
   366                           ; 1 bytes @ 0x2
   367  0022                     	ds	1
   368  0023                     ___bmul@multiplier:	
   369                           
   370                           ; 1 bytes @ 0x3
   371  0023                     	ds	1
   372  0024                     ??_UART_SetBaudRate:	
   373  0024                     ?_UART_TxNumber:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0024                     UART_TxNumber@v_number_u32:	
   377                           ; 1 bytes @ 0x4
   378                           
   379                           
   380                           ; 4 bytes @ 0x4
   381  0024                     	ds	4
   382  0028                     UART_TxNumber@v_numOfDigitsToTransmit_u8:	
   383                           
   384                           ; 1 bytes @ 0x8
   385  0028                     	ds	1
   386  0029                     ??_UART_TxNumber:	
   387  0029                     UART_SetBaudRate@RegValue:	
   388                           ; 1 bytes @ 0x9
   389                           
   390                           
   391                           ; 1 bytes @ 0x9
   392  0029                     	ds	1
   393  002A                     ?_UART_Init:	
   394  002A                     UART_Init@v_baudRate_u32:	
   395                           ; 1 bytes @ 0xA
   396                           
   397                           
   398                           ; 4 bytes @ 0xA
   399  002A                     	ds	11
   400  0035                     UART_TxNumber@a:	
   401                           
   402                           ; 10 bytes @ 0x15
   403  0035                     	ds	10
   404  003F                     _UART_TxNumber$82:	
   405                           
   406                           ; 2 bytes @ 0x1F
   407  003F                     	ds	2
   408  0041                     UART_TxNumber@v_numericSystem_u8:	
   409                           
   410                           ; 1 bytes @ 0x21
   411  0041                     	ds	1
   412  0042                     UART_TxNumber@i:	
   413                           
   414                           ; 1 bytes @ 0x22
   415  0042                     	ds	1
   416  0043                     ?_UART_Printf:	
   417                           
   418                           ; 1 bytes @ 0x23
   419  0043                     	ds	2
   420  0045                     ??_UART_Printf:	
   421                           
   422                           ; 1 bytes @ 0x25
   423  0045                     	ds	2
   424  0047                     UART_Printf@str:	
   425                           
   426                           ; 1 bytes @ 0x27
   427  0047                     	ds	1
   428  0048                     UART_Printf@argList:	
   429                           
   430                           ; 1 bytes @ 0x28
   431  0048                     	ds	1
   432  0049                     UART_Printf@v_num_s32:	
   433                           
   434                           ; 4 bytes @ 0x29
   435  0049                     	ds	4
   436  004D                     UART_Printf@v_num_s16:	
   437                           
   438                           ; 2 bytes @ 0x2D
   439  004D                     	ds	2
   440  004F                     UART_Printf@v_num_u32:	
   441                           
   442                           ; 4 bytes @ 0x2F
   443  004F                     	ds	4
   444  0053                     UART_Printf@v_num_u16:	
   445                           
   446                           ; 2 bytes @ 0x33
   447  0053                     	ds	2
   448  0055                     UART_Printf@ptr:	
   449                           
   450                           ; 1 bytes @ 0x35
   451  0055                     	ds	1
   452  0056                     UART_Printf@ch:	
   453                           
   454                           ; 1 bytes @ 0x36
   455  0056                     	ds	1
   456  0057                     UART_Printf@v_numOfDigitsToTransmit_u8:	
   457                           
   458                           ; 1 bytes @ 0x37
   459  0057                     	ds	1
   460  0058                     UART_Printf@argp:	
   461                           
   462                           ; 1 bytes @ 0x38
   463  0058                     	ds	1
   464  0059                     main@adcValue:	
   465                           
   466                           ; 2 bytes @ 0x39
   467  0059                     	ds	2
   468                           
   469                           	psect	maintext
   470  0413                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 41 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  adcValue        2   57[BANK0 ] int 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2  175[None  ] int 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B00/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       2       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       2       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels required when called:    3
   496 ;; This function calls:
   497 ;;		_ADC_GetAdcValue
   498 ;;		_ADC_Init
   499 ;;		_UART_Init
   500 ;;		_UART_Printf
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _main
   508  0413                     _main:	
   509                           
   510                           ;main.c: 43: int adcValue;
   511                           ;main.c: 45: ADC_Init();
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   515  0413  120A  118A  2395  120A  118A  	fcall	_ADC_Init
   516                           
   517                           ;main.c: 46: UART_Init(9600);
   518  0418  3000               	movlw	0
   519  0419  1283               	bcf	3,5	;RP0=0, select bank0
   520  041A  1303               	bcf	3,6	;RP1=0, select bank0
   521  041B  00AD               	movwf	UART_Init@v_baudRate_u32+3
   522  041C  3000               	movlw	0
   523  041D  00AC               	movwf	UART_Init@v_baudRate_u32+2
   524  041E  3025               	movlw	37
   525  041F  00AB               	movwf	UART_Init@v_baudRate_u32+1
   526  0420  3080               	movlw	128
   527  0421  00AA               	movwf	UART_Init@v_baudRate_u32
   528  0422  120A  118A  23D9  120A  118A  	fcall	_UART_Init
   529  0427                     l176:	
   530                           ;main.c: 48: while(1)
   531                           
   532                           
   533                           ;main.c: 49: {
   534                           ;main.c: 50: adcValue = ADC_GetAdcValue(0);
   535  0427  3000               	movlw	0
   536  0428  120A  118A  23EF  120A  118A  	fcall	_ADC_GetAdcValue
   537  042D  0873               	movf	?_ADC_GetAdcValue+1,w
   538  042E  1283               	bcf	3,5	;RP0=0, select bank0
   539  042F  1303               	bcf	3,6	;RP1=0, select bank0
   540  0430  00DA               	movwf	main@adcValue+1
   541  0431  0872               	movf	?_ADC_GetAdcValue,w
   542  0432  00D9               	movwf	main@adcValue
   543                           
   544                           ;main.c: 51: UART_Printf("ADC0 Value:%4d \n\r",adcValue);
   545  0433  085A               	movf	main@adcValue+1,w
   546  0434  00C4               	movwf	?_UART_Printf+1
   547  0435  0859               	movf	main@adcValue,w
   548  0436  00C3               	movwf	?_UART_Printf
   549  0437  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   550  0438  120A  118A  25E7  120A  118A  	fcall	_UART_Printf
   551  043D  2C27               	goto	l176
   552  043E                     __end_of_main:	
   553                           ;main.c: 52: }
   554                           ;main.c: 54: return (0);
   555                           ;	Return value of _main is never used
   556                           
   557                           
   558                           	psect	text1
   559  05E7                     __ptext1:	
   560 ;; *************** function _UART_Printf *****************
   561 ;; Defined at:
   562 ;;		line 413 in file "../00-libfiles/uart.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  argList         1    wreg     PTR const unsigned char 
   565 ;;		 -> STR_1(18), 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  argList         1   40[BANK0 ] PTR const unsigned char 
   568 ;;		 -> STR_1(18), 
   569 ;;  v_num_u32       4   47[BANK0 ] unsigned long 
   570 ;;  v_num_s32       4   41[BANK0 ] long 
   571 ;;  v_num_u16       2   51[BANK0 ] unsigned int 
   572 ;;  v_num_s16       2   45[BANK0 ] int 
   573 ;;  argp            1   56[BANK0 ] PTR void [1]
   574 ;;		 -> ?_UART_Printf(1), 
   575 ;;  v_numOfDigit    1   55[BANK0 ] unsigned char 
   576 ;;  ch              1   54[BANK0 ] unsigned char 
   577 ;;  ptr             1   53[BANK0 ] PTR const unsigned char 
   578 ;;		 -> STR_1(18), 
   579 ;;  str             1   39[BANK0 ] PTR unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       2       0       0       0
   590 ;;      Locals:         0      18       0       0       0
   591 ;;      Temps:          0       2       0       0       0
   592 ;;      Totals:         0      22       0       0       0
   593 ;;Total ram usage:       22 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    2
   596 ;; This function calls:
   597 ;;		_UART_TxChar
   598 ;;		_UART_TxNumber
   599 ;;		_UART_TxString
   600 ;;		___bmul
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _UART_Printf
   608  05E7                     _UART_Printf:	
   609                           
   610                           ;incstack = 0
   611                           ; Regs used in _UART_Printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   612                           ;UART_Printf@argList stored from wreg
   613  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   614  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   615  05E9  00C8               	movwf	UART_Printf@argList
   616                           
   617                           ;uart.c: 415: const char *ptr;
   618                           ;uart.c: 416: va_list argp;
   619                           ;uart.c: 417: sint16_t v_num_s16;
   620                           ;uart.c: 418: sint32_t v_num_s32;
   621                           ;uart.c: 419: uint16_t v_num_u16;
   622                           ;uart.c: 420: uint32_t v_num_u32;
   623                           ;uart.c: 421: char *str;
   624                           ;uart.c: 422: char ch;
   625                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   626                           ;uart.c: 429: *argp = __va_start();
   627  05EA  3043               	movlw	(low (?_UART_Printf| 0))& (0+255)
   628  05EB  00C5               	movwf	??_UART_Printf
   629  05EC  0845               	movf	??_UART_Printf,w
   630  05ED  00D8               	movwf	UART_Printf@argp
   631                           
   632                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   633  05EE  0848               	movf	UART_Printf@argList,w
   634  05EF  00C5               	movwf	??_UART_Printf
   635  05F0  0845               	movf	??_UART_Printf,w
   636  05F1  00D5               	movwf	UART_Printf@ptr
   637  05F2                     l1199:	
   638  05F2  0855               	movf	UART_Printf@ptr,w
   639  05F3  0084               	movwf	4
   640  05F4  120A  118A  2003  120A  118A  	fcall	stringdir
   641  05F9  3A00               	xorlw	0
   642  05FA  1903               	btfsc	3,2
   643  05FB  0008               	return
   644                           
   645                           ;uart.c: 433: {
   646                           ;uart.c: 435: ch= *ptr;
   647  05FC  0855               	movf	UART_Printf@ptr,w
   648  05FD  0084               	movwf	4
   649  05FE  120A  118A  2003  120A  118A  	fcall	stringdir
   650  0603  00C5               	movwf	??_UART_Printf
   651  0604  0845               	movf	??_UART_Printf,w
   652  0605  00D6               	movwf	UART_Printf@ch
   653                           
   654                           ;uart.c: 436: if(ch == '%')
   655  0606  3025               	movlw	37
   656  0607  0656               	xorwf	UART_Printf@ch,w
   657  0608  1D03               	btfss	3,2
   658  0609  2FEF               	goto	l1195
   659                           
   660                           ;uart.c: 437: {
   661                           ;uart.c: 438: ptr++;
   662  060A  3001               	movlw	1
   663  060B  00C5               	movwf	??_UART_Printf
   664  060C  0845               	movf	??_UART_Printf,w
   665  060D  07D5               	addwf	UART_Printf@ptr,f
   666                           
   667                           ;uart.c: 439: ch = *ptr;
   668  060E  0855               	movf	UART_Printf@ptr,w
   669  060F  0084               	movwf	4
   670  0610  120A  118A  2003  120A  118A  	fcall	stringdir
   671  0615  00C5               	movwf	??_UART_Printf
   672  0616  0845               	movf	??_UART_Printf,w
   673  0617  00D6               	movwf	UART_Printf@ch
   674                           
   675                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   676  0618  3030               	movlw	48
   677  0619  0256               	subwf	UART_Printf@ch,w
   678  061A  1C03               	skipc
   679  061B  2E49               	goto	l1107
   680  061C  303A               	movlw	58
   681  061D  0256               	subwf	UART_Printf@ch,w
   682  061E  1803               	skipnc
   683  061F  2E49               	goto	l1107
   684                           
   685                           ;uart.c: 441: {
   686                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   687  0620  01D7               	clrf	UART_Printf@v_numOfDigitsToTransmit_u8
   688  0621                     l1103:	
   689                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   690                           
   691  0621  3030               	movlw	48
   692  0622  0256               	subwf	UART_Printf@ch,w
   693  0623  1C03               	skipc
   694  0624  2FBD               	goto	l1193
   695  0625  303A               	movlw	58
   696  0626  0256               	subwf	UART_Printf@ch,w
   697  0627  1803               	btfsc	3,0
   698  0628  2FBD               	goto	l1193
   699                           
   700                           ;uart.c: 444: {
   701                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   702  0629  300A               	movlw	10
   703  062A  00C5               	movwf	??_UART_Printf
   704  062B  0845               	movf	??_UART_Printf,w
   705  062C  00A0               	movwf	___bmul@multiplicand
   706  062D  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   707  062E  120A  118A  23B1  120A  118A  	fcall	___bmul
   708  0633  1283               	bcf	3,5	;RP0=0, select bank0
   709  0634  1303               	bcf	3,6	;RP1=0, select bank0
   710  0635  0756               	addwf	UART_Printf@ch,w
   711  0636  3ED0               	addlw	208
   712  0637  00C6               	movwf	??_UART_Printf+1
   713  0638  0846               	movf	??_UART_Printf+1,w
   714  0639  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   715                           
   716                           ;uart.c: 446: ptr++;
   717  063A  3001               	movlw	1
   718  063B  00C5               	movwf	??_UART_Printf
   719  063C  0845               	movf	??_UART_Printf,w
   720  063D  07D5               	addwf	UART_Printf@ptr,f
   721                           
   722                           ;uart.c: 447: ch = *ptr;
   723  063E  0855               	movf	UART_Printf@ptr,w
   724  063F  0084               	movwf	4
   725  0640  120A  118A  2003  120A  118A  	fcall	stringdir
   726  0645  00C5               	movwf	??_UART_Printf
   727  0646  0845               	movf	??_UART_Printf,w
   728  0647  00D6               	movwf	UART_Printf@ch
   729  0648  2E21               	goto	l1103
   730  0649                     l1107:	
   731                           ;uart.c: 448: }
   732                           ;uart.c: 449: }
   733                           
   734                           
   735                           ;uart.c: 450: else
   736                           ;uart.c: 451: {
   737                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   738  0649  30FF               	movlw	255
   739  064A  00C5               	movwf	??_UART_Printf
   740  064B  0845               	movf	??_UART_Printf,w
   741  064C  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
   742                           
   743                           ;uart.c: 453: }
   744                           ;uart.c: 456: switch(ch)
   745  064D  2FBD               	goto	l1193
   746  064E                     l1109:	
   747                           ;uart.c: 457: {
   748                           ;uart.c: 458: case 'C':
   749                           
   750                           
   751                           ;uart.c: 459: case 'c':
   752                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   753  064E  0858               	movf	UART_Printf@argp,w
   754  064F  0084               	movwf	4
   755  0650  1383               	bcf	3,7	;select IRP bank0
   756  0651  0800               	movf	0,w
   757  0652  00C5               	movwf	??_UART_Printf
   758  0653  0845               	movf	??_UART_Printf,w
   759  0654  00D6               	movwf	UART_Printf@ch
   760  0655  3002               	movlw	2
   761  0656  00C5               	movwf	??_UART_Printf
   762  0657  0845               	movf	??_UART_Printf,w
   763  0658  07D8               	addwf	UART_Printf@argp,f
   764  0659  2FEF               	goto	l1195
   765  065A                     l1115:	
   766                           ;uart.c: 464: case 'd':
   767                           
   768                           ;uart.c: 462: break;
   769                           
   770                           ;uart.c: 461: UART_TxChar(ch);
   771                           
   772                           
   773                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   774  065A  1283               	bcf	3,5	;RP0=0, select bank0
   775  065B  1303               	bcf	3,6	;RP1=0, select bank0
   776  065C  0858               	movf	UART_Printf@argp,w
   777  065D  0084               	movwf	4
   778  065E  1383               	bcf	3,7	;select IRP bank0
   779  065F  0800               	movf	0,w
   780  0660  00CD               	movwf	UART_Printf@v_num_s16
   781  0661  0A84               	incf	4,f
   782  0662  0800               	movf	0,w
   783  0663  00CE               	movwf	UART_Printf@v_num_s16+1
   784  0664  3002               	movlw	2
   785  0665  00C5               	movwf	??_UART_Printf
   786  0666  0845               	movf	??_UART_Printf,w
   787  0667  07D8               	addwf	UART_Printf@argp,f
   788                           
   789                           ;uart.c: 466: if(v_num_s16<0)
   790  0668  1FCE               	btfss	UART_Printf@v_num_s16+1,7
   791  0669  2E75               	goto	l1125
   792                           
   793                           ;uart.c: 467: {
   794                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   795  066A  09CD               	comf	UART_Printf@v_num_s16,f
   796  066B  09CE               	comf	UART_Printf@v_num_s16+1,f
   797  066C  0ACD               	incf	UART_Printf@v_num_s16,f
   798  066D  1903               	skipnz
   799  066E  0ACE               	incf	UART_Printf@v_num_s16+1,f
   800                           
   801                           ;uart.c: 469: UART_TxChar('-');
   802  066F  302D               	movlw	45
   803  0670  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
   804  0675                     l1125:	
   805                           
   806                           ;uart.c: 470: }
   807                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   808  0675  1283               	bcf	3,5	;RP0=0, select bank0
   809  0676  1303               	bcf	3,6	;RP1=0, select bank0
   810  0677  084D               	movf	UART_Printf@v_num_s16,w
   811  0678  00A4               	movwf	UART_TxNumber@v_number_u32
   812  0679  084E               	movf	UART_Printf@v_num_s16+1,w
   813  067A  00A5               	movwf	UART_TxNumber@v_number_u32+1
   814  067B  3000               	movlw	0
   815  067C  1BA5               	btfsc	UART_TxNumber@v_number_u32+1,7
   816  067D  30FF               	movlw	255
   817  067E  00A6               	movwf	UART_TxNumber@v_number_u32+2
   818  067F  00A7               	movwf	UART_TxNumber@v_number_u32+3
   819  0680  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   820  0681  00C5               	movwf	??_UART_Printf
   821  0682  0845               	movf	??_UART_Printf,w
   822  0683  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   823  0684  300A               	movlw	10
   824  0685  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
   825                           
   826                           ;uart.c: 472: break;
   827  068A  2FF5               	goto	l1197
   828  068B                     l1127:	
   829                           ;uart.c: 474: case 'D':
   830                           
   831                           
   832                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   833  068B  1283               	bcf	3,5	;RP0=0, select bank0
   834  068C  1303               	bcf	3,6	;RP1=0, select bank0
   835  068D  0858               	movf	UART_Printf@argp,w
   836  068E  0084               	movwf	4
   837  068F  1383               	bcf	3,7	;select IRP bank0
   838  0690  0800               	movf	0,w
   839  0691  00C9               	movwf	UART_Printf@v_num_s32
   840  0692  0A84               	incf	4,f
   841  0693  0800               	movf	0,w
   842  0694  00CA               	movwf	UART_Printf@v_num_s32+1
   843  0695  0A84               	incf	4,f
   844  0696  0800               	movf	0,w
   845  0697  00CB               	movwf	UART_Printf@v_num_s32+2
   846  0698  0A84               	incf	4,f
   847  0699  0800               	movf	0,w
   848  069A  00CC               	movwf	UART_Printf@v_num_s32+3
   849  069B  3004               	movlw	4
   850  069C  00C5               	movwf	??_UART_Printf
   851  069D  0845               	movf	??_UART_Printf,w
   852  069E  07D8               	addwf	UART_Printf@argp,f
   853                           
   854                           ;uart.c: 476: if(v_num_s32<0)
   855  069F  1FCC               	btfss	UART_Printf@v_num_s32+3,7
   856  06A0  2EB2               	goto	l1137
   857                           
   858                           ;uart.c: 477: {
   859                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   860  06A1  09C9               	comf	UART_Printf@v_num_s32,f
   861  06A2  09CA               	comf	UART_Printf@v_num_s32+1,f
   862  06A3  09CB               	comf	UART_Printf@v_num_s32+2,f
   863  06A4  09CC               	comf	UART_Printf@v_num_s32+3,f
   864  06A5  0AC9               	incf	UART_Printf@v_num_s32,f
   865  06A6  1903               	skipnz
   866  06A7  0ACA               	incf	UART_Printf@v_num_s32+1,f
   867  06A8  1903               	skipnz
   868  06A9  0ACB               	incf	UART_Printf@v_num_s32+2,f
   869  06AA  1903               	skipnz
   870  06AB  0ACC               	incf	UART_Printf@v_num_s32+3,f
   871                           
   872                           ;uart.c: 479: UART_TxChar('-');
   873  06AC  302D               	movlw	45
   874  06AD  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
   875  06B2                     l1137:	
   876                           
   877                           ;uart.c: 480: }
   878                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   879  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   880  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   881  06B4  084C               	movf	UART_Printf@v_num_s32+3,w
   882  06B5  00A7               	movwf	UART_TxNumber@v_number_u32+3
   883  06B6  084B               	movf	UART_Printf@v_num_s32+2,w
   884  06B7  00A6               	movwf	UART_TxNumber@v_number_u32+2
   885  06B8  084A               	movf	UART_Printf@v_num_s32+1,w
   886  06B9  00A5               	movwf	UART_TxNumber@v_number_u32+1
   887  06BA  0849               	movf	UART_Printf@v_num_s32,w
   888  06BB  00A4               	movwf	UART_TxNumber@v_number_u32
   889  06BC  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   890  06BD  00C5               	movwf	??_UART_Printf
   891  06BE  0845               	movf	??_UART_Printf,w
   892  06BF  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   893  06C0  300A               	movlw	10
   894  06C1  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
   895                           
   896                           ;uart.c: 482: break;
   897  06C6  2FF5               	goto	l1197
   898  06C7                     l1139:	
   899                           ;uart.c: 484: case 'u':
   900                           
   901                           
   902                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   903  06C7  1283               	bcf	3,5	;RP0=0, select bank0
   904  06C8  1303               	bcf	3,6	;RP1=0, select bank0
   905  06C9  0858               	movf	UART_Printf@argp,w
   906  06CA  0084               	movwf	4
   907  06CB  1383               	bcf	3,7	;select IRP bank0
   908  06CC  0800               	movf	0,w
   909  06CD  00D3               	movwf	UART_Printf@v_num_u16
   910  06CE  0A84               	incf	4,f
   911  06CF  0800               	movf	0,w
   912  06D0  00D4               	movwf	UART_Printf@v_num_u16+1
   913  06D1  3002               	movlw	2
   914  06D2  00C5               	movwf	??_UART_Printf
   915  06D3  0845               	movf	??_UART_Printf,w
   916  06D4  07D8               	addwf	UART_Printf@argp,f
   917                           
   918                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
   919  06D5  0853               	movf	UART_Printf@v_num_u16,w
   920  06D6  00A4               	movwf	UART_TxNumber@v_number_u32
   921  06D7  0854               	movf	UART_Printf@v_num_u16+1,w
   922  06D8  00A5               	movwf	UART_TxNumber@v_number_u32+1
   923  06D9  01A6               	clrf	UART_TxNumber@v_number_u32+2
   924  06DA  01A7               	clrf	UART_TxNumber@v_number_u32+3
   925  06DB  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   926  06DC  00C5               	movwf	??_UART_Printf
   927  06DD  0845               	movf	??_UART_Printf,w
   928  06DE  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   929  06DF  300A               	movlw	10
   930  06E0  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
   931                           
   932                           ;uart.c: 487: break;
   933  06E5  2FF5               	goto	l1197
   934  06E6                     l1145:	
   935                           ;uart.c: 489: case 'U':
   936                           
   937                           
   938                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   939  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   940  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   941  06E8  0858               	movf	UART_Printf@argp,w
   942  06E9  0084               	movwf	4
   943  06EA  1383               	bcf	3,7	;select IRP bank0
   944  06EB  0800               	movf	0,w
   945  06EC  00CF               	movwf	UART_Printf@v_num_u32
   946  06ED  0A84               	incf	4,f
   947  06EE  0800               	movf	0,w
   948  06EF  00D0               	movwf	UART_Printf@v_num_u32+1
   949  06F0  0A84               	incf	4,f
   950  06F1  0800               	movf	0,w
   951  06F2  00D1               	movwf	UART_Printf@v_num_u32+2
   952  06F3  0A84               	incf	4,f
   953  06F4  0800               	movf	0,w
   954  06F5  00D2               	movwf	UART_Printf@v_num_u32+3
   955  06F6  3004               	movlw	4
   956  06F7  00C5               	movwf	??_UART_Printf
   957  06F8  0845               	movf	??_UART_Printf,w
   958  06F9  07D8               	addwf	UART_Printf@argp,f
   959                           
   960                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
   961  06FA  0852               	movf	UART_Printf@v_num_u32+3,w
   962  06FB  00A7               	movwf	UART_TxNumber@v_number_u32+3
   963  06FC  0851               	movf	UART_Printf@v_num_u32+2,w
   964  06FD  00A6               	movwf	UART_TxNumber@v_number_u32+2
   965  06FE  0850               	movf	UART_Printf@v_num_u32+1,w
   966  06FF  00A5               	movwf	UART_TxNumber@v_number_u32+1
   967  0700  084F               	movf	UART_Printf@v_num_u32,w
   968  0701  00A4               	movwf	UART_TxNumber@v_number_u32
   969  0702  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
   970  0703  00C5               	movwf	??_UART_Printf
   971  0704  0845               	movf	??_UART_Printf,w
   972  0705  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
   973  0706  300A               	movlw	10
   974  0707  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
   975                           
   976                           ;uart.c: 492: break;
   977  070C  2FF5               	goto	l1197
   978  070D                     l1151:	
   979                           ;uart.c: 494: case 'x':
   980                           
   981                           
   982                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   983  070D  1283               	bcf	3,5	;RP0=0, select bank0
   984  070E  1303               	bcf	3,6	;RP1=0, select bank0
   985  070F  0858               	movf	UART_Printf@argp,w
   986  0710  0084               	movwf	4
   987  0711  1383               	bcf	3,7	;select IRP bank0
   988  0712  0800               	movf	0,w
   989  0713  00D3               	movwf	UART_Printf@v_num_u16
   990  0714  0A84               	incf	4,f
   991  0715  0800               	movf	0,w
   992  0716  00D4               	movwf	UART_Printf@v_num_u16+1
   993  0717  3002               	movlw	2
   994  0718  00C5               	movwf	??_UART_Printf
   995  0719  0845               	movf	??_UART_Printf,w
   996  071A  07D8               	addwf	UART_Printf@argp,f
   997                           
   998                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
   999  071B  0853               	movf	UART_Printf@v_num_u16,w
  1000  071C  00A4               	movwf	UART_TxNumber@v_number_u32
  1001  071D  0854               	movf	UART_Printf@v_num_u16+1,w
  1002  071E  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1003  071F  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1004  0720  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1005  0721  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1006  0722  00C5               	movwf	??_UART_Printf
  1007  0723  0845               	movf	??_UART_Printf,w
  1008  0724  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1009  0725  3010               	movlw	16
  1010  0726  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1011                           
  1012                           ;uart.c: 497: break;
  1013  072B  2FF5               	goto	l1197
  1014  072C                     l1157:	
  1015                           ;uart.c: 499: case 'X':
  1016                           
  1017                           
  1018                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1019  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1020  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1021  072E  0858               	movf	UART_Printf@argp,w
  1022  072F  0084               	movwf	4
  1023  0730  1383               	bcf	3,7	;select IRP bank0
  1024  0731  0800               	movf	0,w
  1025  0732  00CF               	movwf	UART_Printf@v_num_u32
  1026  0733  0A84               	incf	4,f
  1027  0734  0800               	movf	0,w
  1028  0735  00D0               	movwf	UART_Printf@v_num_u32+1
  1029  0736  0A84               	incf	4,f
  1030  0737  0800               	movf	0,w
  1031  0738  00D1               	movwf	UART_Printf@v_num_u32+2
  1032  0739  0A84               	incf	4,f
  1033  073A  0800               	movf	0,w
  1034  073B  00D2               	movwf	UART_Printf@v_num_u32+3
  1035  073C  3004               	movlw	4
  1036  073D  00C5               	movwf	??_UART_Printf
  1037  073E  0845               	movf	??_UART_Printf,w
  1038  073F  07D8               	addwf	UART_Printf@argp,f
  1039                           
  1040                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1041  0740  0852               	movf	UART_Printf@v_num_u32+3,w
  1042  0741  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1043  0742  0851               	movf	UART_Printf@v_num_u32+2,w
  1044  0743  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1045  0744  0850               	movf	UART_Printf@v_num_u32+1,w
  1046  0745  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1047  0746  084F               	movf	UART_Printf@v_num_u32,w
  1048  0747  00A4               	movwf	UART_TxNumber@v_number_u32
  1049  0748  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1050  0749  00C5               	movwf	??_UART_Printf
  1051  074A  0845               	movf	??_UART_Printf,w
  1052  074B  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1053  074C  3010               	movlw	16
  1054  074D  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1055                           
  1056                           ;uart.c: 502: break;
  1057  0752  2FF5               	goto	l1197
  1058  0753                     l1163:	
  1059                           ;uart.c: 505: case 'b':
  1060                           
  1061                           
  1062                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1063  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0755  0858               	movf	UART_Printf@argp,w
  1066  0756  0084               	movwf	4
  1067  0757  1383               	bcf	3,7	;select IRP bank0
  1068  0758  0800               	movf	0,w
  1069  0759  00D3               	movwf	UART_Printf@v_num_u16
  1070  075A  0A84               	incf	4,f
  1071  075B  0800               	movf	0,w
  1072  075C  00D4               	movwf	UART_Printf@v_num_u16+1
  1073  075D  3002               	movlw	2
  1074  075E  00C5               	movwf	??_UART_Printf
  1075  075F  0845               	movf	??_UART_Printf,w
  1076  0760  07D8               	addwf	UART_Printf@argp,f
  1077                           
  1078                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1079  0761  0A57               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1080  0762  1D03               	btfss	3,2
  1081  0763  2F68               	goto	l1171
  1082                           
  1083                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  1084  0764  3010               	movlw	16
  1085  0765  00C5               	movwf	??_UART_Printf
  1086  0766  0845               	movf	??_UART_Printf,w
  1087  0767  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1088  0768                     l1171:	
  1089                           
  1090                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1091  0768  0853               	movf	UART_Printf@v_num_u16,w
  1092  0769  00A4               	movwf	UART_TxNumber@v_number_u32
  1093  076A  0854               	movf	UART_Printf@v_num_u16+1,w
  1094  076B  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1095  076C  01A6               	clrf	UART_TxNumber@v_number_u32+2
  1096  076D  01A7               	clrf	UART_TxNumber@v_number_u32+3
  1097  076E  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1098  076F  00C5               	movwf	??_UART_Printf
  1099  0770  0845               	movf	??_UART_Printf,w
  1100  0771  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1101  0772  3002               	movlw	2
  1102  0773  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1103                           
  1104                           ;uart.c: 512: break;
  1105  0778  2FF5               	goto	l1197
  1106  0779                     l1173:	
  1107                           ;uart.c: 514: case 'B':
  1108                           
  1109                           
  1110                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1111  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1112  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1113  077B  0858               	movf	UART_Printf@argp,w
  1114  077C  0084               	movwf	4
  1115  077D  1383               	bcf	3,7	;select IRP bank0
  1116  077E  0800               	movf	0,w
  1117  077F  00CF               	movwf	UART_Printf@v_num_u32
  1118  0780  0A84               	incf	4,f
  1119  0781  0800               	movf	0,w
  1120  0782  00D0               	movwf	UART_Printf@v_num_u32+1
  1121  0783  0A84               	incf	4,f
  1122  0784  0800               	movf	0,w
  1123  0785  00D1               	movwf	UART_Printf@v_num_u32+2
  1124  0786  0A84               	incf	4,f
  1125  0787  0800               	movf	0,w
  1126  0788  00D2               	movwf	UART_Printf@v_num_u32+3
  1127  0789  3004               	movlw	4
  1128  078A  00C5               	movwf	??_UART_Printf
  1129  078B  0845               	movf	??_UART_Printf,w
  1130  078C  07D8               	addwf	UART_Printf@argp,f
  1131                           
  1132                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1133  078D  0A57               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1134  078E  1D03               	btfss	3,2
  1135  078F  2F94               	goto	l1181
  1136                           
  1137                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  1138  0790  3020               	movlw	32
  1139  0791  00C5               	movwf	??_UART_Printf
  1140  0792  0845               	movf	??_UART_Printf,w
  1141  0793  00D7               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8
  1142  0794                     l1181:	
  1143                           
  1144                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1145  0794  0852               	movf	UART_Printf@v_num_u32+3,w
  1146  0795  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1147  0796  0851               	movf	UART_Printf@v_num_u32+2,w
  1148  0797  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1149  0798  0850               	movf	UART_Printf@v_num_u32+1,w
  1150  0799  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1151  079A  084F               	movf	UART_Printf@v_num_u32,w
  1152  079B  00A4               	movwf	UART_TxNumber@v_number_u32
  1153  079C  0857               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w
  1154  079D  00C5               	movwf	??_UART_Printf
  1155  079E  0845               	movf	??_UART_Printf,w
  1156  079F  00A8               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8
  1157  07A0  3002               	movlw	2
  1158  07A1  120A  118A  24F5  120A  118A  	fcall	_UART_TxNumber
  1159                           
  1160                           ;uart.c: 525: case 'f':
  1161                           ;uart.c: 530: break;
  1162                           
  1163                           ;uart.c: 524: case 'F':
  1164                           
  1165                           ;uart.c: 521: break;
  1166  07A6  2FF5               	goto	l1197
  1167  07A7                     l1183:	
  1168                           ;uart.c: 533: case 'S':
  1169                           
  1170                           
  1171                           ;uart.c: 534: case 's':
  1172                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1173  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1174  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1175  07A9  0858               	movf	UART_Printf@argp,w
  1176  07AA  0084               	movwf	4
  1177  07AB  1383               	bcf	3,7	;select IRP bank0
  1178  07AC  0800               	movf	0,w
  1179  07AD  00C5               	movwf	??_UART_Printf
  1180  07AE  0845               	movf	??_UART_Printf,w
  1181  07AF  00C7               	movwf	UART_Printf@str
  1182  07B0  3001               	movlw	1
  1183  07B1  00C5               	movwf	??_UART_Printf
  1184  07B2  0845               	movf	??_UART_Printf,w
  1185  07B3  07D8               	addwf	UART_Printf@argp,f
  1186                           
  1187                           ;uart.c: 536: UART_TxString(str);
  1188  07B4  0847               	movf	UART_Printf@str,w
  1189  07B5  120A  118A  23C4  120A  118A  	fcall	_UART_TxString
  1190                           
  1191                           ;uart.c: 537: break;
  1192  07BA  2FF5               	goto	l1197
  1193  07BB                     l1189:	
  1194                           ;uart.c: 539: case '%':
  1195                           
  1196                           
  1197                           ;uart.c: 540: UART_TxChar('%');
  1198  07BB  3025               	movlw	37
  1199  07BC  2FF0               	goto	L1
  1200  07BD                     l1193:	
  1201                           ;uart.c: 542: }
  1202                           
  1203                           ;uart.c: 541: break;
  1204                           
  1205  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1206  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1207  07BF  0856               	movf	UART_Printf@ch,w
  1208                           
  1209                           ; Switch size 1, requested type "space"
  1210                           ; Number of cases is 15, Range of values is 37 to 120
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte           46    24 (average)
  1214                           ; direct_byte          263    11 (fixed)
  1215                           ; jumptable            263     9 (fixed)
  1216                           ;	Chosen strategy is simple_byte
  1217  07C0  3A25               	xorlw	37	; case 37
  1218  07C1  1903               	skipnz
  1219  07C2  2FBB               	goto	l1189
  1220  07C3  3A67               	xorlw	103	; case 66
  1221  07C4  1903               	skipnz
  1222  07C5  2F79               	goto	l1173
  1223  07C6  3A01               	xorlw	1	; case 67
  1224  07C7  1903               	skipnz
  1225  07C8  2E4E               	goto	l1109
  1226  07C9  3A07               	xorlw	7	; case 68
  1227  07CA  1903               	skipnz
  1228  07CB  2E8B               	goto	l1127
  1229  07CC  3A02               	xorlw	2	; case 70
  1230  07CD  1903               	skipnz
  1231  07CE  2FF5               	goto	l1197
  1232  07CF  3A15               	xorlw	21	; case 83
  1233  07D0  1903               	skipnz
  1234  07D1  2FA7               	goto	l1183
  1235  07D2  3A06               	xorlw	6	; case 85
  1236  07D3  1903               	skipnz
  1237  07D4  2EE6               	goto	l1145
  1238  07D5  3A0D               	xorlw	13	; case 88
  1239  07D6  1903               	skipnz
  1240  07D7  2F2C               	goto	l1157
  1241  07D8  3A3A               	xorlw	58	; case 98
  1242  07D9  1903               	skipnz
  1243  07DA  2F53               	goto	l1163
  1244  07DB  3A01               	xorlw	1	; case 99
  1245  07DC  1903               	skipnz
  1246  07DD  2E4E               	goto	l1109
  1247  07DE  3A07               	xorlw	7	; case 100
  1248  07DF  1903               	skipnz
  1249  07E0  2E5A               	goto	l1115
  1250  07E1  3A02               	xorlw	2	; case 102
  1251  07E2  1903               	skipnz
  1252  07E3  2FF5               	goto	l1197
  1253  07E4  3A15               	xorlw	21	; case 115
  1254  07E5  1903               	skipnz
  1255  07E6  2FA7               	goto	l1183
  1256  07E7  3A06               	xorlw	6	; case 117
  1257  07E8  1903               	skipnz
  1258  07E9  2EC7               	goto	l1139
  1259  07EA  3A0D               	xorlw	13	; case 120
  1260  07EB  1903               	skipnz
  1261  07EC  2F0D               	goto	l1151
  1262  07ED  2FF5               	goto	l1197
  1263                           
  1264                           ;uart.c: 543: }
  1265  07EE  2FF5               	goto	l1197
  1266  07EF                     l1195:	
  1267                           
  1268                           ;uart.c: 544: else
  1269                           ;uart.c: 545: {
  1270                           ;uart.c: 547: UART_TxChar(ch);
  1271  07EF  0856               	movf	UART_Printf@ch,w
  1272  07F0                     L1:	
  1273  07F0  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
  1274  07F5                     l1197:	
  1275  07F5  3001               	movlw	1
  1276  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  1277  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  1278  07F8  00C5               	movwf	??_UART_Printf
  1279  07F9  0845               	movf	??_UART_Printf,w
  1280  07FA  07D5               	addwf	UART_Printf@ptr,f
  1281  07FB  2DF2               	goto	l1199
  1282  07FC                     __end_of_UART_Printf:	
  1283                           
  1284                           	psect	text2
  1285  03C4                     __ptext2:	
  1286 ;; *************** function _UART_TxString *****************
  1287 ;; Defined at:
  1288 ;;		line 169 in file "../00-libfiles/uart.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  ptr_string      1    wreg     PTR const unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  ptr_string      1    2[COMMON] PTR const unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         1       0       0       0       0
  1304 ;;      Temps:          1       0       0       0       0
  1305 ;;      Totals:         2       0       0       0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		_UART_TxChar
  1311 ;; This function is called by:
  1312 ;;		_UART_Printf
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _UART_TxString
  1318  03C4                     _UART_TxString:	
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1322                           ;UART_TxString@ptr_string stored from wreg
  1323  03C4  00F2               	movwf	UART_TxString@ptr_string
  1324  03C5                     l1001:	
  1325                           ;uart.c: 171: while(*ptr_string)
  1326                           
  1327  03C5  0872               	movf	UART_TxString@ptr_string,w
  1328  03C6  0084               	movwf	4
  1329  03C7  1383               	bcf	3,7	;select IRP bank0
  1330  03C8  0800               	movf	0,w
  1331  03C9  1903               	btfsc	3,2
  1332  03CA  0008               	return
  1333                           
  1334                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1335  03CB  0872               	movf	UART_TxString@ptr_string,w
  1336  03CC  0084               	movwf	4
  1337  03CD  1383               	bcf	3,7	;select IRP bank0
  1338  03CE  0800               	movf	0,w
  1339  03CF  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
  1340  03D4  3001               	movlw	1
  1341  03D5  00F1               	movwf	??_UART_TxString
  1342  03D6  0871               	movf	??_UART_TxString,w
  1343  03D7  07F2               	addwf	UART_TxString@ptr_string,f
  1344  03D8  2BC5               	goto	l1001
  1345  03D9                     __end_of_UART_TxString:	
  1346                           
  1347                           	psect	text3
  1348  04F5                     __ptext3:	
  1349 ;; *************** function _UART_TxNumber *****************
  1350 ;; Defined at:
  1351 ;;		line 260 in file "../00-libfiles/uart.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  v_numericSys    1    wreg     unsigned char 
  1354 ;;  v_number_u32    4    4[BANK0 ] unsigned long 
  1355 ;;  v_numOfDigit    1    8[BANK0 ] unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  v_numericSys    1   33[BANK0 ] unsigned char 
  1358 ;;  a              10   21[BANK0 ] unsigned char [10]
  1359 ;;  i               1   34[BANK0 ] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       5       0       0       0
  1370 ;;      Locals:         0      14       0       0       0
  1371 ;;      Temps:          0      12       0       0       0
  1372 ;;      Totals:         0      31       0       0       0
  1373 ;;Total ram usage:       31 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    1
  1376 ;; This function calls:
  1377 ;;		_UART_TxChar
  1378 ;;		___bmul
  1379 ;;		___lldiv
  1380 ;; This function is called by:
  1381 ;;		_UART_Printf
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _UART_TxNumber
  1387  04F5                     _UART_TxNumber:	
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _UART_TxNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1391                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  1392  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1393  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1394  04F7  00C1               	movwf	UART_TxNumber@v_numericSystem_u8
  1395                           
  1396                           ;uart.c: 262: uint8_t i=0,a[10];
  1397  04F8  01C2               	clrf	UART_TxNumber@i
  1398                           
  1399                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  1400  04F9  3002               	movlw	2
  1401  04FA  0641               	xorwf	UART_TxNumber@v_numericSystem_u8,w
  1402  04FB  1903               	btfsc	3,2
  1403  04FC  2D3C               	goto	l1015
  1404  04FD  2D40               	goto	l1017
  1405  04FE                     l1009:	
  1406                           ;uart.c: 265: {
  1407                           ;uart.c: 266: while(v_numOfDigitsToTransmit_u8!=0)
  1408                           
  1409                           
  1410                           ;uart.c: 267: {
  1411                           ;uart.c: 270: i = (((v_number_u32)&((1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u);
  1412  04FE  0824               	movf	UART_TxNumber@v_number_u32,w
  1413  04FF  00A9               	movwf	??_UART_TxNumber
  1414  0500  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1415  0501  00AA               	movwf	??_UART_TxNumber+1
  1416  0502  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1417  0503  00AB               	movwf	??_UART_TxNumber+2
  1418  0504  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1419  0505  00AC               	movwf	??_UART_TxNumber+3
  1420  0506  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1421  0507  3EFF               	addlw	-1
  1422  0508  00AD               	movwf	??_UART_TxNumber+4
  1423  0509  0AAD               	incf	??_UART_TxNumber+4,f
  1424  050A  3001               	movlw	1
  1425  050B  00AE               	movwf	??_UART_TxNumber+5
  1426  050C  3000               	movlw	0
  1427  050D  00AF               	movwf	??_UART_TxNumber+6
  1428  050E  2D12               	goto	u634
  1429  050F                     u635:	
  1430  050F  1003               	clrc
  1431  0510  0DAE               	rlf	??_UART_TxNumber+5,f
  1432  0511  0DAF               	rlf	??_UART_TxNumber+6,f
  1433  0512                     u634:	
  1434  0512  0BAD               	decfsz	??_UART_TxNumber+4,f
  1435  0513  2D0F               	goto	u635
  1436  0514  082E               	movf	??_UART_TxNumber+5,w
  1437  0515  00B0               	movwf	??_UART_TxNumber+7
  1438  0516  082F               	movf	??_UART_TxNumber+6,w
  1439  0517  00B1               	movwf	??_UART_TxNumber+8
  1440  0518  3000               	movlw	0
  1441  0519  1BB1               	btfsc	??_UART_TxNumber+8,7
  1442  051A  30FF               	movlw	255
  1443  051B  00B2               	movwf	??_UART_TxNumber+9
  1444  051C  00B3               	movwf	??_UART_TxNumber+10
  1445  051D  0830               	movf	??_UART_TxNumber+7,w
  1446  051E  05A9               	andwf	??_UART_TxNumber,f
  1447  051F  0831               	movf	??_UART_TxNumber+8,w
  1448  0520  05AA               	andwf	??_UART_TxNumber+1,f
  1449  0521  0832               	movf	??_UART_TxNumber+9,w
  1450  0522  05AB               	andwf	??_UART_TxNumber+2,f
  1451  0523  0833               	movf	??_UART_TxNumber+10,w
  1452  0524  05AC               	andwf	??_UART_TxNumber+3,f
  1453  0525  082C               	movf	??_UART_TxNumber+3,w
  1454  0526  042B               	iorwf	??_UART_TxNumber+2,w
  1455  0527  042A               	iorwf	??_UART_TxNumber+1,w
  1456  0528  0429               	iorwf	??_UART_TxNumber,w
  1457  0529  1903               	btfsc	3,2
  1458  052A  2D2D               	goto	u640
  1459  052B  3001               	movlw	1
  1460  052C  2D2E               	goto	u650
  1461  052D                     u640:	
  1462  052D  3000               	movlw	0
  1463  052E                     u650:	
  1464  052E  00B4               	movwf	??_UART_TxNumber+11
  1465  052F  0834               	movf	??_UART_TxNumber+11,w
  1466  0530  00C2               	movwf	UART_TxNumber@i
  1467                           
  1468                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  1469  0531  0842               	movf	UART_TxNumber@i,w
  1470  0532  3E30               	addlw	48
  1471  0533  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
  1472                           
  1473                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  1474  0538  3001               	movlw	1
  1475  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1476  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1477  053B  02A8               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f
  1478  053C                     l1015:	
  1479  053C  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1480  053D  1903               	btfsc	3,2
  1481  053E  0008               	return
  1482  053F  2CFE               	goto	l1009
  1483  0540                     l1017:	
  1484                           ;uart.c: 273: }
  1485                           ;uart.c: 274: }
  1486                           
  1487                           
  1488                           ;uart.c: 275: else if(v_number_u32==0)
  1489  0540  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1490  0541  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  1491  0542  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  1492  0543  0424               	iorwf	UART_TxNumber@v_number_u32,w
  1493  0544  1D03               	skipz
  1494  0545  2D4B               	goto	l1021
  1495                           
  1496                           ;uart.c: 276: {
  1497                           ;uart.c: 280: UART_TxChar('0');
  1498  0546  3030               	movlw	48
  1499  0547  120A  118A  239D   	fcall	_UART_TxChar
  1500                           
  1501                           ;uart.c: 281: }
  1502  054A  0008               	return
  1503  054B                     l1021:	
  1504                           
  1505                           ;uart.c: 282: else
  1506                           ;uart.c: 283: {
  1507                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  1508  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1509  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1510  054D  01C2               	clrf	UART_TxNumber@i
  1511  054E                     l1039:	
  1512  054E  0828               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1513  054F  0242               	subwf	UART_TxNumber@i,w
  1514  0550  1803               	btfsc	3,0
  1515  0551  2DE3               	goto	l1051
  1516                           
  1517                           ;uart.c: 285: {
  1518                           ;uart.c: 288: if(v_number_u32!=0)
  1519  0552  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1520  0553  0426               	iorwf	UART_TxNumber@v_number_u32+2,w
  1521  0554  0425               	iorwf	UART_TxNumber@v_number_u32+1,w
  1522  0555  0424               	iorwf	UART_TxNumber@v_number_u32,w
  1523  0556  1903               	skipnz
  1524  0557  2DAD               	goto	l1029
  1525                           
  1526                           ;uart.c: 289: {
  1527                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  1528  0558  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1529  0559  00A9               	movwf	??_UART_TxNumber
  1530  055A  0829               	movf	??_UART_TxNumber,w
  1531  055B  00A0               	movwf	___bmul@multiplicand
  1532  055C  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1533  055D  00F7               	movwf	___lldiv@dividend+3
  1534  055E  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1535  055F  00F6               	movwf	___lldiv@dividend+2
  1536  0560  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1537  0561  00F5               	movwf	___lldiv@dividend+1
  1538  0562  0824               	movf	UART_TxNumber@v_number_u32,w
  1539  0563  00F4               	movwf	___lldiv@dividend
  1540  0564  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1541  0565  00AA               	movwf	??_UART_TxNumber+1
  1542  0566  01AB               	clrf	??_UART_TxNumber+2
  1543  0567  01AC               	clrf	??_UART_TxNumber+3
  1544  0568  01AD               	clrf	??_UART_TxNumber+4
  1545  0569  082D               	movf	??_UART_TxNumber+4,w
  1546  056A  00F3               	movwf	___lldiv@divisor+3
  1547  056B  082C               	movf	??_UART_TxNumber+3,w
  1548  056C  00F2               	movwf	___lldiv@divisor+2
  1549  056D  082B               	movf	??_UART_TxNumber+2,w
  1550  056E  00F1               	movwf	___lldiv@divisor+1
  1551  056F  082A               	movf	??_UART_TxNumber+1,w
  1552  0570  00F0               	movwf	___lldiv@divisor
  1553  0571  120A  118A  2497  120A  118A  	fcall	___lldiv
  1554  0576  0870               	movf	?___lldiv,w
  1555  0577  120A  118A  23B1  120A  118A  	fcall	___bmul
  1556  057C  3AFF               	xorlw	255
  1557  057D  3E01               	addlw	1
  1558  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1559  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0580  0724               	addwf	UART_TxNumber@v_number_u32,w
  1561  0581  00AE               	movwf	??_UART_TxNumber+5
  1562  0582  0842               	movf	UART_TxNumber@i,w
  1563  0583  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1564  0584  0084               	movwf	4
  1565  0585  082E               	movf	??_UART_TxNumber+5,w
  1566  0586  1383               	bcf	3,7	;select IRP bank0
  1567  0587  0080               	movwf	0
  1568                           
  1569                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  1570  0588  0841               	movf	UART_TxNumber@v_numericSystem_u8,w
  1571  0589  00A9               	movwf	??_UART_TxNumber
  1572  058A  01AA               	clrf	??_UART_TxNumber+1
  1573  058B  01AB               	clrf	??_UART_TxNumber+2
  1574  058C  01AC               	clrf	??_UART_TxNumber+3
  1575  058D  082C               	movf	??_UART_TxNumber+3,w
  1576  058E  00F3               	movwf	___lldiv@divisor+3
  1577  058F  082B               	movf	??_UART_TxNumber+2,w
  1578  0590  00F2               	movwf	___lldiv@divisor+2
  1579  0591  082A               	movf	??_UART_TxNumber+1,w
  1580  0592  00F1               	movwf	___lldiv@divisor+1
  1581  0593  0829               	movf	??_UART_TxNumber,w
  1582  0594  00F0               	movwf	___lldiv@divisor
  1583  0595  0827               	movf	UART_TxNumber@v_number_u32+3,w
  1584  0596  00F7               	movwf	___lldiv@dividend+3
  1585  0597  0826               	movf	UART_TxNumber@v_number_u32+2,w
  1586  0598  00F6               	movwf	___lldiv@dividend+2
  1587  0599  0825               	movf	UART_TxNumber@v_number_u32+1,w
  1588  059A  00F5               	movwf	___lldiv@dividend+1
  1589  059B  0824               	movf	UART_TxNumber@v_number_u32,w
  1590  059C  00F4               	movwf	___lldiv@dividend
  1591  059D  120A  118A  2497  120A  118A  	fcall	___lldiv
  1592  05A2  0873               	movf	?___lldiv+3,w
  1593  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1594  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1595  05A5  00A7               	movwf	UART_TxNumber@v_number_u32+3
  1596  05A6  0872               	movf	?___lldiv+2,w
  1597  05A7  00A6               	movwf	UART_TxNumber@v_number_u32+2
  1598  05A8  0871               	movf	?___lldiv+1,w
  1599  05A9  00A5               	movwf	UART_TxNumber@v_number_u32+1
  1600  05AA  0870               	movf	?___lldiv,w
  1601  05AB  00A4               	movwf	UART_TxNumber@v_number_u32
  1602                           
  1603                           ;uart.c: 298: }
  1604  05AC  2DB9               	goto	l1037
  1605  05AD                     l1029:	
  1606                           
  1607                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  1608                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  1609  05AD  0A28               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1610  05AE  1903               	btfsc	3,2
  1611  05AF  2DE3               	goto	l1051
  1612  05B0  300B               	movlw	11
  1613  05B1  0228               	subwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w
  1614  05B2  1803               	btfsc	3,0
  1615  05B3  2DE3               	goto	l1051
  1616                           
  1617                           ;uart.c: 306: else
  1618                           ;uart.c: 307: {
  1619                           ;uart.c: 311: a[i]=0;
  1620                           
  1621                           ;uart.c: 305: }
  1622                           
  1623                           ;uart.c: 301: {
  1624                           ;uart.c: 304: break;
  1625  05B4  0842               	movf	UART_TxNumber@i,w
  1626  05B5  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1627  05B6  0084               	movwf	4
  1628  05B7  1383               	bcf	3,7	;select IRP bank0
  1629  05B8  0180               	clrf	0
  1630  05B9                     l1037:	
  1631  05B9  3001               	movlw	1
  1632  05BA  00A9               	movwf	??_UART_TxNumber
  1633  05BB  0829               	movf	??_UART_TxNumber,w
  1634  05BC  07C2               	addwf	UART_TxNumber@i,f
  1635  05BD  2D4E               	goto	l1039
  1636  05BE                     l1041:	
  1637                           ;uart.c: 312: }
  1638                           ;uart.c: 313: }
  1639                           ;uart.c: 315: while(i)
  1640                           
  1641                           
  1642                           ;uart.c: 316: {
  1643                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  1644  05BE  0842               	movf	UART_TxNumber@i,w
  1645  05BF  3EFF               	addlw	255
  1646  05C0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1647  05C1  0084               	movwf	4
  1648  05C2  300A               	movlw	10
  1649  05C3  1383               	bcf	3,7	;select IRP bank0
  1650  05C4  0200               	subwf	0,w
  1651  05C5  1803               	skipnc
  1652  05C6  2DCE               	goto	l1045
  1653  05C7  0842               	movf	UART_TxNumber@i,w
  1654  05C8  3EFF               	addlw	255
  1655  05C9  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1656  05CA  0084               	movwf	4
  1657  05CB  0800               	movf	0,w
  1658  05CC  3E30               	addlw	48
  1659  05CD  2DD4               	goto	L2
  1660  05CE                     l1045:	
  1661  05CE  0842               	movf	UART_TxNumber@i,w
  1662  05CF  3EFF               	addlw	255
  1663  05D0  3E35               	addlw	(low (UART_TxNumber@a| 0))& (0+255)
  1664  05D1  0084               	movwf	4
  1665  05D2  0800               	movf	0,w
  1666  05D3  3E37               	addlw	55
  1667  05D4                     L2:	
  1668  05D4  00BF               	movwf	_UART_TxNumber$82
  1669  05D5  3000               	movlw	0
  1670  05D6  1803               	skipnc
  1671  05D7  3001               	movlw	1
  1672  05D8  00C0               	movwf	_UART_TxNumber$82+1
  1673  05D9  083F               	movf	_UART_TxNumber$82,w
  1674  05DA  120A  118A  239D  120A  118A  	fcall	_UART_TxChar
  1675                           
  1676                           ;uart.c: 319: i--;
  1677  05DF  3001               	movlw	1
  1678  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1679  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1680  05E2  02C2               	subwf	UART_TxNumber@i,f
  1681  05E3                     l1051:	
  1682  05E3  0842               	movf	UART_TxNumber@i,w
  1683  05E4  1903               	btfsc	3,2
  1684  05E5  0008               	return
  1685  05E6  2DBE               	goto	l1041
  1686  05E7                     __end_of_UART_TxNumber:	
  1687                           
  1688                           	psect	text4
  1689  03B1                     __ptext4:	
  1690 ;; *************** function ___bmul *****************
  1691 ;; Defined at:
  1692 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\Umul8.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  multiplier      1    wreg     unsigned char 
  1695 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1698 ;;  product         1    2[BANK0 ] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      unsigned char 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       1       0       0       0
  1709 ;;      Locals:         0       2       0       0       0
  1710 ;;      Temps:          0       1       0       0       0
  1711 ;;      Totals:         0       4       0       0       0
  1712 ;;Total ram usage:        4 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_UART_TxNumber
  1718 ;;		_UART_Printf
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function ___bmul
  1724  03B1                     ___bmul:	
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1728                           ;___bmul@multiplier stored from wreg
  1729  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1730  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1731  03B3  00A3               	movwf	___bmul@multiplier
  1732  03B4  01A2               	clrf	___bmul@product
  1733  03B5                     l945:	
  1734  03B5  1C23               	btfss	___bmul@multiplier,0
  1735  03B6  2BBB               	goto	l949
  1736  03B7  0820               	movf	___bmul@multiplicand,w
  1737  03B8  00A1               	movwf	??___bmul
  1738  03B9  0821               	movf	??___bmul,w
  1739  03BA  07A2               	addwf	___bmul@product,f
  1740  03BB                     l949:	
  1741  03BB  1003               	clrc
  1742  03BC  0DA0               	rlf	___bmul@multiplicand,f
  1743  03BD  1003               	clrc
  1744  03BE  0CA3               	rrf	___bmul@multiplier,f
  1745  03BF  0823               	movf	___bmul@multiplier,w
  1746  03C0  1D03               	btfss	3,2
  1747  03C1  2BB5               	goto	l945
  1748  03C2  0822               	movf	___bmul@product,w
  1749  03C3  0008               	return
  1750  03C4                     __end_of___bmul:	
  1751                           
  1752                           	psect	text5
  1753  039D                     __ptext5:	
  1754 ;; *************** function _UART_TxChar *****************
  1755 ;; Defined at:
  1756 ;;		line 145 in file "../00-libfiles/uart.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  v_uartData_u    1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  v_uartData_u    1    0[COMMON] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         1       0       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_UART_TxString
  1780 ;;		_UART_TxNumber
  1781 ;;		_UART_Printf
  1782 ;;		_UART_RxString
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _UART_TxChar
  1788  039D                     _UART_TxChar:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _UART_TxChar: [wreg]
  1792                           ;UART_TxChar@v_uartData_u8 stored from wreg
  1793  039D  00F0               	movwf	UART_TxChar@v_uartData_u8
  1794  039E                     l82:	
  1795                           ;uart.c: 147: while(TXIF==0);
  1796                           
  1797  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1798  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1799  03A0  1E0C               	btfss	12,4	;volatile
  1800  03A1  2B9E               	goto	l82
  1801                           
  1802                           ;uart.c: 148: TXIF=0;
  1803  03A2  120C               	bcf	12,4	;volatile
  1804                           
  1805                           ;uart.c: 149: TXREG=v_uartData_u8;
  1806  03A3  0870               	movf	UART_TxChar@v_uartData_u8,w
  1807  03A4  0099               	movwf	25	;volatile
  1808  03A5  0008               	return
  1809  03A6                     __end_of_UART_TxChar:	
  1810                           
  1811                           	psect	text6
  1812  03D9                     __ptext6:	
  1813 ;; *************** function _UART_Init *****************
  1814 ;; Defined at:
  1815 ;;		line 66 in file "../00-libfiles/uart.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  v_baudRate_u    4   10[BANK0 ] unsigned long 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       4       0       0       0
  1830 ;;      Locals:         0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0
  1832 ;;      Totals:         0       4       0       0       0
  1833 ;;Total ram usage:        4 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    2
  1836 ;; This function calls:
  1837 ;;		_UART_SetBaudRate
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _UART_Init
  1845  03D9                     _UART_Init:	
  1846                           
  1847                           ;uart.c: 68: TRISC=0x80;
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1851  03D9  3080               	movlw	128
  1852  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1853  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1854  03DC  0087               	movwf	7	;volatile
  1855                           
  1856                           ;uart.c: 69: TXSTA=0x20;
  1857  03DD  3020               	movlw	32
  1858  03DE  0098               	movwf	24	;volatile
  1859                           
  1860                           ;uart.c: 70: RCSTA=0x90;
  1861  03DF  3090               	movlw	144
  1862  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1863  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1864  03E2  0098               	movwf	24	;volatile
  1865                           
  1866                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  1867  03E3  082D               	movf	UART_Init@v_baudRate_u32+3,w
  1868  03E4  00A3               	movwf	UART_SetBaudRate@v_baudRate_u32+3
  1869  03E5  082C               	movf	UART_Init@v_baudRate_u32+2,w
  1870  03E6  00A2               	movwf	UART_SetBaudRate@v_baudRate_u32+2
  1871  03E7  082B               	movf	UART_Init@v_baudRate_u32+1,w
  1872  03E8  00A1               	movwf	UART_SetBaudRate@v_baudRate_u32+1
  1873  03E9  082A               	movf	UART_Init@v_baudRate_u32,w
  1874  03EA  00A0               	movwf	UART_SetBaudRate@v_baudRate_u32
  1875  03EB  120A  118A  243E   	fcall	_UART_SetBaudRate
  1876  03EE  0008               	return
  1877  03EF                     __end_of_UART_Init:	
  1878                           
  1879                           	psect	text7
  1880  043E                     __ptext7:	
  1881 ;; *************** function _UART_SetBaudRate *****************
  1882 ;; Defined at:
  1883 ;;		line 91 in file "../00-libfiles/uart.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  v_baudRate_u    4    0[BANK0 ] unsigned long 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  RegValue        1    9[BANK0 ] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       4       0       0       0
  1898 ;;      Locals:         0       1       0       0       0
  1899 ;;      Temps:          0       5       0       0       0
  1900 ;;      Totals:         0      10       0       0       0
  1901 ;;Total ram usage:       10 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    1
  1904 ;; This function calls:
  1905 ;;		___lldiv
  1906 ;; This function is called by:
  1907 ;;		_UART_Init
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _UART_SetBaudRate
  1913  043E                     _UART_SetBaudRate:	
  1914                           
  1915                           ;uart.c: 93: uint8_t RegValue;
  1916                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _UART_SetBaudRate: [wreg+status,2+status,0+pclath+cstack]
  1920  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1921  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0440  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  1923  0441  1D03               	btfss	3,2
  1924  0442  2C50               	goto	l989
  1925  0443  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  1926  0444  1D03               	btfss	3,2
  1927  0445  2C50               	goto	l989
  1928  0446  3009               	movlw	9
  1929  0447  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  1930  0448  1D03               	skipz
  1931  0449  2C4E               	goto	u583
  1932  044A  3060               	movlw	96
  1933  044B  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  1934  044C  1D03               	skipz
  1935  044D  2C4E               	goto	u583
  1936  044E                     u583:	
  1937  044E  1C03               	btfss	3,0
  1938  044F  2C8E               	goto	l993
  1939  0450                     l989:	
  1940  0450  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  1941  0451  1D03               	btfss	3,2
  1942  0452  2C8E               	goto	l993
  1943  0453  3001               	movlw	1
  1944  0454  0222               	subwf	UART_SetBaudRate@v_baudRate_u32+2,w
  1945  0455  1D03               	skipz
  1946  0456  2C5F               	goto	u593
  1947  0457  30C2               	movlw	194
  1948  0458  0221               	subwf	UART_SetBaudRate@v_baudRate_u32+1,w
  1949  0459  1D03               	skipz
  1950  045A  2C5F               	goto	u593
  1951  045B  3001               	movlw	1
  1952  045C  0220               	subwf	UART_SetBaudRate@v_baudRate_u32,w
  1953  045D  1D03               	skipz
  1954  045E  2C5F               	goto	u593
  1955  045F                     u593:	
  1956  045F  1803               	btfsc	3,0
  1957  0460  2C8E               	goto	l993
  1958                           
  1959                           ;uart.c: 96: {
  1960                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  1961  0461  0820               	movf	UART_SetBaudRate@v_baudRate_u32,w
  1962  0462  00A4               	movwf	??_UART_SetBaudRate
  1963  0463  0821               	movf	UART_SetBaudRate@v_baudRate_u32+1,w
  1964  0464  00A5               	movwf	??_UART_SetBaudRate+1
  1965  0465  0822               	movf	UART_SetBaudRate@v_baudRate_u32+2,w
  1966  0466  00A6               	movwf	??_UART_SetBaudRate+2
  1967  0467  0823               	movf	UART_SetBaudRate@v_baudRate_u32+3,w
  1968  0468  00A7               	movwf	??_UART_SetBaudRate+3
  1969  0469  3006               	movlw	6
  1970  046A                     u605:	
  1971  046A  1003               	clrc
  1972  046B  0DA4               	rlf	??_UART_SetBaudRate,f
  1973  046C  0DA5               	rlf	??_UART_SetBaudRate+1,f
  1974  046D  0DA6               	rlf	??_UART_SetBaudRate+2,f
  1975  046E  0DA7               	rlf	??_UART_SetBaudRate+3,f
  1976  046F  3EFF               	addlw	-1
  1977  0470  1D03               	skipz
  1978  0471  2C6A               	goto	u605
  1979  0472  0827               	movf	??_UART_SetBaudRate+3,w
  1980  0473  00F3               	movwf	___lldiv@divisor+3
  1981  0474  0826               	movf	??_UART_SetBaudRate+2,w
  1982  0475  00F2               	movwf	___lldiv@divisor+2
  1983  0476  0825               	movf	??_UART_SetBaudRate+1,w
  1984  0477  00F1               	movwf	___lldiv@divisor+1
  1985  0478  0824               	movf	??_UART_SetBaudRate,w
  1986  0479  00F0               	movwf	___lldiv@divisor
  1987  047A  3001               	movlw	1
  1988  047B  00F7               	movwf	___lldiv@dividend+3
  1989  047C  3031               	movlw	49
  1990  047D  00F6               	movwf	___lldiv@dividend+2
  1991  047E  302D               	movlw	45
  1992  047F  00F5               	movwf	___lldiv@dividend+1
  1993  0480  3000               	movlw	0
  1994  0481  00F4               	movwf	___lldiv@dividend
  1995  0482  120A  118A  2497  120A  118A  	fcall	___lldiv
  1996  0487  0870               	movf	?___lldiv,w
  1997  0488  3EFF               	addlw	255
  1998  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1999  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2000  048B  00A8               	movwf	??_UART_SetBaudRate+4
  2001  048C  0828               	movf	??_UART_SetBaudRate+4,w
  2002  048D  2C91               	goto	L3
  2003  048E                     l993:	
  2004                           ;uart.c: 100: }
  2005                           
  2006                           
  2007                           ;uart.c: 101: else
  2008                           ;uart.c: 102: {
  2009                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2010  048E  301F               	movlw	31
  2011  048F  00A4               	movwf	??_UART_SetBaudRate
  2012  0490  0824               	movf	??_UART_SetBaudRate,w
  2013  0491                     L3:	
  2014  0491  00A9               	movwf	UART_SetBaudRate@RegValue
  2015                           
  2016                           ;uart.c: 105: }
  2017                           ;uart.c: 107: SPBRG = RegValue;
  2018  0492  0829               	movf	UART_SetBaudRate@RegValue,w
  2019  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0495  0099               	movwf	25	;volatile
  2022  0496  0008               	return
  2023  0497                     __end_of_UART_SetBaudRate:	
  2024                           
  2025                           	psect	text8
  2026  0497                     __ptext8:	
  2027 ;; *************** function ___lldiv *****************
  2028 ;; Defined at:
  2029 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  divisor         4    0[COMMON] unsigned long 
  2032 ;;  dividend        4    4[COMMON] unsigned long 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  quotient        4    9[COMMON] unsigned long 
  2035 ;;  counter         1   13[COMMON] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  4    0[COMMON] unsigned long 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         8       0       0       0       0
  2046 ;;      Locals:         5       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0
  2048 ;;      Totals:        14       0       0       0       0
  2049 ;;Total ram usage:       14 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_UART_SetBaudRate
  2055 ;;		_UART_TxNumber
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function ___lldiv
  2061  0497                     ___lldiv:	
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2065  0497  3000               	movlw	0
  2066  0498  00FC               	movwf	___lldiv@quotient+3
  2067  0499  3000               	movlw	0
  2068  049A  00FB               	movwf	___lldiv@quotient+2
  2069  049B  3000               	movlw	0
  2070  049C  00FA               	movwf	___lldiv@quotient+1
  2071  049D  3000               	movlw	0
  2072  049E  00F9               	movwf	___lldiv@quotient
  2073  049F  0873               	movf	___lldiv@divisor+3,w
  2074  04A0  0472               	iorwf	___lldiv@divisor+2,w
  2075  04A1  0471               	iorwf	___lldiv@divisor+1,w
  2076  04A2  0470               	iorwf	___lldiv@divisor,w
  2077  04A3  1903               	skipnz
  2078  04A4  2CEC               	goto	l977
  2079  04A5  01FD               	clrf	___lldiv@counter
  2080  04A6  0AFD               	incf	___lldiv@counter,f
  2081  04A7                     l963:	
  2082  04A7  1BF3               	btfsc	___lldiv@divisor+3,7
  2083  04A8  2CB7               	goto	l965
  2084  04A9  3001               	movlw	1
  2085  04AA  00F8               	movwf	??___lldiv
  2086  04AB                     u515:	
  2087  04AB  1003               	clrc
  2088  04AC  0DF0               	rlf	___lldiv@divisor,f
  2089  04AD  0DF1               	rlf	___lldiv@divisor+1,f
  2090  04AE  0DF2               	rlf	___lldiv@divisor+2,f
  2091  04AF  0DF3               	rlf	___lldiv@divisor+3,f
  2092  04B0  0BF8               	decfsz	??___lldiv,f
  2093  04B1  2CAB               	goto	u515
  2094  04B2  3001               	movlw	1
  2095  04B3  00F8               	movwf	??___lldiv
  2096  04B4  0878               	movf	??___lldiv,w
  2097  04B5  07FD               	addwf	___lldiv@counter,f
  2098  04B6  2CA7               	goto	l963
  2099  04B7                     l965:	
  2100  04B7  3001               	movlw	1
  2101  04B8  00F8               	movwf	??___lldiv
  2102  04B9                     u535:	
  2103  04B9  1003               	clrc
  2104  04BA  0DF9               	rlf	___lldiv@quotient,f
  2105  04BB  0DFA               	rlf	___lldiv@quotient+1,f
  2106  04BC  0DFB               	rlf	___lldiv@quotient+2,f
  2107  04BD  0DFC               	rlf	___lldiv@quotient+3,f
  2108  04BE  0BF8               	decfsz	??___lldiv,f
  2109  04BF  2CB9               	goto	u535
  2110  04C0  0873               	movf	___lldiv@divisor+3,w
  2111  04C1  0277               	subwf	___lldiv@dividend+3,w
  2112  04C2  1D03               	skipz
  2113  04C3  2CCE               	goto	u545
  2114  04C4  0872               	movf	___lldiv@divisor+2,w
  2115  04C5  0276               	subwf	___lldiv@dividend+2,w
  2116  04C6  1D03               	skipz
  2117  04C7  2CCE               	goto	u545
  2118  04C8  0871               	movf	___lldiv@divisor+1,w
  2119  04C9  0275               	subwf	___lldiv@dividend+1,w
  2120  04CA  1D03               	skipz
  2121  04CB  2CCE               	goto	u545
  2122  04CC  0870               	movf	___lldiv@divisor,w
  2123  04CD  0274               	subwf	___lldiv@dividend,w
  2124  04CE                     u545:	
  2125  04CE  1C03               	skipc
  2126  04CF  2CDF               	goto	l973
  2127  04D0  0870               	movf	___lldiv@divisor,w
  2128  04D1  02F4               	subwf	___lldiv@dividend,f
  2129  04D2  0871               	movf	___lldiv@divisor+1,w
  2130  04D3  1C03               	skipc
  2131  04D4  0F71               	incfsz	___lldiv@divisor+1,w
  2132  04D5  02F5               	subwf	___lldiv@dividend+1,f
  2133  04D6  0872               	movf	___lldiv@divisor+2,w
  2134  04D7  1C03               	skipc
  2135  04D8  0F72               	incfsz	___lldiv@divisor+2,w
  2136  04D9  02F6               	subwf	___lldiv@dividend+2,f
  2137  04DA  0873               	movf	___lldiv@divisor+3,w
  2138  04DB  1C03               	skipc
  2139  04DC  0F73               	incfsz	___lldiv@divisor+3,w
  2140  04DD  02F7               	subwf	___lldiv@dividend+3,f
  2141  04DE  1479               	bsf	___lldiv@quotient,0
  2142  04DF                     l973:	
  2143  04DF  3001               	movlw	1
  2144  04E0                     u555:	
  2145  04E0  1003               	clrc
  2146  04E1  0CF3               	rrf	___lldiv@divisor+3,f
  2147  04E2  0CF2               	rrf	___lldiv@divisor+2,f
  2148  04E3  0CF1               	rrf	___lldiv@divisor+1,f
  2149  04E4  0CF0               	rrf	___lldiv@divisor,f
  2150  04E5  3EFF               	addlw	-1
  2151  04E6  1D03               	skipz
  2152  04E7  2CE0               	goto	u555
  2153  04E8  3001               	movlw	1
  2154  04E9  02FD               	subwf	___lldiv@counter,f
  2155  04EA  1D03               	btfss	3,2
  2156  04EB  2CB7               	goto	l965
  2157  04EC                     l977:	
  2158  04EC  087C               	movf	___lldiv@quotient+3,w
  2159  04ED  00F3               	movwf	?___lldiv+3
  2160  04EE  087B               	movf	___lldiv@quotient+2,w
  2161  04EF  00F2               	movwf	?___lldiv+2
  2162  04F0  087A               	movf	___lldiv@quotient+1,w
  2163  04F1  00F1               	movwf	?___lldiv+1
  2164  04F2  0879               	movf	___lldiv@quotient,w
  2165  04F3  00F0               	movwf	?___lldiv
  2166  04F4  0008               	return
  2167  04F5                     __end_of___lldiv:	
  2168                           
  2169                           	psect	text9
  2170  0395                     __ptext9:	
  2171 ;; *************** function _ADC_Init *****************
  2172 ;; Defined at:
  2173 ;;		line 54 in file "../00-libfiles/adc.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _ADC_Init
  2202  0395                     _ADC_Init:	
  2203                           
  2204                           ;adc.c: 56: ADCON0=0x00;
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _ADC_Init: [wreg+status,2]
  2208  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0397  019F               	clrf	31	;volatile
  2211                           
  2212                           ;adc.c: 57: ADCON1=0x80;
  2213  0398  3080               	movlw	128
  2214  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2215  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2216  039B  009F               	movwf	31	;volatile
  2217  039C  0008               	return
  2218  039D                     __end_of_ADC_Init:	
  2219                           
  2220                           	psect	text10
  2221  03EF                     __ptext10:	
  2222 ;; *************** function _ADC_GetAdcValue *****************
  2223 ;; Defined at:
  2224 ;;		line 76 in file "../00-libfiles/adc.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  var_adcChann    1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  var_adcChann    1    5[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    2[COMMON] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         2       0       0       0       0
  2239 ;;      Locals:         1       0       0       0       0
  2240 ;;      Temps:          1       0       0       0       0
  2241 ;;      Totals:         4       0       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		_DELAY_us
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _ADC_GetAdcValue
  2254  03EF                     _ADC_GetAdcValue:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _ADC_GetAdcValue: [wreg+status,2+status,0+pclath+cstack]
  2258                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  2259  03EF  00F5               	movwf	ADC_GetAdcValue@var_adcChannel_u8
  2260                           
  2261                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<3);
  2262  03F0  0875               	movf	ADC_GetAdcValue@var_adcChannel_u8,w
  2263  03F1  00F4               	movwf	??_ADC_GetAdcValue
  2264  03F2  3002               	movlw	2
  2265  03F3                     u755:	
  2266  03F3  1003               	clrc
  2267  03F4  0DF4               	rlf	??_ADC_GetAdcValue,f
  2268  03F5  3EFF               	addlw	-1
  2269  03F6  1D03               	skipz
  2270  03F7  2BF3               	goto	u755
  2271  03F8  1003               	clrc
  2272  03F9  0D74               	rlf	??_ADC_GetAdcValue,w
  2273  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2274  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2275  03FC  009F               	movwf	31	;volatile
  2276                           
  2277                           ;adc.c: 80: ADON = 1;
  2278  03FD  141F               	bsf	31,0	;volatile
  2279                           
  2280                           ;adc.c: 81: DELAY_us(10);
  2281  03FE  300A               	movlw	10
  2282  03FF  00F0               	movwf	DELAY_us@us_count
  2283  0400  3000               	movlw	0
  2284  0401  00F1               	movwf	DELAY_us@us_count+1
  2285  0402  120A  118A  23A6  120A  118A  	fcall	_DELAY_us
  2286                           
  2287                           ;adc.c: 83: GO=1;
  2288  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0409  151F               	bsf	31,2	;volatile
  2291  040A                     l40:	
  2292                           ;adc.c: 84: while(GO_DONE==1);
  2293                           
  2294  040A  191F               	btfsc	31,2	;volatile
  2295  040B  2C0A               	goto	l40
  2296                           
  2297                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  2298  040C  081E               	movf	30,w	;volatile
  2299  040D  00F3               	movwf	?_ADC_GetAdcValue+1
  2300  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2301  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0410  081E               	movf	30,w	;volatile
  2303  0411  00F2               	movwf	?_ADC_GetAdcValue
  2304  0412  0008               	return
  2305  0413                     __end_of_ADC_GetAdcValue:	
  2306                           
  2307                           	psect	text11
  2308  03A6                     __ptext11:	
  2309 ;; *************** function _DELAY_us *****************
  2310 ;; Defined at:
  2311 ;;		line 56 in file "../00-libfiles/delay.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  us_count        2    0[COMMON] unsigned int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         2       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         2       0       0       0       0
  2329 ;;Total ram usage:        2 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_ADC_GetAdcValue
  2335 ;;		_DELAY_ms
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _DELAY_us
  2341  03A6                     _DELAY_us:	
  2342  03A6                     l985:	
  2343                           ;delay.c: 58: while (us_count != 0)
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  2347                           
  2348  03A6  0870               	movf	DELAY_us@us_count,w
  2349  03A7  0471               	iorwf	DELAY_us@us_count+1,w
  2350  03A8  1903               	btfsc	3,2
  2351  03A9  0008               	return
  2352                           
  2353                           ;delay.c: 59: {
  2354                           ;delay.c: 60: us_count--;
  2355  03AA  3001               	movlw	1
  2356  03AB  02F0               	subwf	DELAY_us@us_count,f
  2357  03AC  3000               	movlw	0
  2358  03AD  1C03               	skipc
  2359  03AE  03F1               	decf	DELAY_us@us_count+1,f
  2360  03AF  02F1               	subwf	DELAY_us@us_count+1,f
  2361  03B0  2BA6               	goto	l985
  2362  03B1                     __end_of_DELAY_us:	
  2363  007E                     btemp	set	126	;btemp
  2364  007E                     wtemp	set	126
  2365  007E                     wtemp0	set	126
  2366  0080                     wtemp1	set	128
  2367  0082                     wtemp2	set	130
  2368  0084                     wtemp3	set	132
  2369  0086                     wtemp4	set	134
  2370  0088                     wtemp5	set	136
  2371  007F                     wtemp6	set	127
  2372  007E                     ttemp	set	126
  2373  007E                     ttemp0	set	126
  2374  0081                     ttemp1	set	129
  2375  0084                     ttemp2	set	132
  2376  0087                     ttemp3	set	135
  2377  007F                     ttemp4	set	127
  2378  007E                     ltemp	set	126
  2379  007E                     ltemp0	set	126
  2380  0082                     ltemp1	set	130
  2381  0086                     ltemp2	set	134
  2382  0080                     ltemp3	set	128


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(1) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    UART_Printf@ptr	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    UART_Printf@argp	PTR void [1] size(1) Largest target is 1
		 -> ?_UART_Printf(BANK0[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    ___bmul->___lldiv
    _UART_SetBaudRate->___lldiv
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    _main->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxNumber->___bmul
    _UART_Init->_UART_SetBaudRate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4506
                                             57 BANK0      2     2      0
                    _ADC_GetAdcValue
                           _ADC_Init
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         22    20      2    3634
                                             35 BANK0     22    20      2
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     2      0      94
                                              1 COMMON     2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       31    26      5    2202
                                              4 BANK0     31    26      5
                        _UART_TxChar
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     198
                                              0 BANK0      4     3      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     698
                                             10 BANK0      4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                    10     6      4     623
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      4     2      2     151
                                              2 COMMON     4     2      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxNumber
       _UART_TxChar
       ___bmul
         ___lldiv (ARG)
       ___lldiv
     _UART_TxString
       _UART_TxChar
     ___bmul
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue May 03 10:32:00 2016

                                      pc 0002                           ___bmul@product 0022  
                            __CFG_CP$OFF 0000                                       l40 040A  
                                     l82 039E                                       _GO 00FA  
                                     fsr 0004                              __CFG_LVP$ON 0000  
                                    l176 0427                                      l945 03B5  
                                    l963 04A7                                      l973 04DF  
                                    l965 04B7                                      l949 03BB  
                                    l985 03A6                                      l977 04EC  
                                    l993 048E                                      l989 0450  
                           __CFG_CPD$OFF 0000                                      u515 04AB  
                                    u605 046A                                      u535 04B9  
                                    u640 052D                                      u545 04CE  
                                    u650 052E                                      u634 0512  
                                    u555 04E0                                      u635 050F  
                                    u583 044E                                      u593 045F  
                                    u755 03F3                                      fsr0 0004  
                                    indf 0000                             __CFG_FOSC$HS 0000  
                __end_of_ADC_GetAdcValue 0413                                     l1001 03C5  
                                   l1021 054B                                     l1015 053C  
                                   l1103 0621                                     l1041 05BE  
                                   l1009 04FE                                     l1017 0540  
                                   l1051 05E3                                     l1115 065A  
                                   l1107 0649                                     l1045 05CE  
                                   l1037 05B9                                     l1029 05AD  
                                   l1125 0675                                     l1109 064E  
                                   l1039 054E                                     l1151 070D  
                                   l1127 068B                                     l1145 06E6  
                                   l1137 06B2                                     l1171 0768  
                                   l1163 0753                                     l1139 06C7  
                                   l1181 0794                                     l1173 0779  
                                   l1157 072C                                     l1183 07A7  
                                   l1193 07BD                                     l1195 07EF  
                                   l1189 07BB                                     l1197 07F5  
                                   l1199 05F2                                     _ADON 00F8  
                                   STR_1 0009                                     _RCIF 0065  
                                   _TXIF 0064                             __CFG_WRT$OFF 0000  
                                   _main 0413                                     btemp 007E  
                       __end_of_ADC_Init 039D                             main@adcValue 0059  
                                   ltemp 007E                                     start 0000  
                                   ttemp 007E                                     wtemp 007E  
                       __end_of_DELAY_us 03B1                        ___bmul@multiplier 0023  
                                  ?_main 0070                            __CFG_WDTE$OFF 0000  
                        __end_of___lldiv 04F5                                    _RCREG 001A  
                                  _RCSTA 0018                                    _SPBRG 0099  
                                  _TRISC 0087                                    _TXREG 0019  
                                  _TXSTA 0098                       __size_of_UART_Init 0016  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                          __initialization 07FC  
                           __end_of_main 043E                                   ??_main 007E  
                       ?_ADC_GetAdcValue 0072                                   _ADCON0 001F  
                                 _ADCON1 009F                                   _ADRESH 001E  
                                 _ADRESL 009E                        ?_UART_SetBaudRate 0020  
                     ??_UART_SetBaudRate 0024                           __CFG_PWRTE$OFF 0000  
                           ?_UART_TxChar 0070                             ?_UART_Printf 0043  
                      __end_of_UART_Init 03EF                                   ___bmul 03B1  
                              ??___lldiv 0078  UART_TxNumber@v_numOfDigitsToTransmit_u8 0028  
                              ?_ADC_Init 0070                                ?_DELAY_us 0070  
                __end_of__initialization 07FC                    __end_of_UART_TxNumber 05E7  
                  __end_of_UART_TxString 03D9                      ___bmul@multiplicand 0020  
                         __pcstackCOMMON 0070                               ??_ADC_Init 0070  
                             ??_DELAY_us 0072                               __pmaintext 0413  
                                ?___bmul 0020                                  _GO_DONE 00FA  
                       DELAY_us@us_count 0070                               __stringtab 0003  
                   __size_of_UART_TxChar 0009                          __size_of___bmul 0013  
                   __size_of_UART_Printf 0215                                  ___lldiv 0497  
                                __ptext1 05E7                                  __ptext2 03C4  
                                __ptext3 04F5                                  __ptext4 03B1  
                                __ptext5 039D                                  __ptext6 03D9  
                                __ptext7 043E                                  __ptext8 0497  
                                __ptext9 0395                           UART_Printf@ptr 0055  
                         UART_Printf@str 0047                     end_of_initialization 07FC  
                         UART_TxNumber@a 0035                           UART_TxNumber@i 0042  
                        ___lldiv@divisor 0070                          ___lldiv@counter 007D  
         UART_SetBaudRate@v_baudRate_u32 0020                                _UART_Init 03D9  
              __size_of_UART_SetBaudRate 0059         ADC_GetAdcValue@var_adcChannel_u8 0075  
                      __size_of_ADC_Init 0008                        __size_of_DELAY_us 000B  
               __size_of_ADC_GetAdcValue 0024          UART_TxNumber@v_numericSystem_u8 0041  
                         __end_of___bmul 03C4                               ?_UART_Init 002A  
                    start_initialization 07FC                                 ??___bmul 0021  
                 __size_of_UART_TxNumber 00F2                                ___latbits 0002  
                 __size_of_UART_TxString 0015                            __pcstackBANK0 0020  
                               ?___lldiv 0070                        ??_ADC_GetAdcValue 0074  
                            ??_UART_Init 007E                         _UART_SetBaudRate 043E  
                              __pstrings 0003                                 _ADC_Init 0395  
                               _DELAY_us 03A6                            UART_Printf@ch 0056  
                          ??_UART_TxChar 0070                            _UART_TxNumber 04F5  
                          ??_UART_Printf 0045                            _UART_TxString 03C4  
                UART_Init@v_baudRate_u32 002A                  UART_TxString@ptr_string 0072  
                            __stringbase 0008                UART_TxNumber@v_number_u32 0024  
                         ?_UART_TxNumber 0024                           ?_UART_TxString 0070  
               UART_TxChar@v_uartData_u8 0070                         _UART_TxNumber$82 003F  
                    __end_of_UART_TxChar 03A6                         __size_of___lldiv 005E  
                    __end_of_UART_Printf 07FC                       __end_of__stringtab 0009  
                               __ptext10 03EF                                 __ptext11 03A6  
                          __size_of_main 002B                          UART_Printf@argp 0058  
               UART_SetBaudRate@RegValue 0029                          ??_UART_TxNumber 0029  
               __end_of_UART_SetBaudRate 0497                          _ADC_GetAdcValue 03EF  
                        ??_UART_TxString 0071                         ___lldiv@dividend 0074  
                              stringcode 0003                              _UART_TxChar 039D  
                            _UART_Printf 05E7                         ___lldiv@quotient 0079  
                               stringdir 0003                                 stringtab 0003  
  UART_Printf@v_numOfDigitsToTransmit_u8 0057                       UART_Printf@argList 0048  
                   UART_Printf@v_num_s16 004D                     UART_Printf@v_num_s32 0049  
                   UART_Printf@v_num_u16 0053                     UART_Printf@v_num_u32 004F  
